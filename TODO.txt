How it works so far
-------------------

Phoneme inventories are generated. The generation process tries to strive for natural-sounding inventories. There are separate consonant, vowel, and diphthong inventory generators.

Phonotactics rules are also generated. A sonority hierarchy is created. Valid consonant clusters for the onset and coda of syllables are generated.

A grammar system is generated. Parameters are selected.

An inflection scheme is selected. Grammatical categories are decided on as well as how they are expressed. Exponents and articles are some of the ways grammatical categories are expressed.

Morphemes (including roots) are generated from the phoneme inventory as well as the sonority hierarchy. The inflection scheme is filled in using this generator.

Meanings (given in English) are assigned a generated root word.

Nonsense ("Colorless green ideas sleep furiously") parse trees are generated and then translated into the language using the generated grammar, inflection, and vocab.

A writing system is selected and the appropriate number of characters are generated as .svg's.

All of the above structures are then parsed by a output function into a text output. This output includes a consonant inventory table, vowel inventory table, list of diphthongs, sonority hierarchy description, exponent/particle tables, a (root) dictionary, a grammar description as well as example sentences, a list of characters, and a folder of character .svg's.


What needs improving
--------------------
Phonology:
Everything.

Syntax:
.

Inflection:
A more-dynamic grammatical category generator

Morphology:
Various morphological systems.
Domesticated animal terminology.

Lexis:
Number system generator.
Color system generator.

Semantics:
Meanings should take from WordNet ideally.

What needs starting
-------------------

Phonetics:
Right now words are represented as a list of phonemes. The only output so far for a word is the "underlying" form. With a phonological rule generator the list of phonemes can be parsed into a list of phones which will allow the output to display the "surface" form of the word.
This would involve generating a list of phonological rules and then applying those rules in a certain order to each word. This runs counter to optimality theory, but it would be so much easier to implement.

Prosody:
iuno.
does poetry fit here? let's go with that.

Historical/Comparative linguistics:
Language changes. Given a language's components, morph those components in some way into a new language. Record the change.
Language families. Link languages morphed by language changes. Allow multiple offshoots of a single language.

See /doc for more (probably wrong) reading material.
