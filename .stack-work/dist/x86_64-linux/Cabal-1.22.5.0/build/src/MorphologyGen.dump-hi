
==================== FINAL INTERFACE ====================
2016-10-27 06:13:01.019575 UTC

interface conla_1eA9qWUPH9nBowcXqqaV8r:MorphologyGen 7103
  interface hash: 66f8a041a09df1a06f1bf80a13d329aa
  ABI hash: f928edf92ac044711d1144d924818ef0
  export-list hash: bc95151dbaa57e5a552160ef5b8dd48a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  MorphologyGen.cleanGrammarSys
  MorphologyGen.makePostParticleSystems
  MorphologyGen.makePreParticleSystems
  MorphologyGen.makePrefixSystems
  MorphologyGen.makeSuffixSystems
module dependencies: InflectionData InflectionGen OtherData
                     PhonemeData PhonemeGen PhonotacticsGen WordGen
package dependencies: MonadPrompt-1.0.0.5@Monad_5vpMHuuRBzi4bKjpRN3A9L
                      MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      erf-2.0.0.0@erf_6l78BnvLL4b2mWYp3HJJxX
                      flexible-defaults-0.0.1.2@flexi_70LqvhG3vbS8bRvV8pHtMk
                      ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      math-functions-0.1.7.0@mathf_BN6S7j0ar3LC4TsnYu0us5
                      mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L
                      random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      random-shuffle-0.0.4@rando_9kOz9tEn1526ShtWz8x59X
                      random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr
                      rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG
                      stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE template-haskell-2.10.0.0
                      th-extras-0.0.0.4@thext_LRY1RUMy7ShLl2tqhMyHdO
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz:Control.Monad.Random
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         conla_1eA9qWUPH9nBowcXqqaV8r:InflectionData
         mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.IO
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.MWC
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.PureMT
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.StdGen
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE:Data.Generics.Instances
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  InflectionData dfc2b52a55c6102297919706a64a0fc4
  exports: 84295a2aa554fe18c3d6540e0e817aca
  Animacy 733cd520a7c9e157df7c0aea38100a5a
  Aspect 3850d91a00b41f2f5240a98d717e8e72
  Case 3e30b77606116c9a528b5a2b5461d97b
  Clusivity c413fee28212168b6775aefd548e00c9
  Definiteness b9da224a5a14860d49d67b2859c0b465
  Evidentiality 81ef3758cd3f737f92a15566b4335acf
  Gender c5edda692e03a9e3df065b8d199e385d
  Honorific dfb063e584002de31fb83fb825dd29ff
  InflectionSystem a77baed6c20192b8f22b3dec38ab08b3
  Manifest 5526bd48d73d2306879b380053db6e88
  Manifest 14fec65287fdbb06ce4e9e396345475a
  ManifestSystem 5cbe6db833ae3aa93592b3769fcc5964
  Mood c8b893053b386faa19ee0015c2b817c2
  NoManifest ba8239be89dc838c187fab6b941ffac1
  Number 50da230f212270d0c1b92a32c3347c6c
  Person a2d676a93bd091804cbdfda78f682da8
  Polarity 760d4f86d6aad7519f1cff401393492d
  PostParticle f07697f1b24ac8991d64af37c14319f9
  PostParticleSystem 6f6bf6e5f5ec79bc9e3c2d5a21047784
  PreParticle 65af5bc08b49fbfb1bdf9041c872bc81
  PreParticleSystem 64e014574010d72e9663ac317bbfef55
  Prefix b289f5c0698695f8a048f6c64a2d9117
  PrefixSystem 0c7ff6ffe3f079ca98967d89c92df7ec
  Specificity ddf06519a04fe9d7312b057c3bf2a55a
  Suffix 88ff0f490e033563159edfaea583ad41
  SuffixSystem 1442c6d0f99121d306d1976b7e73f942
  Tense ef165a186fbafaf5cc0bbe099a4b91b0
  Topic ae01a43ac4566693ed520efc4ae942af
  Transitivity 771b2c7bf1a5cdb98a55ddd9b2879a4c
  Voice efe0567aac5cdd53235e250e93c9bff0
  Volition d7b9cc4c84b4eba4e706d67aa644c840
  aniSys ebbd5dac4586671c2ab3bdb1857380d3
  aspSys bef40311d53fce6d2e0eaf90bf037732
  casSys b3835102aba8cf24606f601e1d473e8b
  cluSys 4a234ac60619972ed818e008a4afe914
  defSys ac6a6b9f32cd0f07fb8c447673c66e7c
  eviSys f22958469441b5d2ff50bd9ce2a0b264
  genSys 975f89892bcfe3f47c3b35cfa8174f87
  honSys 949bc9b42706b2791331dd68ac592d28
  mooSys 1832180fcdfe6653270f0d17fdf81fa0
  numSys 29bb00d9e497c60b9a3e61fff6697abb
  perSys c9b40b4cf6fdaf61ee830a5101350153
  polSys 760602abd650e1446dc561af1f7226dc
  speSys 6b00508c29849609e879f981d4d7e2b6
  tenSys cbe4372a2163a0ac65b36d97702538b7
  topSys f2c45ab27985d0e4d27d3d9ec20605b7
  traSys 173e8b57af892a8018ada9d7ad3874d3
  voiSys 965f587afc177bd9b5b0f2b92932f449
  volSys 47b95d244c436bd9df28af9746faaf6d
import  -/  InflectionGen 7a5f2474a9677b88c2c56282ae171417
  exports: ca9b6ba47d73c9260d453af18131b8f1
import  -/  PhonemeData fc090a0bcda3a243800b6c4018b433c0
  exports: 6190a60b3ecf64d963416d84612d3413
  Phoneme b470252dd3c1b881fdcf6f5f8e488f7a
import  -/  WordGen 41cebf80bfe9a5c601e3f8f32a7f5690
  exports: 9dfefff67ac26aa86a6a1d79ec7432b6
  makeMorpheme 6ca6dfb0ccb54b1c229250f8a3afd966
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L:Data.Random.Extras 5dc1684f88e3f2655bfb5d7aca60bf5c
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random 355d6844bb1b3189cb19ec0007f6f130
import  -/  rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG:Data.RVar 9b7fbdb5f1778e76b8a65f45a17cccb1
2503a01e02577653a1bdb8cfa00f0b2f
  $sreplicateM2 ::
    [Data.RVar.RVarT Data.Functor.Identity.Identity a3]
    -> forall b.
       ([a3] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
3011a09e921a514958062f13feeff7d9
  $wmakePostParticleSystems ::
    GHC.Prim.Int#
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S,U><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: [0] -}
da1b2cb9b6f197641233dfbc9d8227a6
  $wmakePreParticleSystems ::
    GHC.Prim.Int#
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S,U><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: [0] -}
adf1f9811ca1835261617a47b75200c6
  $wmakePrefixSystems ::
    GHC.Prim.Int#
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S,U><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: [0] -}
cd44c09e721ea6d4b467b6226f5665b7
  $wmakeSuffixSystems ::
    GHC.Prim.Int#
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S,U><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: [0] -}
592ab01c04ef94575740157fc2723698
  cleanGrammarSys ::
    GHC.Types.Int
    -> InflectionData.InflectionSystem
    -> ([InflectionData.Manifest InflectionData.Gender],
        [InflectionData.Manifest InflectionData.Animacy],
        [InflectionData.Manifest InflectionData.Case],
        [InflectionData.Manifest InflectionData.Number],
        [InflectionData.Manifest InflectionData.Definiteness],
        [InflectionData.Manifest InflectionData.Specificity],
        [InflectionData.Manifest InflectionData.Topic],
        [InflectionData.Manifest InflectionData.Person],
        [InflectionData.Manifest InflectionData.Clusivity],
        [InflectionData.Manifest InflectionData.Honorific],
        [InflectionData.Manifest InflectionData.Polarity],
        [InflectionData.Manifest InflectionData.Tense],
        [InflectionData.Manifest InflectionData.Aspect],
        [InflectionData.Manifest InflectionData.Mood],
        [InflectionData.Manifest InflectionData.Voice],
        [InflectionData.Manifest InflectionData.Evidentiality],
        [InflectionData.Manifest InflectionData.Transitivity],
        [InflectionData.Manifest InflectionData.Volition])
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(U)><L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: (\ i :: GHC.Types.Int
                   gramSys :: InflectionData.InflectionSystem ->
                 (case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Gender i ds1 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Animacy i ds2 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Case i ds3 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Number i ds4 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Definiteness i ds5 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Specificity i ds6 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Topic i ds7 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Person i ds8 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Clusivity i ds9 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Honorific i ds10 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Polarity i ds11 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Tense i ds12 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Aspect i ds13 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Mood i ds14 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Voice i ds15 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Evidentiality i ds16 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Transitivity i ds17 },
                  case gramSys of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                  MorphologyGen.cleanSys @ InflectionData.Volition i ds18 })) -}
655e46d2f81a5974c3f6295985e69a94
  cleanGrammarSys1 :: a -> InflectionData.Manifest a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a6 ->
                 InflectionData.Manifest @ a6 InflectionData.PostParticle) -}
d385944c43c1b2a66bd25f8a80f1a5c9
  cleanGrammarSys2 :: a -> InflectionData.Manifest a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a6 ->
                 InflectionData.Manifest @ a6 InflectionData.Suffix) -}
76a197e338d18486a01dd26acbab475c
  cleanGrammarSys3 :: a -> InflectionData.Manifest a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a6 ->
                 InflectionData.Manifest @ a6 InflectionData.Prefix) -}
685d3b1efe69d75dd91f5e450e119bf3
  cleanGrammarSys4 :: a -> InflectionData.Manifest a
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ @ a6 ->
                 InflectionData.Manifest @ a6 InflectionData.PreParticle) -}
cf7f824d42235d67281654d9698481f9
  cleanGrammarSys5 :: [InflectionData.Manifest a]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (\ @ a6 ->
                 GHC.Types.:
                   @ (InflectionData.Manifest a6)
                   (InflectionData.NoManifest @ a6)
                   (GHC.Types.[] @ (InflectionData.Manifest a6))) -}
adad7f3a236067a2c23b59cb2ded4648
  cleanSys ::
    GHC.Types.Int
    -> InflectionData.Manifest ([a], GHC.Types.Int)
    -> [InflectionData.Manifest a]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><S,1*U>,
     Unfolding: (\ @ a6
                   i :: GHC.Types.Int
                   ds :: InflectionData.Manifest ([a6], GHC.Types.Int) ->
                 case ds of wild {
                   InflectionData.NoManifest -> MorphologyGen.cleanGrammarSys5 @ a6
                   InflectionData.Manifest ds1 ds2
                   -> case ds1 of wild1 {
                        InflectionData.PreParticle
                        -> case ds2 of wild2 { (,) x j ->
                           case i of wild3 { GHC.Types.I# x1 ->
                           case j of wild4 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y) of wild5 {
                             GHC.Types.False -> MorphologyGen.cleanGrammarSys5 @ a6
                             GHC.Types.True
                             -> GHC.Base.map
                                  @ a6
                                  @ (InflectionData.Manifest a6)
                                  (MorphologyGen.cleanGrammarSys4 @ a6)
                                  x } } } }
                        InflectionData.Prefix
                        -> case ds2 of wild2 { (,) x j ->
                           case i of wild3 { GHC.Types.I# x1 ->
                           case j of wild4 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y) of wild5 {
                             GHC.Types.False -> MorphologyGen.cleanGrammarSys5 @ a6
                             GHC.Types.True
                             -> GHC.Base.map
                                  @ a6
                                  @ (InflectionData.Manifest a6)
                                  (MorphologyGen.cleanGrammarSys3 @ a6)
                                  x } } } }
                        InflectionData.Suffix
                        -> case ds2 of wild2 { (,) x j ->
                           case i of wild3 { GHC.Types.I# x1 ->
                           case j of wild4 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y) of wild5 {
                             GHC.Types.False -> MorphologyGen.cleanGrammarSys5 @ a6
                             GHC.Types.True
                             -> GHC.Base.map
                                  @ a6
                                  @ (InflectionData.Manifest a6)
                                  (MorphologyGen.cleanGrammarSys2 @ a6)
                                  x } } } }
                        InflectionData.PostParticle
                        -> case ds2 of wild2 { (,) x j ->
                           case i of wild3 { GHC.Types.I# x1 ->
                           case j of wild4 { GHC.Types.I# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==# x1 y) of wild5 {
                             GHC.Types.False -> MorphologyGen.cleanGrammarSys5 @ a6
                             GHC.Types.True
                             -> GHC.Base.map
                                  @ a6
                                  @ (InflectionData.Manifest a6)
                                  (MorphologyGen.cleanGrammarSys1 @ a6)
                                  x } } } } } }) -}
e420ae6d59d41098af75e7cd89ffef61
  makePostParticleSystems ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S(S),1*U(U)><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: [PhonemeData.Phoneme]
                   w2 :: [[PhonemeData.Phoneme]]
                   w3 :: InflectionData.InflectionSystem ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MorphologyGen.$wmakePostParticleSystems ww1 w1 w2 w3 }) -}
233b5f288bdafa16ba476861b42d6f79
  makePreParticleSystems ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S(S),1*U(U)><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: [PhonemeData.Phoneme]
                   w2 :: [[PhonemeData.Phoneme]]
                   w3 :: InflectionData.InflectionSystem ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MorphologyGen.$wmakePreParticleSystems ww1 w1 w2 w3 }) -}
8780d46b84c4505ec8178a0f114cd980
  makePrefixSystems ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S(S),1*U(U)><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: [PhonemeData.Phoneme]
                   w2 :: [[PhonemeData.Phoneme]]
                   w3 :: InflectionData.InflectionSystem ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MorphologyGen.$wmakePrefixSystems ww1 w1 w2 w3 }) -}
55fbd3d976437a15e2cf978c27581f87
  makeSuffixSystems ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> InflectionData.InflectionSystem
    -> Data.RVar.RVar [InflectionData.ManifestSystem]
  {- Arity: 4,
     Strictness: <S(S),1*U(U)><L,U><L,U><L,U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: [PhonemeData.Phoneme]
                   w2 :: [[PhonemeData.Phoneme]]
                   w3 :: InflectionData.InflectionSystem ->
                 case w of ww { GHC.Types.I# ww1 ->
                 MorphologyGen.$wmakeSuffixSystems ww1 w1 w2 w3 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

