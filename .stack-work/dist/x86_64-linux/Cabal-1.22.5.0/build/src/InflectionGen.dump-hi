
==================== FINAL INTERFACE ====================
2016-11-10 18:42:11.026556 UTC

interface conla_1eA9qWUPH9nBowcXqqaV8r:InflectionGen 7103
  interface hash: a4d6ca589f1a8d5471277ea3194a28a3
  ABI hash: 709f08f023dd604cad4af4d3165b22fa
  export-list hash: b233a17c739fa900a40a2a419fd5dc83
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  InflectionGen.loadInputData
  InflectionGen.makeInflectionSystem
module dependencies: GrammarData InflectionData OtherData
                     PhonemeData PhonemeGen PhonotacticsGen
package dependencies: MonadPrompt-1.0.0.5@Monad_5vpMHuuRBzi4bKjpRN3A9L
                      MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      erf-2.0.0.0@erf_6l78BnvLL4b2mWYp3HJJxX
                      flexible-defaults-0.0.1.2@flexi_70LqvhG3vbS8bRvV8pHtMk
                      ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      math-functions-0.1.7.0@mathf_BN6S7j0ar3LC4TsnYu0us5
                      mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L
                      random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      random-shuffle-0.0.4@rando_9kOz9tEn1526ShtWz8x59X
                      random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr
                      rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG
                      stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE template-haskell-2.10.0.0
                      th-extras-0.0.0.4@thext_LRY1RUMy7ShLl2tqhMyHdO
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz:Control.Monad.Random
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         conla_1eA9qWUPH9nBowcXqqaV8r:InflectionData
         mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.IO
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.MWC
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.PureMT
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.StdGen
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE:Data.Generics.Instances
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  GrammarData f95f1692a0522ba4f2ab8e4cff233a36
  exports: 0e046bef964de644bb5bb5f62ec92514
import  -/  InflectionData 316dc8b65cfd739af6e59de9ad59bbc6
  exports: 24640cf62a9c3b7f4d5b0c718698bf0c
  Adj b6a8748ebc7c8a127004065f39281bf7
  Adpo 7302a0de0ff3a9e61c27a9a3a99c24d5
  Adv c9a0dc74844120cea5856438b029282a
  Animacy 0805e2c872c441491fbbd819376f13b8
  Aspect 851bcc3c94895d395e7cdf9501dbfb00
  Case f0a3d2a3107908d84564bc0108b3c56f
  Definiteness 250913a6cb1bc19b5a2a47309bfa066c
  Evidentiality cdbf36d6698b96caa0bed6ad294bfb83
  Gender a3623d5adfe047fe3ed20dca1c56d9df
  Honorific 9621aad11f276ef3a5a55be34fb30507
  InflectionSystem 9e76cf2757b9ac1e38b7d97c902ad4f1
  InflectionSystem 340b506daec6555591e5534716353ebf
  LexCat 669f64eab1a11feac3c6144dd5c31025
  Manifest be5dbb905eaa61c91070df8e7b415c52
  Manifest ceb3098f5042182adffdb975609a3c68
  ManifestType af5ddf409df7e34b7ae5f58c0bd0fff6
  Mood 4e999fb9fa6728ec3df19bdd28482ccf
  NoManifest a1000e139906e0b5e4ac8b6c897a10ea
  Number 5983d4e902f20ca491bfcf4389614668
  Obj 5bf8cc9d23064f75b87e73d35c5454b9
  Particle b6dac7eb598cb10dac67044916f016c5
  Person 8962065c67c1705ac692fcc8d9210bcd
  Polarity eac2f82847484b9a87105d0693a7c5e1
  Prefix 8590bd569f8bb6d038732e2c07f87092
  Specificity 697b496d198df68093293e68c7d50d9d
  Subj 631e45b5381caceb8ccd08c82aa9a800
  Suffix 38bb50ed0298517a03588243ef98ac95
  Tense b52863b70f3cc5626b7d1db2a6c4ef40
  Topic 39f87e694fb863c1c8c61df134a24729
  Transitivity 57945260416d71dc87e31cac669b161f
  Verb 9421dc5b8cf6821456c38e572093888e
  Voice 729607927630d1e92c199129334472f1
  Volition fed3c8348b016bc886742bbd8b88b80d
import  -/  OtherData 37db5ddc38f8875c91a0806c561b30cd
  exports: f505dec72f229982fb85e59b44566731
import  -/  PhonemeData 408b6488aa28ce44ef05793241013f6f
  exports: c711b36c9b7415c6d00ea9681146dbcb
import  -/  PhonemeGen 882a8962f7e5d7a3a88d6f568f3c585f
  exports: 9e8e7402e02e274551e75a2a86f34bc1
import  -/  PhonotacticsGen df8b64d0247252501a5b56e100c90305
  exports: 5bbf082cfe2be7a4eaae7a2a5f6b7de8
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L:Data.Random.Extras 5dc1684f88e3f2655bfb5d7aca60bf5c
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random 355d6844bb1b3189cb19ec0007f6f130
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random.Distribution.Uniform ce34c1edd0e59e868fcf9e0bf914c4ef
import  -/  rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG:Data.RVar 9b7fbdb5f1778e76b8a65f45a17cccb1
719bdfa7ba4944c28b37093ec96b6d47
  data InputData
    = InputData {inputGender :: [[InflectionData.Gender]],
                 inputAnimacy :: [[InflectionData.Animacy]],
                 inputCase :: [[InflectionData.Case]],
                 inputNumber :: [[InflectionData.Number]],
                 inputDefiniteness :: [[InflectionData.Definiteness]],
                 inputSpecificity :: [[InflectionData.Specificity]],
                 inputTopic :: [[InflectionData.Topic]],
                 inputPerson :: [[InflectionData.Person]],
                 inputHonorific :: [[InflectionData.Honorific]],
                 inputPolarity :: [[InflectionData.Polarity]],
                 inputTense :: [[InflectionData.Tense]],
                 inputAspect :: [[InflectionData.Aspect]],
                 inputMood :: [[InflectionData.Mood]],
                 inputVoice :: [[InflectionData.Voice]],
                 inputEvidentiality :: [[InflectionData.Evidentiality]],
                 inputTransitivity :: [[InflectionData.Transitivity]],
                 inputVolition :: [[InflectionData.Volition]]}
    Promotable
7dc54c18daec84f988f9bf6d44d1b906
  inputAnimacy ::
    InflectionGen.InputData -> [[InflectionData.Animacy]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds2 }) -}
573c870fba1b8f9d56950b185a477a97
  inputAspect :: InflectionGen.InputData -> [[InflectionData.Aspect]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds12 }) -}
6d473fa15a28a1284c919255abf2c620
  inputCase :: InflectionGen.InputData -> [[InflectionData.Case]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds3 }) -}
96e761592ee6efa2a618b73d08832469
  inputDefiniteness ::
    InflectionGen.InputData -> [[InflectionData.Definiteness]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds5 }) -}
3246e49efbacba592ca9666da80e73b7
  inputEvidentiality ::
    InflectionGen.InputData -> [[InflectionData.Evidentiality]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds15 }) -}
2b19890132e63861510f9cb5829d85ce
  inputGender :: InflectionGen.InputData -> [[InflectionData.Gender]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds1 }) -}
97a0ecfc0142eca7995110d6822a1a76
  inputHonorific ::
    InflectionGen.InputData -> [[InflectionData.Honorific]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds9 }) -}
a302fefdfd5d48eca5f1296b7d98abcb
  inputMood :: InflectionGen.InputData -> [[InflectionData.Mood]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds13 }) -}
87273f621d3d783acbfbbfd3f72ca180
  inputNumber :: InflectionGen.InputData -> [[InflectionData.Number]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds4 }) -}
1918cab636261608b3bc1c4099d9aaba
  inputPerson :: InflectionGen.InputData -> [[InflectionData.Person]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds8 }) -}
4239147e4921191b14cb205992612b07
  inputPolarity ::
    InflectionGen.InputData -> [[InflectionData.Polarity]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds10 }) -}
b3c9d0522e90cd2689e906437293321d
  inputSpecificity ::
    InflectionGen.InputData -> [[InflectionData.Specificity]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds6 }) -}
ec9a6bbec2ef38766f8ec4764cfa1a01
  inputTense :: InflectionGen.InputData -> [[InflectionData.Tense]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds11 }) -}
d5ea878b8dfc088988bdce05434d4c31
  inputTopic :: InflectionGen.InputData -> [[InflectionData.Topic]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds7 }) -}
968dc8e5fb07af98672130c6f61adc8e
  inputTransitivity ::
    InflectionGen.InputData -> [[InflectionData.Transitivity]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds16 }) -}
34250b6ee6d178f61b20d2fadf79436d
  inputVoice :: InflectionGen.InputData -> [[InflectionData.Voice]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds14 }) -}
dfe556f913e90c12d5572f6a890d7e7f
  inputVolition ::
    InflectionGen.InputData -> [[InflectionData.Volition]]
  RecSel InflectionGen.InputData
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionGen.InputData ->
                 case ds of wild { InflectionGen.InputData ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ->
                 ds17 }) -}
065c13e223a27350054d9c4bc38f456d
  loadInputData :: GHC.Types.IO InflectionGen.InputData
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                InflectionGen.loadInputData1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <InflectionGen.InputData>_R)) -}
456b41352dcf8ab72c69cd9e3dce4e8f
  loadInputData1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          InflectionGen.InputData #)
  {- Arity: 1, Strictness: <L,U> -}
4257aa8582bfa245adfe78a726141741
  makeInflectionSystem ::
    InflectionGen.InputData
    -> Data.RVar.RVar
         (InflectionData.InflectionSystem,
          [(InflectionData.LexCat,
            GHC.Types.Int,
            GHC.Types.Int,
            GHC.Types.Int)])
  {- Arity: 1,
     Strictness: <L,U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

