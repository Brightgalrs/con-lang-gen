
==================== FINAL INTERFACE ====================
2016-12-06 20:49:05.218505 UTC

interface conla_1eA9qWUPH9nBowcXqqaV8r:WordGen 7103
  interface hash: 1b922328c0b0c16ff1721dfcd0dc4b65
  ABI hash: 520ccd25c82283dc402bcccf2f807e78
  export-list hash: 0f5651339588a0c089ee4bc85b42fbc1
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  WordGen.loadMeaningData
  WordGen.makeDictionary
  WordGen.makeMorpheme
  WordGen.MeaningData{WordGen.MeaningData WordGen.inputAdjs WordGen.inputAdpos WordGen.inputNouns WordGen.inputVerbs}
module dependencies: GrammarData InflectionData OtherData
                     PhonemeData PhonemeGen PhonotacticsGen
package dependencies: MonadPrompt-1.0.0.5@Monad_5vpMHuuRBzi4bKjpRN3A9L
                      MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      erf-2.0.0.0@erf_6l78BnvLL4b2mWYp3HJJxX
                      flexible-defaults-0.0.1.2@flexi_70LqvhG3vbS8bRvV8pHtMk
                      ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      math-functions-0.1.7.0@mathf_BN6S7j0ar3LC4TsnYu0us5
                      mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L
                      random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      random-shuffle-0.0.4@rando_9kOz9tEn1526ShtWz8x59X
                      random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr
                      rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG
                      stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE template-haskell-2.10.0.0
                      th-extras-0.0.0.4@thext_LRY1RUMy7ShLl2tqhMyHdO
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz:Control.Monad.Random
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         conla_1eA9qWUPH9nBowcXqqaV8r:InflectionData
         mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.IO
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.MWC
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.PureMT
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.StdGen
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE:Data.Generics.Instances
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Traversable 7576318f4ef8587ad947f87012b65abf
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.IO bb5b81adcea33b14bd4abe16d7dde45f
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  GrammarData 3ac8f2b878a3acac75da28c3be99b3ac
  exports: fca5595c19286020653fdf4f375d962b
import  -/  InflectionData 3d10fd8ebdfb88f2d9b18403b3318120
  exports: bbf9a431e828cdbe291def24777d4f2e
  Adj 2c4b4bb0465dcd03f547481f4ed4e42a
  Adpo ae6c4eb1603ee2b9293013fe28704b38
  LexCat b0a24ad20939906e8d87ed3073f32603
  Noun e589ece5d60db99d20ba6977cc50f48e
  Verb be92a9eca6a47f52d128c949ff565852
import  -/  OtherData 37db5ddc38f8875c91a0806c561b30cd
  exports: f505dec72f229982fb85e59b44566731
import  -/  PhonemeData 408b6488aa28ce44ef05793241013f6f
  exports: c711b36c9b7415c6d00ea9681146dbcb
  Morpheme 84694ed806c557c515bbf4e524e13725
  Morpheme 383812fe40de4e6210cee815bfc93a6d
  Phoneme 78c280a9bf84c920fdcdc1bfa9515e2f
  Word 4e1579ce9a1ea812805b7e69ae8f8d98
  Word 82eaddf6262316ad93815378773a62ff
import  -/  PhonemeGen 882a8962f7e5d7a3a88d6f568f3c585f
  exports: 9e8e7402e02e274551e75a2a86f34bc1
import  -/  PhonotacticsGen df8b64d0247252501a5b56e100c90305
  exports: 5bbf082cfe2be7a4eaae7a2a5f6b7de8
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L:Data.Random.Extras 5dc1684f88e3f2655bfb5d7aca60bf5c
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random 355d6844bb1b3189cb19ec0007f6f130
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random.Distribution.Uniform ce34c1edd0e59e868fcf9e0bf914c4ef
import  -/  rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG:Data.RVar 9b7fbdb5f1778e76b8a65f45a17cccb1
1b2f7479f84fca9c768d6e597203211f
  $sreplicateM2 ::
    [Data.RVar.RVarT Data.Functor.Identity.Identity a3]
    -> forall b.
       ([a3] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
2d63d7418f3d7b6a945946480adf8848
  $wmakeMorpheme ::
    [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> GHC.Types.Int
    -> Data.RVar.RVar PhonemeData.Morpheme
  {- Arity: 10,
     Strictness: <L,U><L,U><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)><L,1*U(U)>,
     Inline: [0] -}
0ffb158eab2f2b75a6f8d62512bd2d4c
  data MeaningData
    = MeaningData {inputNouns :: [GHC.Base.String],
                   inputVerbs :: [GHC.Base.String],
                   inputAdjs :: [GHC.Base.String],
                   inputAdpos :: [GHC.Base.String]}
633c2758ca0f12e79b58a37f799bca29
  inputAdjs :: WordGen.MeaningData -> [GHC.Base.String]
  RecSel WordGen.MeaningData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: WordGen.MeaningData ->
                 case ds of wild { WordGen.MeaningData ds1 ds2 ds3 ds4 -> ds3 }) -}
0b64bde3ea0a9103b4bd4a53d4cde0f9
  inputAdpos :: WordGen.MeaningData -> [GHC.Base.String]
  RecSel WordGen.MeaningData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: WordGen.MeaningData ->
                 case ds of wild { WordGen.MeaningData ds1 ds2 ds3 ds4 -> ds4 }) -}
e6ee3eaba610f0c7b6e89a33c20a5cc5
  inputNouns :: WordGen.MeaningData -> [GHC.Base.String]
  RecSel WordGen.MeaningData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: WordGen.MeaningData ->
                 case ds of wild { WordGen.MeaningData ds1 ds2 ds3 ds4 -> ds1 }) -}
0c4b2e5a05a013f8d9994fb5e337df73
  inputVerbs :: WordGen.MeaningData -> [GHC.Base.String]
  RecSel WordGen.MeaningData
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: WordGen.MeaningData ->
                 case ds of wild { WordGen.MeaningData ds1 ds2 ds3 ds4 -> ds2 }) -}
a5f287419e665bf09af7fe1eef93ebd4
  loadMeaningData :: GHC.Types.IO WordGen.MeaningData
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                WordGen.loadMeaningData1
                  `cast`
                (Sym (GHC.Types.NTCo:IO[0] <WordGen.MeaningData>_R)) -}
33bb8905a15f1f76354492bf82901cf8
  loadMeaningData1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, WordGen.MeaningData #)
  {- Arity: 1, Strictness: <L,U> -}
7fd1514655f328538aa1c5dc3da582fc
  makeDictionary ::
    WordGen.MeaningData
    -> [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> ((GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int))
    -> Data.RVar.RVar
         [((GHC.Base.String, InflectionData.LexCat), PhonemeData.Word)]
  {- Arity: 4,
     Strictness: <L,U(U,U,U,U)><L,U><L,U><L,U(U(U(U),U(U)),U(U(U),U(U)),U(U(U),U(U)),U(U(U),U(U)))> -}
90c96d6dac5552cfb4cafae5fadb8741
  makeMorpheme ::
    [PhonemeData.Phoneme]
    -> [[PhonemeData.Phoneme]]
    -> ((GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int),
        (GHC.Types.Int, GHC.Types.Int))
    -> Data.RVar.RVar PhonemeData.Morpheme
  {- Arity: 3,
     Strictness: <L,U><L,U><S(SSSS),1*U(1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)),1*U(1*U(U),1*U(U)))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: [PhonemeData.Phoneme]
                   w1 :: [[PhonemeData.Phoneme]]
                   w2 :: ((GHC.Types.Int, GHC.Types.Int),
                          (GHC.Types.Int, GHC.Types.Int),
                          (GHC.Types.Int, GHC.Types.Int),
                          (GHC.Types.Int, GHC.Types.Int)) ->
                 case w2 of ww { (,,,) ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { (,) ww6 ww7 ->
                 case ww2 of ww8 { (,) ww9 ww10 ->
                 case ww3 of ww11 { (,) ww12 ww13 ->
                 case ww4 of ww14 { (,) ww15 ww16 ->
                 WordGen.$wmakeMorpheme
                   w
                   w1
                   ww6
                   ww7
                   ww9
                   ww10
                   ww12
                   ww13
                   ww15
                   ww16 } } } } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

