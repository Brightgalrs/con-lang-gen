
==================== FINAL INTERFACE ====================
2016-11-04 09:25:06.979473 UTC

interface conla_1eA9qWUPH9nBowcXqqaV8r:InflectionData [orphan module] 7103
  interface hash: 9de08d5ff6db699823e1f5a963f644e0
  ABI hash: 072303e933f9eb87493ca2db6553722b
  export-list hash: 11ce4827ce97282915e6b63398631625
  orphan hash: 1195cac93f9d5f3348137ee3e1c7d807
  flag hash: f6794f28a1d9a693363b149a5d158050
  sig of: Nothing
  used TH splices: False
  where
exports:
  InflectionData.Agreement{InflectionData.Agreement}
  InflectionData.AgreementSystem{InflectionData.AgreementSystem}
  InflectionData.Animacy{InflectionData.AN InflectionData.HUM InflectionData.INAN InflectionData.NHUM InflectionData.ZO}
  InflectionData.Aspect{InflectionData.IPFV InflectionData.PFV}
  InflectionData.Case{InflectionData.ABE InflectionData.ABL InflectionData.ABS InflectionData.ABS2 InflectionData.ABS3 InflectionData.ACC InflectionData.ADP InflectionData.BEN InflectionData.CAUS InflectionData.COMIT InflectionData.COMP InflectionData.DAT InflectionData.DIR InflectionData.DISTR InflectionData.DRT1 InflectionData.DRT2 InflectionData.DTR InflectionData.EQU InflectionData.ERG InflectionData.ERG2 InflectionData.GEN InflectionData.IDEN InflectionData.INDIR InflectionData.INS InflectionData.INSCOMIT InflectionData.INTR InflectionData.LAT InflectionData.LOC InflectionData.MTR InflectionData.NOM InflectionData.NOM2 InflectionData.OBJ InflectionData.OBL1 InflectionData.OBL2 InflectionData.OBL3 InflectionData.OBL4 InflectionData.OBL5 InflectionData.OBL6 InflectionData.ORN InflectionData.PART InflectionData.PEG InflectionData.POSS InflectionData.POST InflectionData.PREP InflectionData.PRIM InflectionData.SEC InflectionData.TR InflectionData.VOC}
  InflectionData.Clusivity{InflectionData.EXCL InflectionData.INCL}
  InflectionData.Definiteness{InflectionData.DEF InflectionData.INDF}
  InflectionData.Evidentiality{InflectionData.ASS InflectionData.AUD InflectionData.EXP InflectionData.HSY InflectionData.INFER InflectionData.NVIS InflectionData.QUO InflectionData.REP InflectionData.VIS}
  InflectionData.Gender{InflectionData.COM InflectionData.F InflectionData.M InflectionData.N}
  InflectionData.Honorific{InflectionData.FAM InflectionData.FORM}
  InflectionData.InflectionSystem{InflectionData.InflectionSystem InflectionData.aniSys InflectionData.aspSys InflectionData.casSys InflectionData.cluSys InflectionData.defSys InflectionData.eviSys InflectionData.genSys InflectionData.honSys InflectionData.mooSys InflectionData.numSys InflectionData.perSys InflectionData.polSys InflectionData.speSys InflectionData.tenSys InflectionData.topSys InflectionData.traSys InflectionData.voiSys InflectionData.volSys}
  InflectionData.Manifest{InflectionData.Manifest InflectionData.NoManifest}
  InflectionData.ManifestSystem{InflectionData.ManifestSystem}
  InflectionData.ManifestType{InflectionData.PostParticle InflectionData.PreParticle InflectionData.Prefix InflectionData.Suffix}
  InflectionData.Mood{InflectionData.COND InflectionData.DEO InflectionData.EPIS InflectionData.IMP InflectionData.IND InflectionData.IRR InflectionData.JUS InflectionData.OPT InflectionData.POT InflectionData.SBJV}
  InflectionData.Number{InflectionData.DU InflectionData.PA InflectionData.PL InflectionData.SG InflectionData.TRI}
  InflectionData.Person{InflectionData.FIRST InflectionData.SECOND InflectionData.THIRD}
  InflectionData.Polarity{InflectionData.AFF InflectionData.NEG}
  InflectionData.Specificity{InflectionData.NSPEC InflectionData.SPEC}
  InflectionData.Tense{InflectionData.FUT InflectionData.IMMF InflectionData.NFUT InflectionData.NPST InflectionData.PRS InflectionData.PST InflectionData.REC InflectionData.REM InflectionData.REMF}
  InflectionData.Topic{InflectionData.NTOP InflectionData.TOP}
  InflectionData.Transitivity{InflectionData.DITRANS InflectionData.NTRANS InflectionData.TRANS}
  InflectionData.Voice{InflectionData.ACTIVE InflectionData.MIDDLE InflectionData.PASSIVE}
  InflectionData.Volition{InflectionData.NVOL InflectionData.VOL}
module dependencies: GrammarData OtherData PhonemeData
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Read b423b4506a014855edbd329b567629f3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:Text.ParserCombinators.ReadPrec 2590e0e0a57a86ac7c62727f4d868dd2
import  -/  base-4.8.2.0:Text.Read.Lex 724ca44ddd38ddc5f47a501d62736c26
import  -/  GrammarData b86371ccb48390730f6498310ddac76f
  exports: d1002ba5737e19703411cb57857cf209
  LexCat b95e114b0b6d51b5dd936a539d4fcd51
import  -/  OtherData ef85631315e8bb1c90bd776e9bb7751c
  exports: f505dec72f229982fb85e59b44566731
import  -/  PhonemeData 2bc4225bb63ccf0a16ac10bab410e892
  exports: 8834c83badd5837275d7ec1bbd2f424a
  Morpheme a75f0140e4b212df166951d7f735baaf
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
7b654f4ee199d4810fa80ffc3c3ff920
  $fEq(,,,,,,,,,,,,,,,,,) ::
    (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c,
     GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f,
     GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i,
     GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l,
     GHC.Classes.Eq m, GHC.Classes.Eq n, GHC.Classes.Eq o,
     GHC.Classes.Eq p, GHC.Classes.Eq q, GHC.Classes.Eq r) =>
    GHC.Classes.Eq
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
  DFunId[0]
  {- Arity: 18, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)><L,U(C(C1(U)),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a38
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      @ o
                      @ p
                      @ q
                      @ r
                      $dEq :: GHC.Classes.Eq a38
                      $dEq1 :: GHC.Classes.Eq b
                      $dEq2 :: GHC.Classes.Eq c
                      $dEq3 :: GHC.Classes.Eq d
                      $dEq4 :: GHC.Classes.Eq e
                      $dEq5 :: GHC.Classes.Eq f
                      $dEq6 :: GHC.Classes.Eq g
                      $dEq7 :: GHC.Classes.Eq h
                      $dEq8 :: GHC.Classes.Eq i
                      $dEq9 :: GHC.Classes.Eq j
                      $dEq10 :: GHC.Classes.Eq k
                      $dEq11 :: GHC.Classes.Eq l
                      $dEq12 :: GHC.Classes.Eq m
                      $dEq13 :: GHC.Classes.Eq n
                      $dEq14 :: GHC.Classes.Eq o
                      $dEq15 :: GHC.Classes.Eq p
                      $dEq16 :: GHC.Classes.Eq q
                      $dEq17 :: GHC.Classes.Eq r.
                  @ (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
                  (InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$c==
                     @ a38
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     @ p
                     @ q
                     @ r
                     $dEq
                     $dEq1
                     $dEq2
                     $dEq3
                     $dEq4
                     $dEq5
                     $dEq6
                     $dEq7
                     $dEq8
                     $dEq9
                     $dEq10
                     $dEq11
                     $dEq12
                     $dEq13
                     $dEq14
                     $dEq15
                     $dEq16
                     $dEq17)
                  (InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$c/=
                     @ a38
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     @ p
                     @ q
                     @ r
                     $dEq
                     $dEq1
                     $dEq2
                     $dEq3
                     $dEq4
                     $dEq5
                     $dEq6
                     $dEq7
                     $dEq8
                     $dEq9
                     $dEq10
                     $dEq11
                     $dEq12
                     $dEq13
                     $dEq14
                     $dEq15
                     $dEq16
                     $dEq17) -}
149db7ad55008ce6f5a4b9b2eb7a7c36
  $fEq(,,,,,,,,,,,,,,,,,)_$c/= ::
    (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c,
     GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f,
     GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i,
     GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l,
     GHC.Classes.Eq m, GHC.Classes.Eq n, GHC.Classes.Eq o,
     GHC.Classes.Eq p, GHC.Classes.Eq q, GHC.Classes.Eq r) =>
    (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> GHC.Types.Bool
  {- Arity: 20, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (20, True, False)
                (\ @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   $dEq :: GHC.Classes.Eq a38
                   $dEq1 :: GHC.Classes.Eq b
                   $dEq2 :: GHC.Classes.Eq c
                   $dEq3 :: GHC.Classes.Eq d
                   $dEq4 :: GHC.Classes.Eq e
                   $dEq5 :: GHC.Classes.Eq f
                   $dEq6 :: GHC.Classes.Eq g
                   $dEq7 :: GHC.Classes.Eq h
                   $dEq8 :: GHC.Classes.Eq i
                   $dEq9 :: GHC.Classes.Eq j
                   $dEq10 :: GHC.Classes.Eq k
                   $dEq11 :: GHC.Classes.Eq l
                   $dEq12 :: GHC.Classes.Eq m
                   $dEq13 :: GHC.Classes.Eq n
                   $dEq14 :: GHC.Classes.Eq o
                   $dEq15 :: GHC.Classes.Eq p
                   $dEq16 :: GHC.Classes.Eq q
                   $dEq17 :: GHC.Classes.Eq r
                   a39 :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
                   b1 :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) ->
                 case InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$c==
                        @ a38
                        @ b
                        @ c
                        @ d
                        @ e
                        @ f
                        @ g
                        @ h
                        @ i
                        @ j
                        @ k
                        @ l
                        @ m
                        @ n
                        @ o
                        @ p
                        @ q
                        @ r
                        $dEq
                        $dEq1
                        $dEq2
                        $dEq3
                        $dEq4
                        $dEq5
                        $dEq6
                        $dEq7
                        $dEq8
                        $dEq9
                        $dEq10
                        $dEq11
                        $dEq12
                        $dEq13
                        $dEq14
                        $dEq15
                        $dEq16
                        $dEq17
                        a39
                        b1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5063e04da47348fc9ba70413a3a95a1e
  $fEq(,,,,,,,,,,,,,,,,,)_$c== ::
    (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c,
     GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f,
     GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i,
     GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l,
     GHC.Classes.Eq m, GHC.Classes.Eq n, GHC.Classes.Eq o,
     GHC.Classes.Eq p, GHC.Classes.Eq q, GHC.Classes.Eq r) =>
    (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> GHC.Types.Bool
  {- Arity: 20, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (20, True, False)
                (\ @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   w :: GHC.Classes.Eq a38
                   w1 :: GHC.Classes.Eq b
                   w2 :: GHC.Classes.Eq c
                   w3 :: GHC.Classes.Eq d
                   w4 :: GHC.Classes.Eq e
                   w5 :: GHC.Classes.Eq f
                   w6 :: GHC.Classes.Eq g
                   w7 :: GHC.Classes.Eq h
                   w8 :: GHC.Classes.Eq i
                   w9 :: GHC.Classes.Eq j
                   w10 :: GHC.Classes.Eq k
                   w11 :: GHC.Classes.Eq l
                   w12 :: GHC.Classes.Eq m
                   w13 :: GHC.Classes.Eq n
                   w14 :: GHC.Classes.Eq o
                   w15 :: GHC.Classes.Eq p
                   w16 :: GHC.Classes.Eq q
                   w17 :: GHC.Classes.Eq r
                   w18 :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
                   w19 :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) ->
                 case w18 of ww { (,,,,,,,,,,,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 case w19 of ww19 { (,,,,,,,,,,,,,,,,,) ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 InflectionData.$w$c==
                   @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   w
                   w1
                   w2
                   w3
                   w4
                   w5
                   w6
                   w7
                   w8
                   w9
                   w10
                   w11
                   w12
                   w13
                   w14
                   w15
                   w16
                   w17
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } }) -}
c6e72ca85499c7105dc89537f63a737d
  $fEq(,,,,,,,,,,,,,,,,,)_$s$c/= ::
    (InflectionData.Manifest InflectionData.Gender,
     InflectionData.Manifest InflectionData.Animacy,
     InflectionData.Manifest InflectionData.Case,
     InflectionData.Manifest InflectionData.Number,
     InflectionData.Manifest InflectionData.Definiteness,
     InflectionData.Manifest InflectionData.Specificity,
     InflectionData.Manifest InflectionData.Topic,
     InflectionData.Manifest InflectionData.Person,
     InflectionData.Manifest InflectionData.Clusivity,
     InflectionData.Manifest InflectionData.Honorific,
     InflectionData.Manifest InflectionData.Polarity,
     InflectionData.Manifest InflectionData.Tense,
     InflectionData.Manifest InflectionData.Aspect,
     InflectionData.Manifest InflectionData.Mood,
     InflectionData.Manifest InflectionData.Voice,
     InflectionData.Manifest InflectionData.Evidentiality,
     InflectionData.Manifest InflectionData.Transitivity,
     InflectionData.Manifest InflectionData.Volition)
    -> (InflectionData.Manifest InflectionData.Gender,
        InflectionData.Manifest InflectionData.Animacy,
        InflectionData.Manifest InflectionData.Case,
        InflectionData.Manifest InflectionData.Number,
        InflectionData.Manifest InflectionData.Definiteness,
        InflectionData.Manifest InflectionData.Specificity,
        InflectionData.Manifest InflectionData.Topic,
        InflectionData.Manifest InflectionData.Person,
        InflectionData.Manifest InflectionData.Clusivity,
        InflectionData.Manifest InflectionData.Honorific,
        InflectionData.Manifest InflectionData.Polarity,
        InflectionData.Manifest InflectionData.Tense,
        InflectionData.Manifest InflectionData.Aspect,
        InflectionData.Manifest InflectionData.Mood,
        InflectionData.Manifest InflectionData.Voice,
        InflectionData.Manifest InflectionData.Evidentiality,
        InflectionData.Manifest InflectionData.Transitivity,
        InflectionData.Manifest InflectionData.Volition)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: (InflectionData.Manifest InflectionData.Gender,
                           InflectionData.Manifest InflectionData.Animacy,
                           InflectionData.Manifest InflectionData.Case,
                           InflectionData.Manifest InflectionData.Number,
                           InflectionData.Manifest InflectionData.Definiteness,
                           InflectionData.Manifest InflectionData.Specificity,
                           InflectionData.Manifest InflectionData.Topic,
                           InflectionData.Manifest InflectionData.Person,
                           InflectionData.Manifest InflectionData.Clusivity,
                           InflectionData.Manifest InflectionData.Honorific,
                           InflectionData.Manifest InflectionData.Polarity,
                           InflectionData.Manifest InflectionData.Tense,
                           InflectionData.Manifest InflectionData.Aspect,
                           InflectionData.Manifest InflectionData.Mood,
                           InflectionData.Manifest InflectionData.Voice,
                           InflectionData.Manifest InflectionData.Evidentiality,
                           InflectionData.Manifest InflectionData.Transitivity,
                           InflectionData.Manifest InflectionData.Volition)
                   b :: (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition) ->
                 case InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$c== a38 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
e0cb680d9a152fcf869106caf31bf6ec
  $fEq(,,,,,,,,,,,,,,,,,)_$s$c== ::
    (InflectionData.Manifest InflectionData.Gender,
     InflectionData.Manifest InflectionData.Animacy,
     InflectionData.Manifest InflectionData.Case,
     InflectionData.Manifest InflectionData.Number,
     InflectionData.Manifest InflectionData.Definiteness,
     InflectionData.Manifest InflectionData.Specificity,
     InflectionData.Manifest InflectionData.Topic,
     InflectionData.Manifest InflectionData.Person,
     InflectionData.Manifest InflectionData.Clusivity,
     InflectionData.Manifest InflectionData.Honorific,
     InflectionData.Manifest InflectionData.Polarity,
     InflectionData.Manifest InflectionData.Tense,
     InflectionData.Manifest InflectionData.Aspect,
     InflectionData.Manifest InflectionData.Mood,
     InflectionData.Manifest InflectionData.Voice,
     InflectionData.Manifest InflectionData.Evidentiality,
     InflectionData.Manifest InflectionData.Transitivity,
     InflectionData.Manifest InflectionData.Volition)
    -> (InflectionData.Manifest InflectionData.Gender,
        InflectionData.Manifest InflectionData.Animacy,
        InflectionData.Manifest InflectionData.Case,
        InflectionData.Manifest InflectionData.Number,
        InflectionData.Manifest InflectionData.Definiteness,
        InflectionData.Manifest InflectionData.Specificity,
        InflectionData.Manifest InflectionData.Topic,
        InflectionData.Manifest InflectionData.Person,
        InflectionData.Manifest InflectionData.Clusivity,
        InflectionData.Manifest InflectionData.Honorific,
        InflectionData.Manifest InflectionData.Polarity,
        InflectionData.Manifest InflectionData.Tense,
        InflectionData.Manifest InflectionData.Aspect,
        InflectionData.Manifest InflectionData.Mood,
        InflectionData.Manifest InflectionData.Voice,
        InflectionData.Manifest InflectionData.Evidentiality,
        InflectionData.Manifest InflectionData.Transitivity,
        InflectionData.Manifest InflectionData.Volition)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition)
                   w1 :: (InflectionData.Manifest InflectionData.Gender,
                          InflectionData.Manifest InflectionData.Animacy,
                          InflectionData.Manifest InflectionData.Case,
                          InflectionData.Manifest InflectionData.Number,
                          InflectionData.Manifest InflectionData.Definiteness,
                          InflectionData.Manifest InflectionData.Specificity,
                          InflectionData.Manifest InflectionData.Topic,
                          InflectionData.Manifest InflectionData.Person,
                          InflectionData.Manifest InflectionData.Clusivity,
                          InflectionData.Manifest InflectionData.Honorific,
                          InflectionData.Manifest InflectionData.Polarity,
                          InflectionData.Manifest InflectionData.Tense,
                          InflectionData.Manifest InflectionData.Aspect,
                          InflectionData.Manifest InflectionData.Mood,
                          InflectionData.Manifest InflectionData.Voice,
                          InflectionData.Manifest InflectionData.Evidentiality,
                          InflectionData.Manifest InflectionData.Transitivity,
                          InflectionData.Manifest InflectionData.Volition) ->
                 case w of ww { (,,,,,,,,,,,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 case w1 of ww19 { (,,,,,,,,,,,,,,,,,) ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 InflectionData.$w$s$c==
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } }) -}
24085b0fb5e5c8755c38adf650de82ae
  $fEq(,,,,,,,,,,,,,,,,,)_$s$fEq(,,,,,,,,,,,,,,,,,) ::
    GHC.Classes.Eq
      (InflectionData.Manifest InflectionData.Gender,
       InflectionData.Manifest InflectionData.Animacy,
       InflectionData.Manifest InflectionData.Case,
       InflectionData.Manifest InflectionData.Number,
       InflectionData.Manifest InflectionData.Definiteness,
       InflectionData.Manifest InflectionData.Specificity,
       InflectionData.Manifest InflectionData.Topic,
       InflectionData.Manifest InflectionData.Person,
       InflectionData.Manifest InflectionData.Clusivity,
       InflectionData.Manifest InflectionData.Honorific,
       InflectionData.Manifest InflectionData.Polarity,
       InflectionData.Manifest InflectionData.Tense,
       InflectionData.Manifest InflectionData.Aspect,
       InflectionData.Manifest InflectionData.Mood,
       InflectionData.Manifest InflectionData.Voice,
       InflectionData.Manifest InflectionData.Evidentiality,
       InflectionData.Manifest InflectionData.Transitivity,
       InflectionData.Manifest InflectionData.Volition)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (InflectionData.Manifest InflectionData.Gender,
                     InflectionData.Manifest InflectionData.Animacy,
                     InflectionData.Manifest InflectionData.Case,
                     InflectionData.Manifest InflectionData.Number,
                     InflectionData.Manifest InflectionData.Definiteness,
                     InflectionData.Manifest InflectionData.Specificity,
                     InflectionData.Manifest InflectionData.Topic,
                     InflectionData.Manifest InflectionData.Person,
                     InflectionData.Manifest InflectionData.Clusivity,
                     InflectionData.Manifest InflectionData.Honorific,
                     InflectionData.Manifest InflectionData.Polarity,
                     InflectionData.Manifest InflectionData.Tense,
                     InflectionData.Manifest InflectionData.Aspect,
                     InflectionData.Manifest InflectionData.Mood,
                     InflectionData.Manifest InflectionData.Voice,
                     InflectionData.Manifest InflectionData.Evidentiality,
                     InflectionData.Manifest InflectionData.Transitivity,
                     InflectionData.Manifest InflectionData.Volition)
                  InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$c==
                  InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$c/= -}
645292a0c707731346010c9800970e0d
  $fEqAgreement :: GHC.Classes.Eq InflectionData.Agreement
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Agreement
                  InflectionData.$fEqAgreement_$c==
                  InflectionData.$fEqAgreement_$c/= -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fEqAgreementSystem ::
    GHC.Classes.Eq InflectionData.AgreementSystem
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.AgreementSystem
                  InflectionData.$fEqAgreementSystem_$c==
                  InflectionData.$fEqAgreementSystem_$c/= -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fEqAgreementSystem_$c/= ::
    InflectionData.AgreementSystem
    -> InflectionData.AgreementSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.AgreementSystem
                   b :: InflectionData.AgreementSystem ->
                 case a38 of wild { InflectionData.AgreementSystem a39 ->
                 case b of wild1 { InflectionData.AgreementSystem b1 ->
                 case GHC.Classes.$fEq[]_$c==
                        @ InflectionData.Agreement
                        InflectionData.$fEqAgreement
                        a39
                        b1 of wild2 {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fEqAgreementSystem_$c== ::
    InflectionData.AgreementSystem
    -> InflectionData.AgreementSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(S),1*U(1*U)><S(S),1*U(1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.AgreementSystem
                   ds1 :: InflectionData.AgreementSystem ->
                 case ds of wild { InflectionData.AgreementSystem a38 ->
                 case ds1 of wild1 { InflectionData.AgreementSystem b1 ->
                 GHC.Classes.$fEq[]_$c==
                   @ InflectionData.Agreement
                   InflectionData.$fEqAgreement
                   a38
                   b1 } }) -}
645292a0c707731346010c9800970e0d
  $fEqAgreement_$c/= ::
    InflectionData.Agreement
    -> InflectionData.Agreement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Agreement b :: InflectionData.Agreement ->
                 case InflectionData.$fEqAgreement_$c== a38 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
645292a0c707731346010c9800970e0d
  $fEqAgreement_$c== ::
    InflectionData.Agreement
    -> InflectionData.Agreement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SL),1*U(1*U,1*U)><S(SL),1*U(1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: InflectionData.Agreement w1 :: InflectionData.Agreement ->
                 case w of ww { InflectionData.Agreement ww1 ww2 ->
                 case w1 of ww3 { InflectionData.Agreement ww4 ww5 ->
                 InflectionData.$w$c==1 ww1 ww2 ww4 ww5 } }) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fEqAnimacy :: GHC.Classes.Eq InflectionData.Animacy
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Animacy
                  InflectionData.$fEqAnimacy_$c==
                  InflectionData.$fEqAnimacy_$c/= -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fEqAnimacy_$c/= ::
    InflectionData.Animacy -> InflectionData.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Animacy
                   b :: InflectionData.Animacy ->
                 case a38 of wild {
                   InflectionData.AN
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.AN -> GHC.Types.False }
                   InflectionData.HUM
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.HUM -> GHC.Types.False }
                   InflectionData.NHUM
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.NHUM -> GHC.Types.False }
                   InflectionData.ZO
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.ZO -> GHC.Types.False }
                   InflectionData.INAN
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.INAN -> GHC.Types.False } }) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fEqAnimacy_$c== ::
    InflectionData.Animacy -> InflectionData.Animacy -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Animacy
                   ds1 :: InflectionData.Animacy ->
                 case ds of wild {
                   InflectionData.AN
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.AN -> GHC.Types.True }
                   InflectionData.HUM
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.HUM -> GHC.Types.True }
                   InflectionData.NHUM
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.NHUM -> GHC.Types.True }
                   InflectionData.ZO
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.ZO -> GHC.Types.True }
                   InflectionData.INAN
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.INAN -> GHC.Types.True } }) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fEqAspect :: GHC.Classes.Eq InflectionData.Aspect
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Aspect
                  InflectionData.$fEqAspect_$c==
                  InflectionData.$fEqAspect_$c/= -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fEqAspect_$c/= ::
    InflectionData.Aspect -> InflectionData.Aspect -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Aspect b :: InflectionData.Aspect ->
                 case a38 of wild {
                   InflectionData.PFV
                   -> case b of wild1 {
                        InflectionData.PFV -> GHC.Types.False
                        InflectionData.IPFV -> GHC.Types.True }
                   InflectionData.IPFV
                   -> case b of wild1 {
                        InflectionData.PFV -> GHC.Types.True
                        InflectionData.IPFV -> GHC.Types.False } }) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fEqAspect_$c== ::
    InflectionData.Aspect -> InflectionData.Aspect -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Aspect ds1 :: InflectionData.Aspect ->
                 case ds of wild {
                   InflectionData.PFV
                   -> case ds1 of wild1 {
                        InflectionData.PFV -> GHC.Types.True
                        InflectionData.IPFV -> GHC.Types.False }
                   InflectionData.IPFV
                   -> case ds1 of wild1 {
                        InflectionData.PFV -> GHC.Types.False
                        InflectionData.IPFV -> GHC.Types.True } }) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fEqCase :: GHC.Classes.Eq InflectionData.Case
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Case
                  InflectionData.$fEqCase_$c==
                  InflectionData.$fEqCase_$c/= -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fEqCase_$c/= ::
    InflectionData.Case -> InflectionData.Case -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Case b :: InflectionData.Case ->
                 case a38 of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.==#
                           (GHC.Prim.dataToTag# @ InflectionData.Case x1)
                           (GHC.Prim.dataToTag# @ InflectionData.Case x2)) of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False } } }) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fEqCase_$c== ::
    InflectionData.Case -> InflectionData.Case -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Case b :: InflectionData.Case ->
                 case a38 of x1 { DEFAULT ->
                 case b of x2 { DEFAULT ->
                 GHC.Prim.tagToEnum#
                   @ GHC.Types.Bool
                   (GHC.Prim.==#
                      (GHC.Prim.dataToTag# @ InflectionData.Case x1)
                      (GHC.Prim.dataToTag# @ InflectionData.Case x2)) } }) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fEqClusivity :: GHC.Classes.Eq InflectionData.Clusivity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Clusivity
                  InflectionData.$fEqClusivity_$c==
                  InflectionData.$fEqClusivity_$c/= -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fEqClusivity_$c/= ::
    InflectionData.Clusivity
    -> InflectionData.Clusivity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Clusivity b :: InflectionData.Clusivity ->
                 case a38 of wild {
                   InflectionData.INCL
                   -> case b of wild1 {
                        InflectionData.INCL -> GHC.Types.False
                        InflectionData.EXCL -> GHC.Types.True }
                   InflectionData.EXCL
                   -> case b of wild1 {
                        InflectionData.INCL -> GHC.Types.True
                        InflectionData.EXCL -> GHC.Types.False } }) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fEqClusivity_$c== ::
    InflectionData.Clusivity
    -> InflectionData.Clusivity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Clusivity
                   ds1 :: InflectionData.Clusivity ->
                 case ds of wild {
                   InflectionData.INCL
                   -> case ds1 of wild1 {
                        InflectionData.INCL -> GHC.Types.True
                        InflectionData.EXCL -> GHC.Types.False }
                   InflectionData.EXCL
                   -> case ds1 of wild1 {
                        InflectionData.INCL -> GHC.Types.False
                        InflectionData.EXCL -> GHC.Types.True } }) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fEqDefiniteness :: GHC.Classes.Eq InflectionData.Definiteness
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Definiteness
                  InflectionData.$fEqDefiniteness_$c==
                  InflectionData.$fEqDefiniteness_$c/= -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fEqDefiniteness_$c/= ::
    InflectionData.Definiteness
    -> InflectionData.Definiteness -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Definiteness
                   b :: InflectionData.Definiteness ->
                 case a38 of wild {
                   InflectionData.DEF
                   -> case b of wild1 {
                        InflectionData.DEF -> GHC.Types.False
                        InflectionData.INDF -> GHC.Types.True }
                   InflectionData.INDF
                   -> case b of wild1 {
                        InflectionData.DEF -> GHC.Types.True
                        InflectionData.INDF -> GHC.Types.False } }) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fEqDefiniteness_$c== ::
    InflectionData.Definiteness
    -> InflectionData.Definiteness -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Definiteness
                   ds1 :: InflectionData.Definiteness ->
                 case ds of wild {
                   InflectionData.DEF
                   -> case ds1 of wild1 {
                        InflectionData.DEF -> GHC.Types.True
                        InflectionData.INDF -> GHC.Types.False }
                   InflectionData.INDF
                   -> case ds1 of wild1 {
                        InflectionData.DEF -> GHC.Types.False
                        InflectionData.INDF -> GHC.Types.True } }) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fEqEvidentiality :: GHC.Classes.Eq InflectionData.Evidentiality
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Evidentiality
                  InflectionData.$fEqEvidentiality_$c==
                  InflectionData.$fEqEvidentiality_$c/= -}
72f49e3daffb56d4bf46854dab7a01ee
  $fEqEvidentiality_$c/= ::
    InflectionData.Evidentiality
    -> InflectionData.Evidentiality -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Evidentiality
                   b :: InflectionData.Evidentiality ->
                 case a38 of wild {
                   InflectionData.EXP
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.EXP -> GHC.Types.False }
                   InflectionData.VIS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.VIS -> GHC.Types.False }
                   InflectionData.NVIS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.NVIS -> GHC.Types.False }
                   InflectionData.AUD
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.AUD -> GHC.Types.False }
                   InflectionData.INFER
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.INFER -> GHC.Types.False }
                   InflectionData.REP
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.REP -> GHC.Types.False }
                   InflectionData.HSY
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.HSY -> GHC.Types.False }
                   InflectionData.QUO
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.QUO -> GHC.Types.False }
                   InflectionData.ASS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.ASS -> GHC.Types.False } }) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fEqEvidentiality_$c== ::
    InflectionData.Evidentiality
    -> InflectionData.Evidentiality -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Evidentiality
                   ds1 :: InflectionData.Evidentiality ->
                 case ds of wild {
                   InflectionData.EXP
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.EXP -> GHC.Types.True }
                   InflectionData.VIS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.VIS -> GHC.Types.True }
                   InflectionData.NVIS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.NVIS -> GHC.Types.True }
                   InflectionData.AUD
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.AUD -> GHC.Types.True }
                   InflectionData.INFER
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.INFER -> GHC.Types.True }
                   InflectionData.REP
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.REP -> GHC.Types.True }
                   InflectionData.HSY
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.HSY -> GHC.Types.True }
                   InflectionData.QUO
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.QUO -> GHC.Types.True }
                   InflectionData.ASS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.ASS -> GHC.Types.True } }) -}
bea847055a51c2d8a5a4f43d44b03253
  $fEqGender :: GHC.Classes.Eq InflectionData.Gender
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Gender
                  InflectionData.$fEqGender_$c==
                  InflectionData.$fEqGender_$c/= -}
bea847055a51c2d8a5a4f43d44b03253
  $fEqGender_$c/= ::
    InflectionData.Gender -> InflectionData.Gender -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Gender
                   b :: InflectionData.Gender ->
                 case a38 of wild {
                   InflectionData.M
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.M -> GHC.Types.False }
                   InflectionData.F
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.F -> GHC.Types.False }
                   InflectionData.COM
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.COM -> GHC.Types.False }
                   InflectionData.N
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.N -> GHC.Types.False } }) -}
bea847055a51c2d8a5a4f43d44b03253
  $fEqGender_$c== ::
    InflectionData.Gender -> InflectionData.Gender -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Gender
                   ds1 :: InflectionData.Gender ->
                 case ds of wild {
                   InflectionData.M
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.M -> GHC.Types.True }
                   InflectionData.F
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.F -> GHC.Types.True }
                   InflectionData.COM
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.COM -> GHC.Types.True }
                   InflectionData.N
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.N -> GHC.Types.True } }) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fEqHonorific :: GHC.Classes.Eq InflectionData.Honorific
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Honorific
                  InflectionData.$fEqHonorific_$c==
                  InflectionData.$fEqHonorific_$c/= -}
b998d88ddf707e2096355bc29dc9a0f5
  $fEqHonorific_$c/= ::
    InflectionData.Honorific
    -> InflectionData.Honorific -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Honorific b :: InflectionData.Honorific ->
                 case a38 of wild {
                   InflectionData.FAM
                   -> case b of wild1 {
                        InflectionData.FAM -> GHC.Types.False
                        InflectionData.FORM -> GHC.Types.True }
                   InflectionData.FORM
                   -> case b of wild1 {
                        InflectionData.FAM -> GHC.Types.True
                        InflectionData.FORM -> GHC.Types.False } }) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fEqHonorific_$c== ::
    InflectionData.Honorific
    -> InflectionData.Honorific -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Honorific
                   ds1 :: InflectionData.Honorific ->
                 case ds of wild {
                   InflectionData.FAM
                   -> case ds1 of wild1 {
                        InflectionData.FAM -> GHC.Types.True
                        InflectionData.FORM -> GHC.Types.False }
                   InflectionData.FORM
                   -> case ds1 of wild1 {
                        InflectionData.FAM -> GHC.Types.False
                        InflectionData.FORM -> GHC.Types.True } }) -}
1e3fe4826a39142c5de940012234f2c4
  $fEqInflectionSystem ::
    GHC.Classes.Eq InflectionData.InflectionSystem
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.InflectionSystem
                  InflectionData.$fEqInflectionSystem_$c==
                  InflectionData.$fEqInflectionSystem_$c/= -}
1e3fe4826a39142c5de940012234f2c4
  $fEqInflectionSystem_$c/= ::
    InflectionData.InflectionSystem
    -> InflectionData.InflectionSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.InflectionSystem
                   b :: InflectionData.InflectionSystem ->
                 case InflectionData.$fEqInflectionSystem_$c== a38 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
1e3fe4826a39142c5de940012234f2c4
  $fEqInflectionSystem_$c== ::
    InflectionData.InflectionSystem
    -> InflectionData.InflectionSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><S(SLLLLLLLLLLLLLLLLL),1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: InflectionData.InflectionSystem
                   w1 :: InflectionData.InflectionSystem ->
                 case w of ww { InflectionData.InflectionSystem ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 case w1 of ww19 { InflectionData.InflectionSystem ww20 ww21 ww22 ww23 ww24 ww25 ww26 ww27 ww28 ww29 ww30 ww31 ww32 ww33 ww34 ww35 ww36 ww37 ->
                 InflectionData.$w$c==2
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww20
                   ww21
                   ww22
                   ww23
                   ww24
                   ww25
                   ww26
                   ww27
                   ww28
                   ww29
                   ww30
                   ww31
                   ww32
                   ww33
                   ww34
                   ww35
                   ww36
                   ww37 } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fEqManifest ::
    GHC.Classes.Eq a => GHC.Classes.Eq (InflectionData.Manifest a)
  DFunId[0]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a38 $dEq :: GHC.Classes.Eq a38.
                  @ (InflectionData.Manifest a38)
                  (InflectionData.$fEqManifest_$c==10 @ a38 $dEq)
                  (InflectionData.$fEqManifest_$c/= @ a38 $dEq) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fEqManifestSystem :: GHC.Classes.Eq InflectionData.ManifestSystem
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.ManifestSystem
                  InflectionData.$fEqManifestSystem_$c==
                  InflectionData.$fEqManifestSystem_$c/= -}
15a5e47e68ee641b51bfd56a66e4c67a
  $fEqManifestSystem1 ::
    GHC.Classes.Eq
      (InflectionData.Manifest InflectionData.Gender,
       InflectionData.Manifest InflectionData.Animacy,
       InflectionData.Manifest InflectionData.Case,
       InflectionData.Manifest InflectionData.Number,
       InflectionData.Manifest InflectionData.Definiteness,
       InflectionData.Manifest InflectionData.Specificity,
       InflectionData.Manifest InflectionData.Topic,
       InflectionData.Manifest InflectionData.Person,
       InflectionData.Manifest InflectionData.Clusivity,
       InflectionData.Manifest InflectionData.Honorific,
       InflectionData.Manifest InflectionData.Polarity,
       InflectionData.Manifest InflectionData.Tense,
       InflectionData.Manifest InflectionData.Aspect,
       InflectionData.Manifest InflectionData.Mood,
       InflectionData.Manifest InflectionData.Voice,
       InflectionData.Manifest InflectionData.Evidentiality,
       InflectionData.Manifest InflectionData.Transitivity,
       InflectionData.Manifest InflectionData.Volition)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$fEq(,,,,,,,,,,,,,,,,,) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fEqManifestSystem_$c/= ::
    InflectionData.ManifestSystem
    -> InflectionData.ManifestSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.ManifestSystem
                   b :: InflectionData.ManifestSystem ->
                 case InflectionData.$fEqManifestSystem_$c== a38 b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fEqManifestSystem_$c== ::
    InflectionData.ManifestSystem
    -> InflectionData.ManifestSystem -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U)><S(SLL),1*U(1*U,1*U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: InflectionData.ManifestSystem
                   w1 :: InflectionData.ManifestSystem ->
                 case w of ww { InflectionData.ManifestSystem ww1 ww2 ww3 ->
                 case w1 of ww4 { InflectionData.ManifestSystem ww5 ww6 ww7 ->
                 InflectionData.$w$c==3 ww1 ww2 ww3 ww5 ww6 ww7 } }) -}
17e73fa315293f8d277719af71ed1eb7
  $fEqManifestSystem_$s$fEq(,) ::
    GHC.Classes.Eq
      (PhonemeData.Morpheme,
       (InflectionData.Manifest InflectionData.Gender,
        InflectionData.Manifest InflectionData.Animacy,
        InflectionData.Manifest InflectionData.Case,
        InflectionData.Manifest InflectionData.Number,
        InflectionData.Manifest InflectionData.Definiteness,
        InflectionData.Manifest InflectionData.Specificity,
        InflectionData.Manifest InflectionData.Topic,
        InflectionData.Manifest InflectionData.Person,
        InflectionData.Manifest InflectionData.Clusivity,
        InflectionData.Manifest InflectionData.Honorific,
        InflectionData.Manifest InflectionData.Polarity,
        InflectionData.Manifest InflectionData.Tense,
        InflectionData.Manifest InflectionData.Aspect,
        InflectionData.Manifest InflectionData.Mood,
        InflectionData.Manifest InflectionData.Voice,
        InflectionData.Manifest InflectionData.Evidentiality,
        InflectionData.Manifest InflectionData.Transitivity,
        InflectionData.Manifest InflectionData.Volition))
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (PhonemeData.Morpheme,
                     (InflectionData.Manifest InflectionData.Gender,
                      InflectionData.Manifest InflectionData.Animacy,
                      InflectionData.Manifest InflectionData.Case,
                      InflectionData.Manifest InflectionData.Number,
                      InflectionData.Manifest InflectionData.Definiteness,
                      InflectionData.Manifest InflectionData.Specificity,
                      InflectionData.Manifest InflectionData.Topic,
                      InflectionData.Manifest InflectionData.Person,
                      InflectionData.Manifest InflectionData.Clusivity,
                      InflectionData.Manifest InflectionData.Honorific,
                      InflectionData.Manifest InflectionData.Polarity,
                      InflectionData.Manifest InflectionData.Tense,
                      InflectionData.Manifest InflectionData.Aspect,
                      InflectionData.Manifest InflectionData.Mood,
                      InflectionData.Manifest InflectionData.Voice,
                      InflectionData.Manifest InflectionData.Evidentiality,
                      InflectionData.Manifest InflectionData.Transitivity,
                      InflectionData.Manifest InflectionData.Volition))
                  (GHC.Classes.$fEq(,)_$c==
                     @ PhonemeData.Morpheme
                     @ (InflectionData.Manifest InflectionData.Gender,
                        InflectionData.Manifest InflectionData.Animacy,
                        InflectionData.Manifest InflectionData.Case,
                        InflectionData.Manifest InflectionData.Number,
                        InflectionData.Manifest InflectionData.Definiteness,
                        InflectionData.Manifest InflectionData.Specificity,
                        InflectionData.Manifest InflectionData.Topic,
                        InflectionData.Manifest InflectionData.Person,
                        InflectionData.Manifest InflectionData.Clusivity,
                        InflectionData.Manifest InflectionData.Honorific,
                        InflectionData.Manifest InflectionData.Polarity,
                        InflectionData.Manifest InflectionData.Tense,
                        InflectionData.Manifest InflectionData.Aspect,
                        InflectionData.Manifest InflectionData.Mood,
                        InflectionData.Manifest InflectionData.Voice,
                        InflectionData.Manifest InflectionData.Evidentiality,
                        InflectionData.Manifest InflectionData.Transitivity,
                        InflectionData.Manifest InflectionData.Volition)
                     PhonemeData.$fEqMorpheme
                     InflectionData.$fEqManifestSystem1)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ PhonemeData.Morpheme
                     @ (InflectionData.Manifest InflectionData.Gender,
                        InflectionData.Manifest InflectionData.Animacy,
                        InflectionData.Manifest InflectionData.Case,
                        InflectionData.Manifest InflectionData.Number,
                        InflectionData.Manifest InflectionData.Definiteness,
                        InflectionData.Manifest InflectionData.Specificity,
                        InflectionData.Manifest InflectionData.Topic,
                        InflectionData.Manifest InflectionData.Person,
                        InflectionData.Manifest InflectionData.Clusivity,
                        InflectionData.Manifest InflectionData.Honorific,
                        InflectionData.Manifest InflectionData.Polarity,
                        InflectionData.Manifest InflectionData.Tense,
                        InflectionData.Manifest InflectionData.Aspect,
                        InflectionData.Manifest InflectionData.Mood,
                        InflectionData.Manifest InflectionData.Voice,
                        InflectionData.Manifest InflectionData.Evidentiality,
                        InflectionData.Manifest InflectionData.Transitivity,
                        InflectionData.Manifest InflectionData.Volition)
                     PhonemeData.$fEqMorpheme
                     InflectionData.$fEqManifestSystem1) -}
d4d7fe6a7722743af73d0848be830e04
  $fEqManifestType :: GHC.Classes.Eq InflectionData.ManifestType
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.ManifestType
                  InflectionData.$fEqManifestType_$c==
                  InflectionData.$fEqManifestType_$c/= -}
d4d7fe6a7722743af73d0848be830e04
  $fEqManifestType_$c/= ::
    InflectionData.ManifestType
    -> InflectionData.ManifestType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.ManifestType
                   b :: InflectionData.ManifestType ->
                 case a38 of wild {
                   InflectionData.PreParticle
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.PreParticle -> GHC.Types.False }
                   InflectionData.Prefix
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.Prefix -> GHC.Types.False }
                   InflectionData.Suffix
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.Suffix -> GHC.Types.False }
                   InflectionData.PostParticle
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.PostParticle -> GHC.Types.False } }) -}
d4d7fe6a7722743af73d0848be830e04
  $fEqManifestType_$c== ::
    InflectionData.ManifestType
    -> InflectionData.ManifestType -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.ManifestType
                   ds1 :: InflectionData.ManifestType ->
                 case ds of wild {
                   InflectionData.PreParticle
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.PreParticle -> GHC.Types.True }
                   InflectionData.Prefix
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.Prefix -> GHC.Types.True }
                   InflectionData.Suffix
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.Suffix -> GHC.Types.True }
                   InflectionData.PostParticle
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.PostParticle -> GHC.Types.True } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fEqManifest_$c/= ::
    GHC.Classes.Eq a =>
    InflectionData.Manifest a
    -> InflectionData.Manifest a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a38
                   $dEq :: GHC.Classes.Eq a38
                   a39 :: InflectionData.Manifest a38
                   b :: InflectionData.Manifest a38 ->
                 case a39 of wild {
                   InflectionData.NoManifest
                   -> case b of wild1 {
                        InflectionData.NoManifest -> GHC.Types.False
                        InflectionData.Manifest ipv ipv1 -> GHC.Types.True }
                   InflectionData.Manifest a40 a41
                   -> case b of wild1 {
                        InflectionData.NoManifest -> GHC.Types.True
                        InflectionData.Manifest b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                  InflectionData.$fEqManifest_$s$fEq(,,)
                                  a40
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True
                             -> case GHC.Classes.== @ a38 $dEq a41 b2 of wild3 {
                                  GHC.Types.False -> GHC.Types.True
                                  GHC.Types.True -> GHC.Types.False } } } }) -}
89f52f47d857baf59a835f155022c894
  $fEqManifest_$c== ::
    InflectionData.Mood -> InflectionData.Mood -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Mood
                   ds1 :: InflectionData.Mood ->
                 case ds of wild {
                   InflectionData.IND
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.IND -> GHC.Types.True }
                   InflectionData.IRR
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.IRR -> GHC.Types.True }
                   InflectionData.DEO
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.DEO -> GHC.Types.True }
                   InflectionData.IMP
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.IMP -> GHC.Types.True }
                   InflectionData.JUS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.JUS -> GHC.Types.True }
                   InflectionData.OPT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.OPT -> GHC.Types.True }
                   InflectionData.EPIS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.EPIS -> GHC.Types.True }
                   InflectionData.SBJV
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.SBJV -> GHC.Types.True }
                   InflectionData.POT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.POT -> GHC.Types.True }
                   InflectionData.COND
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.COND -> GHC.Types.True } }) -}
d524767ed256fd8fb6411842c02ad522
  $fEqManifest_$c==1 ::
    InflectionData.Number -> InflectionData.Number -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Number
                   ds1 :: InflectionData.Number ->
                 case ds of wild {
                   InflectionData.SG
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.SG -> GHC.Types.True }
                   InflectionData.DU
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.DU -> GHC.Types.True }
                   InflectionData.TRI
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.TRI -> GHC.Types.True }
                   InflectionData.PA
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.PA -> GHC.Types.True }
                   InflectionData.PL
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.PL -> GHC.Types.True } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fEqManifest_$c==10 ::
    GHC.Classes.Eq a =>
    InflectionData.Manifest a
    -> InflectionData.Manifest a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,1*U(1*C1(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: (\ @ a38
                   $dEq :: GHC.Classes.Eq a38
                   ds :: InflectionData.Manifest a38
                   ds1 :: InflectionData.Manifest a38 ->
                 case ds of wild {
                   InflectionData.NoManifest
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.True
                        InflectionData.Manifest ipv ipv1 -> GHC.Types.False }
                   InflectionData.Manifest a39 a40
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.False
                        InflectionData.Manifest b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                  InflectionData.$fEqManifest_$s$fEq(,,)
                                  a39
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True -> GHC.Classes.== @ a38 $dEq a40 b2 } } }) -}
87552d4bd640161dc918422e1f989f36
  $fEqManifest_$c==2 ::
    InflectionData.Person -> InflectionData.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Person ds1 :: InflectionData.Person ->
                 case ds of wild {
                   InflectionData.FIRST
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.FIRST -> GHC.Types.True }
                   InflectionData.SECOND
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.SECOND -> GHC.Types.True }
                   InflectionData.THIRD
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.THIRD -> GHC.Types.True } }) -}
b165a208777adb6384e8aa49b7841cdc
  $fEqManifest_$c==3 ::
    InflectionData.Polarity
    -> InflectionData.Polarity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Polarity ds1 :: InflectionData.Polarity ->
                 case ds of wild {
                   InflectionData.AFF
                   -> case ds1 of wild1 {
                        InflectionData.AFF -> GHC.Types.True
                        InflectionData.NEG -> GHC.Types.False }
                   InflectionData.NEG
                   -> case ds1 of wild1 {
                        InflectionData.AFF -> GHC.Types.False
                        InflectionData.NEG -> GHC.Types.True } }) -}
43df515dcdadd0ea11740b17c269f784
  $fEqManifest_$c==4 ::
    InflectionData.Specificity
    -> InflectionData.Specificity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Specificity
                   ds1 :: InflectionData.Specificity ->
                 case ds of wild {
                   InflectionData.SPEC
                   -> case ds1 of wild1 {
                        InflectionData.SPEC -> GHC.Types.True
                        InflectionData.NSPEC -> GHC.Types.False }
                   InflectionData.NSPEC
                   -> case ds1 of wild1 {
                        InflectionData.SPEC -> GHC.Types.False
                        InflectionData.NSPEC -> GHC.Types.True } }) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fEqManifest_$c==5 ::
    InflectionData.Tense -> InflectionData.Tense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Tense
                   ds1 :: InflectionData.Tense ->
                 case ds of wild {
                   InflectionData.PST
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.PST -> GHC.Types.True }
                   InflectionData.REM
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.REM -> GHC.Types.True }
                   InflectionData.REC
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.REC -> GHC.Types.True }
                   InflectionData.NPST
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.NPST -> GHC.Types.True }
                   InflectionData.PRS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.PRS -> GHC.Types.True }
                   InflectionData.NFUT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.NFUT -> GHC.Types.True }
                   InflectionData.FUT
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.FUT -> GHC.Types.True }
                   InflectionData.IMMF
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.IMMF -> GHC.Types.True }
                   InflectionData.REMF
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.REMF -> GHC.Types.True } }) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fEqManifest_$c==6 ::
    InflectionData.Topic -> InflectionData.Topic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Topic ds1 :: InflectionData.Topic ->
                 case ds of wild {
                   InflectionData.TOP
                   -> case ds1 of wild1 {
                        InflectionData.TOP -> GHC.Types.True
                        InflectionData.NTOP -> GHC.Types.False }
                   InflectionData.NTOP
                   -> case ds1 of wild1 {
                        InflectionData.TOP -> GHC.Types.False
                        InflectionData.NTOP -> GHC.Types.True } }) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fEqManifest_$c==7 ::
    InflectionData.Transitivity
    -> InflectionData.Transitivity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Transitivity
                   ds1 :: InflectionData.Transitivity ->
                 case ds of wild {
                   InflectionData.NTRANS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.NTRANS -> GHC.Types.True }
                   InflectionData.TRANS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False InflectionData.TRANS -> GHC.Types.True }
                   InflectionData.DITRANS
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.DITRANS -> GHC.Types.True } }) -}
523b90b12350f06385d4da5905742868
  $fEqManifest_$c==8 ::
    InflectionData.Voice -> InflectionData.Voice -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Voice ds1 :: InflectionData.Voice ->
                 case ds of wild {
                   InflectionData.ACTIVE
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.ACTIVE -> GHC.Types.True }
                   InflectionData.MIDDLE
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.MIDDLE -> GHC.Types.True }
                   InflectionData.PASSIVE
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        InflectionData.PASSIVE -> GHC.Types.True } }) -}
79163f2537538d5ab28ad5d835b8900a
  $fEqManifest_$c==9 ::
    InflectionData.Volition
    -> InflectionData.Volition -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Volition ds1 :: InflectionData.Volition ->
                 case ds of wild {
                   InflectionData.VOL
                   -> case ds1 of wild1 {
                        InflectionData.VOL -> GHC.Types.True
                        InflectionData.NVOL -> GHC.Types.False }
                   InflectionData.NVOL
                   -> case ds1 of wild1 {
                        InflectionData.VOL -> GHC.Types.False
                        InflectionData.NVOL -> GHC.Types.True } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fEqManifest_$s$c==17 ::
    InflectionData.Manifest InflectionData.Volition
    -> InflectionData.Manifest InflectionData.Volition
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Manifest InflectionData.Volition
                   ds1 :: InflectionData.Manifest InflectionData.Volition ->
                 case ds of wild {
                   InflectionData.NoManifest
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.True
                        InflectionData.Manifest ipv ipv1 -> GHC.Types.False }
                   InflectionData.Manifest a38 a39
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.False
                        InflectionData.Manifest b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                  InflectionData.$fEqManifest_$s$fEq(,,)
                                  a38
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> InflectionData.$fEqManifest_$c==9 a39 b2 } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fEqManifest_$s$c==35 ::
    InflectionData.Manifest [InflectionData.Volition]
    -> InflectionData.Manifest [InflectionData.Volition]
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ ds :: InflectionData.Manifest
                           [InflectionData.Volition]
                   ds1 :: InflectionData.Manifest [InflectionData.Volition] ->
                 case ds of wild {
                   InflectionData.NoManifest
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.True
                        InflectionData.Manifest ipv ipv1 -> GHC.Types.False }
                   InflectionData.Manifest a38 a39
                   -> case ds1 of wild1 {
                        InflectionData.NoManifest -> GHC.Types.False
                        InflectionData.Manifest b1 b2
                        -> case GHC.Classes.$fEq[]_$c==
                                  @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                  InflectionData.$fEqManifest_$s$fEq(,,)
                                  a38
                                  b1 of wild2 {
                             GHC.Types.False -> GHC.Types.False
                             GHC.Types.True
                             -> GHC.Classes.$fEq[]_$c==
                                  @ InflectionData.Volition
                                  InflectionData.$fEqVolition
                                  a39
                                  b2 } } }) -}
c4773b2e771d85c7fb978429f19e33aa
  $fEqManifest_$s$fEq(,,) ::
    GHC.Classes.Eq
      (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                  (GHC.Classes.$fEq(,,)_$c==
                     @ GrammarData.LexCat
                     @ InflectionData.ManifestType
                     @ GHC.Types.Int
                     GrammarData.$fEqLexCat
                     InflectionData.$fEqManifestType
                     GHC.Classes.$fEqInt)
                  InflectionData.$fEqManifest_$s$fEq(,,)_$c/= -}
9189eab6759ebc59343b279c38ecd046
  $fEqManifest_$s$fEq(,,)_$c/= ::
    (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
    -> (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
    -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(SLL),1*U(1*U,1*U,1*U(U))><S(SLL),1*U(1*U,1*U,1*U(U))>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: (GrammarData.LexCat,
                           InflectionData.ManifestType,
                           GHC.Types.Int)
                   b1 :: (GrammarData.LexCat,
                          InflectionData.ManifestType,
                          GHC.Types.Int) ->
                 case GHC.Classes.$fEq(,,)_$c==
                        @ GrammarData.LexCat
                        @ InflectionData.ManifestType
                        @ GHC.Types.Int
                        GrammarData.$fEqLexCat
                        InflectionData.$fEqManifestType
                        GHC.Classes.$fEqInt
                        a38
                        b1 of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
89f52f47d857baf59a835f155022c894
  $fEqMood :: GHC.Classes.Eq InflectionData.Mood
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Mood
                  InflectionData.$fEqManifest_$c==
                  InflectionData.$fEqMood_$c/= -}
89f52f47d857baf59a835f155022c894
  $fEqMood_$c/= ::
    InflectionData.Mood -> InflectionData.Mood -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Mood
                   b :: InflectionData.Mood ->
                 case a38 of wild {
                   InflectionData.IND
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.IND -> GHC.Types.False }
                   InflectionData.IRR
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.IRR -> GHC.Types.False }
                   InflectionData.DEO
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.DEO -> GHC.Types.False }
                   InflectionData.IMP
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.IMP -> GHC.Types.False }
                   InflectionData.JUS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.JUS -> GHC.Types.False }
                   InflectionData.OPT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.OPT -> GHC.Types.False }
                   InflectionData.EPIS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.EPIS -> GHC.Types.False }
                   InflectionData.SBJV
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.SBJV -> GHC.Types.False }
                   InflectionData.POT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.POT -> GHC.Types.False }
                   InflectionData.COND
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.COND -> GHC.Types.False } }) -}
d524767ed256fd8fb6411842c02ad522
  $fEqNumber :: GHC.Classes.Eq InflectionData.Number
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Number
                  InflectionData.$fEqManifest_$c==1
                  InflectionData.$fEqNumber_$c/= -}
d524767ed256fd8fb6411842c02ad522
  $fEqNumber_$c/= ::
    InflectionData.Number -> InflectionData.Number -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Number
                   b :: InflectionData.Number ->
                 case a38 of wild {
                   InflectionData.SG
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.SG -> GHC.Types.False }
                   InflectionData.DU
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.DU -> GHC.Types.False }
                   InflectionData.TRI
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.TRI -> GHC.Types.False }
                   InflectionData.PA
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.PA -> GHC.Types.False }
                   InflectionData.PL
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.PL -> GHC.Types.False } }) -}
87552d4bd640161dc918422e1f989f36
  $fEqPerson :: GHC.Classes.Eq InflectionData.Person
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Person
                  InflectionData.$fEqManifest_$c==2
                  InflectionData.$fEqPerson_$c/= -}
87552d4bd640161dc918422e1f989f36
  $fEqPerson_$c/= ::
    InflectionData.Person -> InflectionData.Person -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Person b :: InflectionData.Person ->
                 case a38 of wild {
                   InflectionData.FIRST
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.FIRST -> GHC.Types.False }
                   InflectionData.SECOND
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.SECOND -> GHC.Types.False }
                   InflectionData.THIRD
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.THIRD -> GHC.Types.False } }) -}
b165a208777adb6384e8aa49b7841cdc
  $fEqPolarity :: GHC.Classes.Eq InflectionData.Polarity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Polarity
                  InflectionData.$fEqManifest_$c==3
                  InflectionData.$fEqPolarity_$c/= -}
b165a208777adb6384e8aa49b7841cdc
  $fEqPolarity_$c/= ::
    InflectionData.Polarity
    -> InflectionData.Polarity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Polarity b :: InflectionData.Polarity ->
                 case a38 of wild {
                   InflectionData.AFF
                   -> case b of wild1 {
                        InflectionData.AFF -> GHC.Types.False
                        InflectionData.NEG -> GHC.Types.True }
                   InflectionData.NEG
                   -> case b of wild1 {
                        InflectionData.AFF -> GHC.Types.True
                        InflectionData.NEG -> GHC.Types.False } }) -}
43df515dcdadd0ea11740b17c269f784
  $fEqSpecificity :: GHC.Classes.Eq InflectionData.Specificity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Specificity
                  InflectionData.$fEqManifest_$c==4
                  InflectionData.$fEqSpecificity_$c/= -}
43df515dcdadd0ea11740b17c269f784
  $fEqSpecificity_$c/= ::
    InflectionData.Specificity
    -> InflectionData.Specificity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Specificity
                   b :: InflectionData.Specificity ->
                 case a38 of wild {
                   InflectionData.SPEC
                   -> case b of wild1 {
                        InflectionData.SPEC -> GHC.Types.False
                        InflectionData.NSPEC -> GHC.Types.True }
                   InflectionData.NSPEC
                   -> case b of wild1 {
                        InflectionData.SPEC -> GHC.Types.True
                        InflectionData.NSPEC -> GHC.Types.False } }) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fEqTense :: GHC.Classes.Eq InflectionData.Tense
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Tense
                  InflectionData.$fEqManifest_$c==5
                  InflectionData.$fEqTense_$c/= -}
004b6b4805c5a693db94c0d4a7a3616e
  $fEqTense_$c/= ::
    InflectionData.Tense -> InflectionData.Tense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ a38 :: InflectionData.Tense
                   b :: InflectionData.Tense ->
                 case a38 of wild {
                   InflectionData.PST
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.PST -> GHC.Types.False }
                   InflectionData.REM
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.REM -> GHC.Types.False }
                   InflectionData.REC
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.REC -> GHC.Types.False }
                   InflectionData.NPST
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.NPST -> GHC.Types.False }
                   InflectionData.PRS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.PRS -> GHC.Types.False }
                   InflectionData.NFUT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.NFUT -> GHC.Types.False }
                   InflectionData.FUT
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.FUT -> GHC.Types.False }
                   InflectionData.IMMF
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.IMMF -> GHC.Types.False }
                   InflectionData.REMF
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.REMF -> GHC.Types.False } }) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fEqTopic :: GHC.Classes.Eq InflectionData.Topic
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Topic
                  InflectionData.$fEqManifest_$c==6
                  InflectionData.$fEqTopic_$c/= -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fEqTopic_$c/= ::
    InflectionData.Topic -> InflectionData.Topic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Topic b :: InflectionData.Topic ->
                 case a38 of wild {
                   InflectionData.TOP
                   -> case b of wild1 {
                        InflectionData.TOP -> GHC.Types.False
                        InflectionData.NTOP -> GHC.Types.True }
                   InflectionData.NTOP
                   -> case b of wild1 {
                        InflectionData.TOP -> GHC.Types.True
                        InflectionData.NTOP -> GHC.Types.False } }) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fEqTransitivity :: GHC.Classes.Eq InflectionData.Transitivity
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Transitivity
                  InflectionData.$fEqManifest_$c==7
                  InflectionData.$fEqTransitivity_$c/= -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fEqTransitivity_$c/= ::
    InflectionData.Transitivity
    -> InflectionData.Transitivity -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Transitivity
                   b :: InflectionData.Transitivity ->
                 case a38 of wild {
                   InflectionData.NTRANS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.NTRANS -> GHC.Types.False }
                   InflectionData.TRANS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True InflectionData.TRANS -> GHC.Types.False }
                   InflectionData.DITRANS
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.DITRANS -> GHC.Types.False } }) -}
523b90b12350f06385d4da5905742868
  $fEqVoice :: GHC.Classes.Eq InflectionData.Voice
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Voice
                  InflectionData.$fEqManifest_$c==8
                  InflectionData.$fEqVoice_$c/= -}
523b90b12350f06385d4da5905742868
  $fEqVoice_$c/= ::
    InflectionData.Voice -> InflectionData.Voice -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Voice b :: InflectionData.Voice ->
                 case a38 of wild {
                   InflectionData.ACTIVE
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.ACTIVE -> GHC.Types.False }
                   InflectionData.MIDDLE
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.MIDDLE -> GHC.Types.False }
                   InflectionData.PASSIVE
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        InflectionData.PASSIVE -> GHC.Types.False } }) -}
79163f2537538d5ab28ad5d835b8900a
  $fEqVolition :: GHC.Classes.Eq InflectionData.Volition
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Volition
                  InflectionData.$fEqManifest_$c==9
                  InflectionData.$fEqVolition_$c/= -}
79163f2537538d5ab28ad5d835b8900a
  $fEqVolition_$c/= ::
    InflectionData.Volition
    -> InflectionData.Volition -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ a38 :: InflectionData.Volition b :: InflectionData.Volition ->
                 case a38 of wild {
                   InflectionData.VOL
                   -> case b of wild1 {
                        InflectionData.VOL -> GHC.Types.False
                        InflectionData.NVOL -> GHC.Types.True }
                   InflectionData.NVOL
                   -> case b of wild1 {
                        InflectionData.VOL -> GHC.Types.True
                        InflectionData.NVOL -> GHC.Types.False } }) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement :: GHC.Read.Read InflectionData.Agreement
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Agreement
                  InflectionData.$fReadAgreement_$s$dmreadsPrec
                  InflectionData.$fReadAgreement_$sreadListDefault
                  InflectionData.$fReadAgreement_$creadPrec
                  InflectionData.$fReadAgreement_$creadListPrec -}
645292a0c707731346010c9800970e0d
  $fReadAgreement1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Agreement] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Agreement]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Agreement
                   InflectionData.$fReadAgreement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Agreement>_R))
                   @ b
                   eta1) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Agreement
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Agreement
                   InflectionData.$fReadAgreement3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Agreement>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Agreement>_R)))) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Agreement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   w1 :: InflectionData.Agreement
                         -> Text.ParserCombinators.ReadP.P b ->
                 case w of ww { GHC.Types.I# ww1 ->
                 InflectionData.$wa ww1 @ b w1 }) -}
8edf3377529f9304ccefe36b35dcad40
  $fReadAgreement4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Agreement"#) -}
b76194b75ee7cc527050c7a002fc8bd1
  $fReadAgreement5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem ::
    GHC.Read.Read InflectionData.AgreementSystem
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.AgreementSystem
                  InflectionData.$fReadAgreementSystem_$creadsPrec
                  InflectionData.$fReadAgreementSystem_$sreadListDefault
                  InflectionData.$fReadAgreementSystem_$creadPrec
                  InflectionData.$fReadAgreementSystem_$creadListPrec -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.AgreementSystem]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.AgreementSystem]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.AgreementSystem
                   InflectionData.$fReadAgreementSystem2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.AgreementSystem>_R))
                   @ b
                   eta1) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         InflectionData.AgreementSystem
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.AgreementSystem
                   InflectionData.$fReadAgreementSystem3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.AgreementSystem>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.AgreementSystem>_R)))) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.AgreementSystem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   w1 :: InflectionData.AgreementSystem
                         -> Text.ParserCombinators.ReadP.P b ->
                 case w of ww { GHC.Types.I# ww1 ->
                 InflectionData.$wa1 ww1 @ b w1 }) -}
8d30b9a30ecc7f91aaf2390281f0b3c5
  $fReadAgreementSystem4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AgreementSystem"#) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.AgreementSystem]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAgreementSystem1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.AgreementSystem]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.AgreementSystem]>_R))) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.AgreementSystem
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAgreementSystem2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.AgreementSystem>_R)) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         InflectionData.AgreementSystem
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadP.run
                   @ InflectionData.AgreementSystem
                   ((GHC.Read.$fReadDouble10
                       @ InflectionData.AgreementSystem
                       InflectionData.$fReadAgreementSystem3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                           <InflectionData.AgreementSystem>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                      <InflectionData.AgreementSystem>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <InflectionData.AgreementSystem>_R)
                      @ InflectionData.AgreementSystem
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ InflectionData.AgreementSystem))) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fReadAgreementSystem_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.AgreementSystem]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.AgreementSystem]
                   ((InflectionData.$fReadAgreementSystem_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[InflectionData.AgreementSystem]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[InflectionData.AgreementSystem]>_R)
                      @ [InflectionData.AgreementSystem]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [InflectionData.AgreementSystem]))) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Agreement]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAgreement1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Agreement]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Agreement]>_R))) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Agreement
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAgreement2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Agreement>_R)) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Agreement
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Agreement
                   InflectionData.$fReadAgreement_$creadPrec
                   eta) -}
645292a0c707731346010c9800970e0d
  $fReadAgreement_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Agreement]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Agreement]
                   ((InflectionData.$fReadAgreement_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[InflectionData.Agreement]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[InflectionData.Agreement]>_R)
                      @ [InflectionData.Agreement]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [InflectionData.Agreement]))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy :: GHC.Read.Read InflectionData.Animacy
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Animacy
                  InflectionData.$fReadAnimacy_$s$dmreadsPrec
                  InflectionData.$fReadAnimacy24
                  InflectionData.$fReadAnimacy_$creadPrec
                  InflectionData.$fReadAnimacy_$creadListPrec -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Animacy] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Animacy]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Animacy
                   InflectionData.$fReadAnimacy2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Animacy>_R))
                   @ b
                   eta1) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Animacy
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INAN) -}
a3255b03dbfba9bdaa88662ab7e47762
  $fReadAnimacy11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INAN"#) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy12 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAnimacy14,
                  InflectionData.$fReadAnimacy13
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Animacy>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Animacy>_R))))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy13 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Animacy
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ZO) -}
9f682fa9c26673db34a323b8498d6cac
  $fReadAnimacy14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ZO"#) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy15 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAnimacy17,
                  InflectionData.$fReadAnimacy16
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Animacy>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Animacy>_R))))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy16 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Animacy
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NHUM) -}
23dce5885ab68c46d4cb13ae4c6a69f5
  $fReadAnimacy17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NHUM"#) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy18 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAnimacy20,
                  InflectionData.$fReadAnimacy19
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Animacy>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Animacy>_R))))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy19 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Animacy
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.HUM) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Animacy
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Animacy
                   InflectionData.$fReadAnimacy3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Animacy>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Animacy>_R)))) -}
6a5849656bfa9d0af9ad7398a3294493
  $fReadAnimacy20 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HUM"#) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy21 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAnimacy23,
                  InflectionData.$fReadAnimacy22
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Animacy>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Animacy>_R))))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy22 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Animacy
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.AN) -}
9da93159ae27eda3d1015cb485fcb6eb
  $fReadAnimacy23 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AN"#) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy24 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Animacy]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Animacy]
                   InflectionData.$fReadAnimacy25) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy25 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Animacy]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Animacy
                   InflectionData.$fReadAnimacy2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Animacy>_R))
                   @ [InflectionData.Animacy]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Animacy])) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Animacy -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Animacy
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Animacy
                   InflectionData.$fReadAnimacy4
                   eta
                   @ b
                   eta1) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
                   InflectionData.$fReadAnimacy21
                   InflectionData.$fReadAnimacy5) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
                   InflectionData.$fReadAnimacy18
                   InflectionData.$fReadAnimacy6) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
                   InflectionData.$fReadAnimacy15
                   InflectionData.$fReadAnimacy7) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
                   InflectionData.$fReadAnimacy12
                   InflectionData.$fReadAnimacy8) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
                   InflectionData.$fReadAnimacy9
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Animacy))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAnimacy11,
                  InflectionData.$fReadAnimacy10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Animacy>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Animacy>_R))))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Animacy]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAnimacy1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Animacy]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Animacy]>_R))) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Animacy
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAnimacy2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Animacy>_R)) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fReadAnimacy_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Animacy
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Animacy
                   InflectionData.$fReadAnimacy_$creadPrec
                   eta) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect :: GHC.Read.Read InflectionData.Aspect
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Aspect
                  InflectionData.$fReadAspect_$s$dmreadsPrec
                  InflectionData.$fReadAspect12
                  InflectionData.$fReadAspect_$creadPrec
                  InflectionData.$fReadAspect_$creadListPrec -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Aspect] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Aspect]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Aspect
                   InflectionData.$fReadAspect2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Aspect>_R))
                   @ b
                   eta1) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Aspect -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Aspect -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PFV) -}
18ba211b5484bc4524ee2c30c84bcb86
  $fReadAspect11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PFV"#) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect12 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Aspect]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Aspect]
                   InflectionData.$fReadAspect13) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect13 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Aspect]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Aspect
                   InflectionData.$fReadAspect2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Aspect>_R))
                   @ [InflectionData.Aspect]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Aspect])) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Aspect
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Aspect
                   InflectionData.$fReadAspect3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Aspect>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Aspect>_R)))) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Aspect -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Aspect
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Aspect
                   InflectionData.$fReadAspect4
                   eta
                   @ b
                   eta1) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)
                   InflectionData.$fReadAspect9
                   InflectionData.$fReadAspect5) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)
                   InflectionData.$fReadAspect6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Aspect))) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAspect8,
                  InflectionData.$fReadAspect7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Aspect>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Aspect>_R))))) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Aspect -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Aspect -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IPFV) -}
566ad0d355a04ff35d88c29c3baaeb47
  $fReadAspect8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IPFV"#) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadAspect11,
                  InflectionData.$fReadAspect10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Aspect>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Aspect>_R))))) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Aspect]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAspect1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Aspect]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Aspect]>_R))) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Aspect
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadAspect2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Aspect>_R)) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fReadAspect_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Aspect
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Aspect
                   InflectionData.$fReadAspect_$creadPrec
                   eta) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase :: GHC.Read.Read InflectionData.Case
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Case
                  InflectionData.$fReadCase_$s$dmreadsPrec
                  InflectionData.$fReadCase196
                  InflectionData.$fReadCase_$creadPrec
                  InflectionData.$fReadCase_$creadListPrec -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Case] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Case]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Case
                   InflectionData.$fReadCase2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Case>_R))
                   @ b
                   eta1) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase10 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase175
                   InflectionData.$fReadCase11) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase100 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase102,
                  InflectionData.$fReadCase101
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase101 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ABL) -}
ab020b28050d2c72fb40224bf56bf17b
  $fReadCase102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ABL"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase103 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase105,
                  InflectionData.$fReadCase104
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase104 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.LOC) -}
e3d297da38e96171f4bffe9b92c75d29
  $fReadCase105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LOC"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase106 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase108,
                  InflectionData.$fReadCase107
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase107 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.LAT) -}
14dd76ed7265b7dad3fdc29c628d8994
  $fReadCase108 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "LAT"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase109 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase111,
                  InflectionData.$fReadCase110
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase11 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase172
                   InflectionData.$fReadCase12) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase110 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.POST) -}
aec131d71b7c65d2c70798ca91fcbb85
  $fReadCase111 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POST"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase112 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase114,
                  InflectionData.$fReadCase113
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase113 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PREP) -}
c8338d761c4ad8c8d18b0c800e0cd20b
  $fReadCase114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PREP"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase115 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase117,
                  InflectionData.$fReadCase116
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase116 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ADP) -}
1af9ccc9af21d1804409276856c6cb65
  $fReadCase117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ADP"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase118 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase120,
                  InflectionData.$fReadCase119
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase119 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL6) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase169
                   InflectionData.$fReadCase13) -}
20cb3ca07a8682b6bdea489361484024
  $fReadCase120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL6"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase121 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase123,
                  InflectionData.$fReadCase122
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase122 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL5) -}
d03bd4346cbef9726c3874c793c269c9
  $fReadCase123 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL5"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase124 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase126,
                  InflectionData.$fReadCase125
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase125 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL4) -}
0b14d721815ef73632839324b486d1cf
  $fReadCase126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL4"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase127 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase129,
                  InflectionData.$fReadCase128
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase128 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL3) -}
942f80a6306fe7e054035dd85a53d613
  $fReadCase129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL3"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase13 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase166
                   InflectionData.$fReadCase14) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase130 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase132,
                  InflectionData.$fReadCase131
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase131 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL2) -}
93dd7082dd23bd2ea5e4702fabf57910
  $fReadCase132 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL2"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase133 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase135,
                  InflectionData.$fReadCase134
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase134 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBL1) -}
1c571ec1ddac5bc39445c0e410514684
  $fReadCase135 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBL1"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase136 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase138,
                  InflectionData.$fReadCase137
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase137 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DRT2) -}
e2494c61f80eb29baf1010b7c92edd18
  $fReadCase138 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DRT2"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase139 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase141,
                  InflectionData.$fReadCase140
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase14 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase163
                   InflectionData.$fReadCase15) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase140 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.TR) -}
9c912e0a1baf7b966b1f1b56e1d8d728
  $fReadCase141 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase142 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase144,
                  InflectionData.$fReadCase143
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase143 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DRT1) -}
aef080de9dc2d4bff38e384265f8852f
  $fReadCase144 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DRT1"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase145 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase147,
                  InflectionData.$fReadCase146
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase146 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OBJ) -}
a9d61518b9ea11531ee715798513c544
  $fReadCase147 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OBJ"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase148 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase150,
                  InflectionData.$fReadCase149
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase149 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DTR) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase15 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase160
                   InflectionData.$fReadCase16) -}
2bff86e0abec9c949080aaa7c09a892c
  $fReadCase150 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DTR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase151 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase153,
                  InflectionData.$fReadCase152
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase152 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ABS3) -}
74312c60fef130aac1d9c76bfb023f0b
  $fReadCase153 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ABS3"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase154 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase156,
                  InflectionData.$fReadCase155
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase155 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ABS2) -}
949f5e7a5d07ca2d69276589346355cd
  $fReadCase156 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ABS2"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase157 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase159,
                  InflectionData.$fReadCase158
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase158 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NOM2) -}
575fd3148f6a99d379f17285e0fd1629
  $fReadCase159 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NOM2"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase16 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase157
                   InflectionData.$fReadCase17) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase160 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase162,
                  InflectionData.$fReadCase161
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase161 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ERG2) -}
136e86507302caa7359822ee08777136
  $fReadCase162 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ERG2"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase163 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase165,
                  InflectionData.$fReadCase164
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase164 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PRIM) -}
72deb382dc06c028d6bf0a9e704f58d9
  $fReadCase165 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PRIM"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase166 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase168,
                  InflectionData.$fReadCase167
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase167 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DIR) -}
f5c0b5780e63fb911a77ef6a483ea5f8
  $fReadCase168 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DIR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase169 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase171,
                  InflectionData.$fReadCase170
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase17 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase154
                   InflectionData.$fReadCase18) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase170 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.MTR) -}
39f28bde7e721838bb70aedf69583393
  $fReadCase171 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MTR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase172 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase174,
                  InflectionData.$fReadCase173
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase173 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ABS) -}
08596c8bcc1315067e5e1dc9e5a7caf5
  $fReadCase174 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ABS"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase175 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase177,
                  InflectionData.$fReadCase176
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase176 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NOM) -}
8884301fb054d128ddb72a4102d3dc4d
  $fReadCase177 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NOM"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase178 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase180,
                  InflectionData.$fReadCase179
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase179 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.SEC) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase18 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase151
                   InflectionData.$fReadCase19) -}
c028ceb8747f9a87e54226b26321ce9a
  $fReadCase180 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SEC"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase181 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase183,
                  InflectionData.$fReadCase182
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase182 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INDIR) -}
abeda9254d5a682c52ad1c5807eb79e3
  $fReadCase183 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INDIR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase184 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase186,
                  InflectionData.$fReadCase185
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase185 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PEG) -}
64f2618cafda1c32e0a979f1520ed46c
  $fReadCase186 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PEG"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase187 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase189,
                  InflectionData.$fReadCase188
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase188 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ERG) -}
dfa990567c8daf97ea03ebf64e9e0f1e
  $fReadCase189 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ERG"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase19 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase148
                   InflectionData.$fReadCase20) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase190 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase192,
                  InflectionData.$fReadCase191
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase191 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ACC) -}
852cf5260126f4e14c3df3a640394176
  $fReadCase192 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ACC"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase193 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase195,
                  InflectionData.$fReadCase194
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase194 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INTR) -}
f42cc4f7ca187a4917c51af81870ab7c
  $fReadCase195 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INTR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase196 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Case]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Case]
                   InflectionData.$fReadCase197) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase197 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Case]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Case
                   InflectionData.$fReadCase2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Case>_R))
                   @ [InflectionData.Case]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Case])) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Case
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Case
                   InflectionData.$fReadCase3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Case>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Case>_R)))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase20 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase145
                   InflectionData.$fReadCase21) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase21 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase142
                   InflectionData.$fReadCase22) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase22 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase139
                   InflectionData.$fReadCase23) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase23 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase136
                   InflectionData.$fReadCase24) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase24 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase133
                   InflectionData.$fReadCase25) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase25 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase130
                   InflectionData.$fReadCase26) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase26 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase127
                   InflectionData.$fReadCase27) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase27 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase124
                   InflectionData.$fReadCase28) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase28 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase121
                   InflectionData.$fReadCase29) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase29 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase118
                   InflectionData.$fReadCase30) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Case
                   InflectionData.$fReadCase4
                   eta
                   @ b
                   eta1) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase30 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase115
                   InflectionData.$fReadCase31) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase31 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase112
                   InflectionData.$fReadCase32) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase32 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase109
                   InflectionData.$fReadCase33) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase33 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase106
                   InflectionData.$fReadCase34) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase34 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase103
                   InflectionData.$fReadCase35) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase35 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase100
                   InflectionData.$fReadCase36) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase36 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase97
                   InflectionData.$fReadCase37) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase37 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase94
                   InflectionData.$fReadCase38) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase38 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase91
                   InflectionData.$fReadCase39) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase39 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase88
                   InflectionData.$fReadCase40) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase193
                   InflectionData.$fReadCase5) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase40 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase85
                   InflectionData.$fReadCase41) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase41 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase82
                   InflectionData.$fReadCase42) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase42 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase79
                   InflectionData.$fReadCase43) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase43 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase76
                   InflectionData.$fReadCase44) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase44 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase73
                   InflectionData.$fReadCase45) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase45 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase70
                   InflectionData.$fReadCase46) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase46 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase67
                   InflectionData.$fReadCase47) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase47 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase64
                   InflectionData.$fReadCase48) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase48 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase61
                   InflectionData.$fReadCase49) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase49 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase58
                   InflectionData.$fReadCase50) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase190
                   InflectionData.$fReadCase6) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase50 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase55
                   InflectionData.$fReadCase51) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase51 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase52
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase52 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase54,
                  InflectionData.$fReadCase53
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase53 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.VOC) -}
6001c831614da0153ac01a3b813d9ca0
  $fReadCase54 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "VOC"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase55 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase57,
                  InflectionData.$fReadCase56
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase56 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PART) -}
7524e5bfb6eeb8a4c29fe4cc48932a32
  $fReadCase57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PART"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase58 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase60,
                  InflectionData.$fReadCase59
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase59 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.POSS) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase187
                   InflectionData.$fReadCase7) -}
7dd3e37e64965504e9c8d8e60c700e4d
  $fReadCase60 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POSS"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase61 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase63,
                  InflectionData.$fReadCase62
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase62 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.GEN) -}
5b92234074acc922558ff0cb93058fd4
  $fReadCase63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "GEN"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase64 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase66,
                  InflectionData.$fReadCase65
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase65 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DISTR) -}
24b4e36e2c1863d064bdb61ec66ed9cd
  $fReadCase66 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DISTR"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase67 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase69,
                  InflectionData.$fReadCase68
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase68 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.CAUS) -}
2455740bd93fa6086b4856bac19ed83e
  $fReadCase69 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CAUS"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase184
                   InflectionData.$fReadCase8) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase70 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase72,
                  InflectionData.$fReadCase71
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase71 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.BEN) -}
dda2e0afa569bb4ac6c3ff5bcf93f7fb
  $fReadCase72 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BEN"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase73 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase75,
                  InflectionData.$fReadCase74
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase74 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ORN) -}
d079d5da079c1ef6afcf803181166aa7
  $fReadCase75 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ORN"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase76 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase78,
                  InflectionData.$fReadCase77
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase77 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INSCOMIT) -}
a762d1b7112f8d50a7407e9bca61fdd8
  $fReadCase78 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INSCOMIT"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase79 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase81,
                  InflectionData.$fReadCase80
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase181
                   InflectionData.$fReadCase9) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase80 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.COMIT) -}
55c0774c69bb6d8430ec5dba05528f99
  $fReadCase81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "COMIT"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase82 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase84,
                  InflectionData.$fReadCase83
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase83 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INS) -}
fa4512c81f18dbfe6f4efdd96e95386c
  $fReadCase84 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INS"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase85 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase87,
                  InflectionData.$fReadCase86
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase86 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DAT) -}
922ee1cf9aba8d3661d2c1cc7c170880
  $fReadCase87 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DAT"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase88 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase90,
                  InflectionData.$fReadCase89
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase89 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ABE) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase9 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
                   InflectionData.$fReadCase178
                   InflectionData.$fReadCase10) -}
c3548a57af84453f48ade72ebc1e0b61
  $fReadCase90 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ABE"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase91 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase93,
                  InflectionData.$fReadCase92
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase92 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IDEN) -}
79077214ecee764e0fc5b732517908d3
  $fReadCase93 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IDEN"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase94 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase96,
                  InflectionData.$fReadCase95
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase95 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.EQU) -}
73d397188b1d5a1521183c8b2e5c3207
  $fReadCase96 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EQU"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase97 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadCase99,
                  InflectionData.$fReadCase98
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Case>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Case>_R))))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase98 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Case -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Case -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.COMP) -}
41e5b3f3c45412524207d4d0c5e893fc
  $fReadCase99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "COMP"#) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Case]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadCase1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Case]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Case]>_R))) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Case
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadCase2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Case>_R)) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fReadCase_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Case
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Case
                   InflectionData.$fReadCase_$creadPrec
                   eta) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity :: GHC.Read.Read InflectionData.Clusivity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Clusivity
                  InflectionData.$fReadClusivity_$s$dmreadsPrec
                  InflectionData.$fReadClusivity12
                  InflectionData.$fReadClusivity_$creadPrec
                  InflectionData.$fReadClusivity_$creadListPrec -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Clusivity] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Clusivity]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Clusivity
                   InflectionData.$fReadClusivity2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Clusivity>_R))
                   @ b
                   eta1) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Clusivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Clusivity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INCL) -}
d686f29d607709fa2de4937441e198a3
  $fReadClusivity11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INCL"#) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity12 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Clusivity]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Clusivity]
                   InflectionData.$fReadClusivity13) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity13 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Clusivity]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Clusivity
                   InflectionData.$fReadClusivity2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Clusivity>_R))
                   @ [InflectionData.Clusivity]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Clusivity])) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Clusivity
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Clusivity
                   InflectionData.$fReadClusivity3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Clusivity>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Clusivity>_R)))) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Clusivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Clusivity
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Clusivity
                   InflectionData.$fReadClusivity4
                   eta
                   @ b
                   eta1) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)
                   InflectionData.$fReadClusivity9
                   InflectionData.$fReadClusivity5) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)
                   InflectionData.$fReadClusivity6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Clusivity))) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadClusivity8,
                  InflectionData.$fReadClusivity7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Clusivity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Clusivity>_R))))) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Clusivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Clusivity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.EXCL) -}
fd197ccb5ed1618096097eedfb81a0fc
  $fReadClusivity8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EXCL"#) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadClusivity11,
                  InflectionData.$fReadClusivity10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Clusivity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Clusivity>_R))))) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Clusivity]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadClusivity1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Clusivity]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Clusivity]>_R))) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Clusivity
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadClusivity2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Clusivity>_R)) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fReadClusivity_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Clusivity
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Clusivity
                   InflectionData.$fReadClusivity_$creadPrec
                   eta) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness :: GHC.Read.Read InflectionData.Definiteness
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Definiteness
                  InflectionData.$fReadDefiniteness_$s$dmreadsPrec
                  InflectionData.$fReadDefiniteness12
                  InflectionData.$fReadDefiniteness_$creadPrec
                  InflectionData.$fReadDefiniteness_$creadListPrec -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Definiteness] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Definiteness]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Definiteness
                   InflectionData.$fReadDefiniteness2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Definiteness>_R))
                   @ b
                   eta1) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Definiteness -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Definiteness
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DEF) -}
38f80c6a85c1ebe812ec82679faf1038
  $fReadDefiniteness11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DEF"#) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness12 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Definiteness]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Definiteness]
                   InflectionData.$fReadDefiniteness13) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness13 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Definiteness]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Definiteness
                   InflectionData.$fReadDefiniteness2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Definiteness>_R))
                   @ [InflectionData.Definiteness]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Definiteness])) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Definiteness
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Definiteness
                   InflectionData.$fReadDefiniteness3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Definiteness>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Definiteness>_R)))) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Definiteness -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Definiteness
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Definiteness
                   InflectionData.$fReadDefiniteness4
                   eta
                   @ b
                   eta1) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Definiteness)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Definiteness)
                   InflectionData.$fReadDefiniteness9
                   InflectionData.$fReadDefiniteness5) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Definiteness)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Definiteness)
                   InflectionData.$fReadDefiniteness6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Definiteness))) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Definiteness)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadDefiniteness8,
                  InflectionData.$fReadDefiniteness7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Definiteness>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Definiteness>_R))))) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Definiteness -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Definiteness
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INDF) -}
7e02c9073c9e82fce0459e276098f150
  $fReadDefiniteness8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INDF"#) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Definiteness)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadDefiniteness11,
                  InflectionData.$fReadDefiniteness10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Definiteness>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Definiteness>_R))))) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.Definiteness]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadDefiniteness1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Definiteness]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Definiteness]>_R))) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.Definiteness
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadDefiniteness2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Definiteness>_R)) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fReadDefiniteness_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Definiteness
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Definiteness
                   InflectionData.$fReadDefiniteness_$creadPrec
                   eta) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality :: GHC.Read.Read InflectionData.Evidentiality
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Evidentiality
                  InflectionData.$fReadEvidentiality_$s$dmreadsPrec
                  InflectionData.$fReadEvidentiality40
                  InflectionData.$fReadEvidentiality_$creadPrec
                  InflectionData.$fReadEvidentiality_$creadListPrec -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Evidentiality]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Evidentiality]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Evidentiality
                   InflectionData.$fReadEvidentiality2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Evidentiality>_R))
                   @ b
                   eta1) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality10 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality19
                   InflectionData.$fReadEvidentiality11) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality11 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality16
                   InflectionData.$fReadEvidentiality12) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality12 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality13
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Evidentiality))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality13 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality15,
                  InflectionData.$fReadEvidentiality14
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality14 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ASS) -}
a9539a9f6786fbc8342a9021d7ddf953
  $fReadEvidentiality15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ASS"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality16 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality18,
                  InflectionData.$fReadEvidentiality17
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality17 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.QUO) -}
9a7521f66d0f1835cc47c2a8a00e3150
  $fReadEvidentiality18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "QUO"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality19 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality21,
                  InflectionData.$fReadEvidentiality20
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Evidentiality
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Evidentiality
                   InflectionData.$fReadEvidentiality3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Evidentiality>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Evidentiality>_R)))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality20 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.HSY) -}
5249d7d3485296e6d81bad2b93328e4b
  $fReadEvidentiality21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "HSY"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality22 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality24,
                  InflectionData.$fReadEvidentiality23
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality23 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.REP) -}
02788ec165c27355d04121aeeec9db6e
  $fReadEvidentiality24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "REP"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality25 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality27,
                  InflectionData.$fReadEvidentiality26
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality26 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.INFER) -}
1b85c49cc356b0afa25f85b84e60cd0e
  $fReadEvidentiality27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "INFER"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality28 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality30,
                  InflectionData.$fReadEvidentiality29
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality29 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.AUD) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Evidentiality
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Evidentiality
                   InflectionData.$fReadEvidentiality4
                   eta
                   @ b
                   eta1) -}
dcc6613f8ca3ecf7a0193d4d07401a12
  $fReadEvidentiality30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AUD"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality31 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality33,
                  InflectionData.$fReadEvidentiality32
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality32 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NVIS) -}
2a0d2b0c24a44d423bd299bb0821afed
  $fReadEvidentiality33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NVIS"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality34 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality36,
                  InflectionData.$fReadEvidentiality35
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality35 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.VIS) -}
d3326ce8dc00ad9c88953d293e4aef8c
  $fReadEvidentiality36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "VIS"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality37 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Evidentiality)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadEvidentiality39,
                  InflectionData.$fReadEvidentiality38
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Evidentiality>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Evidentiality>_R))))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality38 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Evidentiality -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Evidentiality
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.EXP) -}
110430f69a4e70e11f7c6c0a731c724e
  $fReadEvidentiality39 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EXP"#) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality37
                   InflectionData.$fReadEvidentiality5) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality40 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Evidentiality]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Evidentiality]
                   InflectionData.$fReadEvidentiality41) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality41 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Evidentiality]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Evidentiality
                   InflectionData.$fReadEvidentiality2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Evidentiality>_R))
                   @ [InflectionData.Evidentiality]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Evidentiality])) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality34
                   InflectionData.$fReadEvidentiality6) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality31
                   InflectionData.$fReadEvidentiality7) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality28
                   InflectionData.$fReadEvidentiality8) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality8 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality25
                   InflectionData.$fReadEvidentiality9) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality9 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Evidentiality)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Evidentiality)
                   InflectionData.$fReadEvidentiality22
                   InflectionData.$fReadEvidentiality10) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.Evidentiality]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadEvidentiality1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Evidentiality]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Evidentiality]>_R))) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.Evidentiality
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadEvidentiality2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Evidentiality>_R)) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fReadEvidentiality_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Evidentiality
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Evidentiality
                   InflectionData.$fReadEvidentiality_$creadPrec
                   eta) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender :: GHC.Read.Read InflectionData.Gender
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Gender
                  InflectionData.$fReadGender_$s$dmreadsPrec
                  InflectionData.$fReadGender20
                  InflectionData.$fReadGender_$creadPrec
                  InflectionData.$fReadGender_$creadListPrec -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Gender] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Gender]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Gender
                   InflectionData.$fReadGender2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Gender>_R))
                   @ b
                   eta1) -}
9be3dc4d4b7058633954da42a2cc0002
  $fReadGender10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "N"#) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender11 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadGender13,
                  InflectionData.$fReadGender12
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Gender>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Gender>_R))))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender12 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Gender -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Gender -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.COM) -}
b76a2e3e020d1853acbbd1b5a8b0d585
  $fReadGender13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "COM"#) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender14 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadGender16,
                  InflectionData.$fReadGender15
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Gender>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Gender>_R))))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender15 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Gender -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Gender -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.F) -}
d1b3c7a072e9372bf5754c430f4c8ca1
  $fReadGender16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "F"#) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender17 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadGender19,
                  InflectionData.$fReadGender18
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Gender>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Gender>_R))))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender18 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Gender -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Gender -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.M) -}
a898d16afb54168699409c589df77899
  $fReadGender19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "M"#) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Gender
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Gender
                   InflectionData.$fReadGender3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Gender>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Gender>_R)))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender20 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Gender]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Gender]
                   InflectionData.$fReadGender21) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender21 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Gender]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Gender
                   InflectionData.$fReadGender2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Gender>_R))
                   @ [InflectionData.Gender]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Gender])) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Gender -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Gender
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Gender
                   InflectionData.$fReadGender4
                   eta
                   @ b
                   eta1) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
                   InflectionData.$fReadGender17
                   InflectionData.$fReadGender5) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
                   InflectionData.$fReadGender14
                   InflectionData.$fReadGender6) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
                   InflectionData.$fReadGender11
                   InflectionData.$fReadGender7) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
                   InflectionData.$fReadGender8
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Gender))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadGender10,
                  InflectionData.$fReadGender9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Gender>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Gender>_R))))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Gender -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Gender -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.N) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Gender]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadGender1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Gender]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Gender]>_R))) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Gender
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadGender2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Gender>_R)) -}
bea847055a51c2d8a5a4f43d44b03253
  $fReadGender_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Gender
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Gender
                   InflectionData.$fReadGender_$creadPrec
                   eta) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific :: GHC.Read.Read InflectionData.Honorific
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Honorific
                  InflectionData.$fReadHonorific_$s$dmreadsPrec
                  InflectionData.$fReadHonorific12
                  InflectionData.$fReadHonorific_$creadPrec
                  InflectionData.$fReadHonorific_$creadListPrec -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Honorific] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Honorific]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Honorific
                   InflectionData.$fReadHonorific2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Honorific>_R))
                   @ b
                   eta1) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Honorific -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Honorific
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.FAM) -}
07c18b31769c143efcbcec15063e87c5
  $fReadHonorific11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FAM"#) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific12 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Honorific]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Honorific]
                   InflectionData.$fReadHonorific13) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific13 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Honorific]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Honorific
                   InflectionData.$fReadHonorific2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Honorific>_R))
                   @ [InflectionData.Honorific]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Honorific])) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Honorific
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Honorific
                   InflectionData.$fReadHonorific3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Honorific>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Honorific>_R)))) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Honorific -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Honorific
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Honorific
                   InflectionData.$fReadHonorific4
                   eta
                   @ b
                   eta1) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)
                   InflectionData.$fReadHonorific9
                   InflectionData.$fReadHonorific5) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)
                   InflectionData.$fReadHonorific6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Honorific))) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadHonorific8,
                  InflectionData.$fReadHonorific7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Honorific>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Honorific>_R))))) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Honorific -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Honorific
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.FORM) -}
c8d861ff009f5391728cedf4941a2108
  $fReadHonorific8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FORM"#) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadHonorific11,
                  InflectionData.$fReadHonorific10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Honorific>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Honorific>_R))))) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Honorific]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadHonorific1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Honorific]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Honorific]>_R))) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Honorific
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadHonorific2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Honorific>_R)) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fReadHonorific_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Honorific
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Honorific
                   InflectionData.$fReadHonorific_$creadPrec
                   eta) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem ::
    GHC.Read.Read InflectionData.InflectionSystem
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.InflectionSystem
                  InflectionData.$fReadInflectionSystem_$creadsPrec
                  InflectionData.$fReadInflectionSystem_$sreadListDefault
                  InflectionData.$fReadInflectionSystem_$creadPrec
                  InflectionData.$fReadInflectionSystem_$creadListPrec -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.InflectionSystem]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.InflectionSystem]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.InflectionSystem
                   InflectionData.$fReadInflectionSystem2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.InflectionSystem>_R))
                   @ b
                   eta1) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         InflectionData.InflectionSystem
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.InflectionSystem
                   InflectionData.$fReadInflectionSystem3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.InflectionSystem>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.InflectionSystem>_R)))) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.InflectionSystem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <S,1*U(U)><L,C(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   w1 :: InflectionData.InflectionSystem
                         -> Text.ParserCombinators.ReadP.P b ->
                 case w of ww { GHC.Types.I# ww1 ->
                 InflectionData.$wa2 ww1 @ b w1 }) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.InflectionSystem]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadInflectionSystem1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.InflectionSystem]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.InflectionSystem]>_R))) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.InflectionSystem
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadInflectionSystem2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.InflectionSystem>_R)) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         InflectionData.InflectionSystem
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadP.run
                   @ InflectionData.InflectionSystem
                   ((GHC.Read.$fReadDouble10
                       @ InflectionData.InflectionSystem
                       InflectionData.$fReadInflectionSystem3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                           <InflectionData.InflectionSystem>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                      <InflectionData.InflectionSystem>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <InflectionData.InflectionSystem>_R)
                      @ InflectionData.InflectionSystem
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ InflectionData.InflectionSystem))) -}
1e3fe4826a39142c5de940012234f2c4
  $fReadInflectionSystem_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS
      [InflectionData.InflectionSystem]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.InflectionSystem]
                   ((InflectionData.$fReadInflectionSystem_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[InflectionData.InflectionSystem]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[InflectionData.InflectionSystem]>_R)
                      @ [InflectionData.InflectionSystem]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [InflectionData.InflectionSystem]))) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest ::
    GHC.Read.Read a => GHC.Read.Read (InflectionData.Manifest a)
  DFunId[0]
  {- Arity: 1, Strictness: <L,U(A,A,U,A)>m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a38 $dRead :: GHC.Read.Read a38.
                  @ (InflectionData.Manifest a38)
                  (InflectionData.$fReadManifest_$creadsPrec @ a38 $dRead)
                  (InflectionData.$fReadManifest_$creadList @ a38 $dRead)
                  (InflectionData.$fReadManifest_$creadPrec @ a38 $dRead)
                  (InflectionData.$fReadManifest_$creadListPrec @ a38 $dRead) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest1 ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Manifest a] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 3, Strictness: <L,U(A,A,U,A)><L,A><L,C(U)>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a38
                   $dRead :: GHC.Read.Read a38
                   eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Manifest a38]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ (InflectionData.Manifest a38)
                   (InflectionData.$fReadManifest2 @ a38 $dRead)
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Manifest a38>_R))
                   @ b
                   eta1) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest100 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest102,
                  InflectionData.$fReadManifest101
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Person>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Person>_R))))) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest101 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Person -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.SECOND) -}
0928ba39dc7c211af3405bac6b43d40c
  $fReadManifest102 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SECOND"#) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest103 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest105,
                  InflectionData.$fReadManifest104
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Person>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Person>_R))))) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest104 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Person -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.FIRST) -}
24d07b8749809dcadf4f5f6043af14a2
  $fReadManifest105 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FIRST"#) -}
e7d2f14c7a1f28484231a1b0bf56b5fa
  $fReadManifest107 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Polarity]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Polarity]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Polarity])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Polarity
                                      InflectionData.$fReadManifest108
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Polarity>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Polarity] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Polarity]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest108 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Polarity
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Polarity
                   InflectionData.$fReadManifest109
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Polarity>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Polarity>_R)))) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest109 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Polarity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Polarity
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Polarity
                   InflectionData.$fReadManifest110
                   eta
                   @ b
                   eta1) -}
532bf10d42cdd8d981eddd1f8a3c8fac
  $fReadManifest11 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Case]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Case]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Case])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Case
                                      InflectionData.$fReadCase2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Case>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Case] ->
                                       eta
                                         (InflectionData.Manifest @ [InflectionData.Case] a38 a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest110 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)
                   InflectionData.$fReadManifest115
                   InflectionData.$fReadManifest111) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest111 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)
                   InflectionData.$fReadManifest112
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Polarity))) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest112 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest114,
                  InflectionData.$fReadManifest113
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Polarity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Polarity>_R))))) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest113 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Polarity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Polarity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NEG) -}
17589ad5dcc82cff9fd69129fbf2f17b
  $fReadManifest114 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NEG"#) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest115 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest117,
                  InflectionData.$fReadManifest116
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Polarity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Polarity>_R))))) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadManifest116 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Polarity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Polarity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.AFF) -}
96c188adec10e172bc40ed044bca02f2
  $fReadManifest117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AFF"#) -}
aea11e4c2daf566b7845298106fbff61
  $fReadManifest119 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Specificity]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Specificity]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Specificity])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Specificity
                                      InflectionData.$fReadManifest120
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Specificity>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Specificity] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Specificity]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest120 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Specificity
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Specificity
                   InflectionData.$fReadManifest121
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Specificity>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Specificity>_R)))) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest121 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Specificity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Specificity
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Specificity
                   InflectionData.$fReadManifest122
                   eta
                   @ b
                   eta1) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest122 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Specificity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Specificity)
                   InflectionData.$fReadManifest127
                   InflectionData.$fReadManifest123) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest123 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Specificity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Specificity)
                   InflectionData.$fReadManifest124
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Specificity))) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest124 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Specificity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest126,
                  InflectionData.$fReadManifest125
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Specificity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Specificity>_R))))) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest125 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Specificity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Specificity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NSPEC) -}
f3c8954a86d2837b4eadbf3f5a73d73f
  $fReadManifest126 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NSPEC"#) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest127 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Specificity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest129,
                  InflectionData.$fReadManifest128
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Specificity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Specificity>_R))))) -}
43df515dcdadd0ea11740b17c269f784
  $fReadManifest128 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Specificity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Specificity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.SPEC) -}
dac78c512dcf94139d6d74673cb20883
  $fReadManifest129 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SPEC"#) -}
62a89fe68e7627e7626a3552ba359297
  $fReadManifest13 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Clusivity]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Clusivity]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Clusivity])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Clusivity
                                      InflectionData.$fReadClusivity2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Clusivity>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Clusivity] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Clusivity]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
e6c232edfd4f5e44e1955ab187e6e47a
  $fReadManifest131 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Tense]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Tense]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Tense])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Tense
                                      InflectionData.$fReadManifest132
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Tense>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Tense] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Tense]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest132 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Tense
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Tense
                   InflectionData.$fReadManifest133
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Tense>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Tense>_R)))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest133 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Tense
                   InflectionData.$fReadManifest134
                   eta
                   @ b
                   eta1) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest134 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest167
                   InflectionData.$fReadManifest135) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest135 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest164
                   InflectionData.$fReadManifest136) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest136 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest161
                   InflectionData.$fReadManifest137) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest137 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest158
                   InflectionData.$fReadManifest138) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest138 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest155
                   InflectionData.$fReadManifest139) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest139 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest152
                   InflectionData.$fReadManifest140) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest140 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest149
                   InflectionData.$fReadManifest141) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest141 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest146
                   InflectionData.$fReadManifest142) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest142 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
                   InflectionData.$fReadManifest143
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest143 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest145,
                  InflectionData.$fReadManifest144
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest144 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.REMF) -}
3ac0fc36c0a102bcefaa64cfde728613
  $fReadManifest145 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "REMF"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest146 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest148,
                  InflectionData.$fReadManifest147
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest147 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IMMF) -}
34e08e3c838b901ff6834d9aedf698d3
  $fReadManifest148 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IMMF"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest149 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest151,
                  InflectionData.$fReadManifest150
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
88b2420df04cd810bbcf9d67326a133a
  $fReadManifest15 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Definiteness]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Definiteness]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Definiteness])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Definiteness
                                      InflectionData.$fReadDefiniteness2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Definiteness>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Definiteness] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Definiteness]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest150 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.FUT) -}
63fa5b1ad7904ee7a8a8fcead5408e44
  $fReadManifest151 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "FUT"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest152 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest154,
                  InflectionData.$fReadManifest153
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest153 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NFUT) -}
027c3b2b8617fc10dc4896c98c0bd17a
  $fReadManifest154 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NFUT"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest155 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest157,
                  InflectionData.$fReadManifest156
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest156 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PRS) -}
7581a7f7f544600d694b2d0260602540
  $fReadManifest157 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PRS"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest158 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest160,
                  InflectionData.$fReadManifest159
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest159 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NPST) -}
184622292e40fc9bbbdf54137c07ec54
  $fReadManifest160 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NPST"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest161 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest163,
                  InflectionData.$fReadManifest162
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest162 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.REC) -}
e72099dc0ac998cc7f14474e46bed4b7
  $fReadManifest163 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "REC"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest164 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest166,
                  InflectionData.$fReadManifest165
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest165 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.REM) -}
571574878ad8c7bca9979bfe2d57b406
  $fReadManifest166 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "REM"#) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest167 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest169,
                  InflectionData.$fReadManifest168
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Tense>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Tense>_R))))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadManifest168 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Tense -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Tense -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PST) -}
4ef0af8194cf468f9db471c90738928c
  $fReadManifest169 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PST"#) -}
6b1c0c79f1638687bd76b262349ec114
  $fReadManifest17 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Evidentiality]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Evidentiality]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Evidentiality])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Evidentiality
                                      InflectionData.$fReadEvidentiality2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Evidentiality>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Evidentiality] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Evidentiality]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
5634d57a548d16497d75fd5041d119ab
  $fReadManifest171 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Topic]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Topic]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Topic])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Topic
                                      InflectionData.$fReadManifest172
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Topic>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Topic] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Topic]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest172 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Topic
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Topic
                   InflectionData.$fReadManifest173
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Topic>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Topic>_R)))) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest173 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Topic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Topic -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Topic
                   InflectionData.$fReadManifest174
                   eta
                   @ b
                   eta1) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest174 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)
                   InflectionData.$fReadManifest179
                   InflectionData.$fReadManifest175) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest175 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)
                   InflectionData.$fReadManifest176
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic))) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest176 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest178,
                  InflectionData.$fReadManifest177
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Topic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Topic>_R))))) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest177 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Topic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Topic -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NTOP) -}
1bd7e3e2c33de5fd51b8673e7db2c48d
  $fReadManifest178 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NTOP"#) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest179 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest181,
                  InflectionData.$fReadManifest180
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Topic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Topic>_R))))) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadManifest180 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Topic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Topic -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.TOP) -}
0d87bc02e06d284857695e5d889f86d5
  $fReadManifest181 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TOP"#) -}
8da130892bef2c7433876b729591d5a5
  $fReadManifest183 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Transitivity]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Transitivity]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Transitivity])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Transitivity
                                      InflectionData.$fReadManifest184
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Transitivity>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Transitivity] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Transitivity]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest184 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Transitivity
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Transitivity
                   InflectionData.$fReadManifest185
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Transitivity>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Transitivity>_R)))) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest185 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Transitivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Transitivity
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Transitivity
                   InflectionData.$fReadManifest186
                   eta
                   @ b
                   eta1) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest186 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Transitivity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Transitivity)
                   InflectionData.$fReadManifest195
                   InflectionData.$fReadManifest187) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest187 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Transitivity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Transitivity)
                   InflectionData.$fReadManifest192
                   InflectionData.$fReadManifest188) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest188 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.Transitivity)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.Transitivity)
                   InflectionData.$fReadManifest189
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Transitivity))) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest189 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Transitivity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest191,
                  InflectionData.$fReadManifest190
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Transitivity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Transitivity>_R))))) -}
d2d5052ee83be536c541b9aa119d5b46
  $fReadManifest19 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Gender]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Gender]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Gender])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Gender
                                      InflectionData.$fReadGender2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Gender>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Gender] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Gender]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest190 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Transitivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Transitivity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DITRANS) -}
6ad0df95532bf5be1a1b778b6133a4a3
  $fReadManifest191 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DITRANS"#) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest192 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Transitivity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest194,
                  InflectionData.$fReadManifest193
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Transitivity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Transitivity>_R))))) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest193 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Transitivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Transitivity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.TRANS) -}
f5b4ae74a77f3ba5a080be6843648668
  $fReadManifest194 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TRANS"#) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest195 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.Transitivity)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest197,
                  InflectionData.$fReadManifest196
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Transitivity>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Transitivity>_R))))) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadManifest196 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Transitivity -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Transitivity
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NTRANS) -}
7955214abc870eec304b1265aead0f6b
  $fReadManifest197 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NTRANS"#) -}
bb836517fd54b885cf1cf5ef25895c46
  $fReadManifest199 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Voice]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Voice]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Voice])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Voice
                                      InflectionData.$fReadManifest200
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Voice>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Voice] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Voice]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest2 ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP (InflectionData.Manifest a)
  {- Arity: 2, Strictness: <L,1*U(A,A,1*U,A)><L,U>,
     Unfolding: (\ @ a38
                   $dRead :: GHC.Read.Read a38
                   eta :: Text.ParserCombinators.ReadPrec.Prec ->
                 let {
                   ds :: Text.ParserCombinators.ReadPrec.ReadPrec a38
                   = GHC.Read.readPrec @ a38 $dRead
                 } in
                 GHC.Read.$fReadDouble10
                   @ (InflectionData.Manifest a38)
                   (\ n :: Text.ParserCombinators.ReadPrec.Prec
                      @ b
                      eta1 :: InflectionData.Manifest a38
                              -> Text.ParserCombinators.ReadP.P b ->
                    let {
                      lvl118 :: Text.ParserCombinators.ReadP.P b
                      = let {
                          lvl119 :: Text.ParserCombinators.ReadP.P b
                          = eta1 (InflectionData.NoManifest @ a38)
                        } in
                        Text.Read.Lex.expect2
                          @ b
                          (\ a98 :: Text.Read.Lex.Lexeme ->
                           case a98 of wild {
                             DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                             Text.Read.Lex.Ident a39
                             -> case GHC.Base.eqString
                                       a39
                                       InflectionData.$fReadManifest5 of wild1 {
                                  GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                  GHC.Types.True -> lvl119 } })
                    } in
                    let {
                      k :: () -> Text.ParserCombinators.ReadP.P b
                        {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                           Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                      = \ w2 :: () -> lvl118
                    } in
                    Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                      @ b
                      (Text.ParserCombinators.ReadP.Look
                         @ b
                         (\ a98 :: GHC.Base.String ->
                          (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                            `cast`
                          (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                            @ b
                            k))
                      (case n of wild { GHC.Types.I# x ->
                       case GHC.Prim.tagToEnum#
                              @ GHC.Types.Bool
                              (GHC.Prim.<=# x 10) of wild2 {
                         GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                         GHC.Types.True
                         -> let {
                              lvl119 :: Text.ParserCombinators.ReadP.P b
                              = let {
                                  lvl120 :: Text.ParserCombinators.ReadP.P b
                                  = GHC.Read.$wa
                                      @ (GrammarData.LexCat,
                                         InflectionData.ManifestType,
                                         GHC.Types.Int)
                                      InflectionData.$fReadManifest4
                                        `cast`
                                      (Trans
                                           (<Text.ParserCombinators.ReadPrec.Prec>_R
                                            ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                          <(GrammarData.LexCat,
                                                            InflectionData.ManifestType,
                                                            GHC.Types.Int)>_R))
                                           (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                     <(GrammarData.LexCat,
                                                       InflectionData.ManifestType,
                                                       GHC.Types.Int)>_R)))
                                      @ b
                                      (\ a39 :: [(GrammarData.LexCat,
                                                  InflectionData.ManifestType,
                                                  GHC.Types.Int)] ->
                                       (ds
                                          `cast`
                                        (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0] <a38>_R)
                                          InflectionData.$fReadAgreement5)
                                         `cast`
                                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <a38>_R)
                                         @ b
                                         (\ a40 :: a38 ->
                                          eta1 (InflectionData.Manifest @ a38 a39 a40)))
                                } in
                                Text.Read.Lex.expect2
                                  @ b
                                  (\ a98 :: Text.Read.Lex.Lexeme ->
                                   case a98 of wild1 {
                                     DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                     Text.Read.Lex.Ident a39
                                     -> case GHC.Base.eqString
                                               a39
                                               InflectionData.$fReadManifest3 of wild3 {
                                          GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                          GHC.Types.True -> lvl120 } })
                            } in
                            let {
                              k1 :: () -> Text.ParserCombinators.ReadP.P b
                                {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                   Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                              = \ w2 :: () -> lvl119
                            } in
                            Text.ParserCombinators.ReadP.Look
                              @ b
                              (\ a98 :: GHC.Base.String ->
                               (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                                 `cast`
                               (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                                 @ b
                                 k1) } }))
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Manifest a38>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Manifest a38>_R)))
                   eta) -}
523b90b12350f06385d4da5905742868
  $fReadManifest200 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Voice
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Voice
                   InflectionData.$fReadManifest201
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Voice>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Voice>_R)))) -}
523b90b12350f06385d4da5905742868
  $fReadManifest201 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Voice -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Voice -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Voice
                   InflectionData.$fReadManifest202
                   eta
                   @ b
                   eta1) -}
523b90b12350f06385d4da5905742868
  $fReadManifest202 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
                   InflectionData.$fReadManifest211
                   InflectionData.$fReadManifest203) -}
523b90b12350f06385d4da5905742868
  $fReadManifest203 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
                   InflectionData.$fReadManifest208
                   InflectionData.$fReadManifest204) -}
523b90b12350f06385d4da5905742868
  $fReadManifest204 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
                   InflectionData.$fReadManifest205
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice))) -}
523b90b12350f06385d4da5905742868
  $fReadManifest205 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest207,
                  InflectionData.$fReadManifest206
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Voice>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Voice>_R))))) -}
523b90b12350f06385d4da5905742868
  $fReadManifest206 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Voice -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Voice -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PASSIVE) -}
ccc6f91c8b30ea19538e890ee1fd52ff
  $fReadManifest207 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PASSIVE"#) -}
523b90b12350f06385d4da5905742868
  $fReadManifest208 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest210,
                  InflectionData.$fReadManifest209
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Voice>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Voice>_R))))) -}
523b90b12350f06385d4da5905742868
  $fReadManifest209 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Voice -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Voice -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.MIDDLE) -}
a8cd455e7de276c51a227519373b7998
  $fReadManifest21 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Honorific]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Honorific]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Honorific])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Honorific
                                      InflectionData.$fReadHonorific2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Honorific>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Honorific] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Honorific]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
6e0cbf5ca9e3c836d166963a86ada1e3
  $fReadManifest210 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "MIDDLE"#) -}
523b90b12350f06385d4da5905742868
  $fReadManifest211 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest213,
                  InflectionData.$fReadManifest212
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Voice>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Voice>_R))))) -}
523b90b12350f06385d4da5905742868
  $fReadManifest212 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Voice -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Voice -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.ACTIVE) -}
4b803d6a5cea17fb0539374335756417
  $fReadManifest213 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ACTIVE"#) -}
65aa57d6e60bb85560acbad03396e0f9
  $fReadManifest215 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Volition]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Volition]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Volition])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Volition
                                      InflectionData.$fReadManifest216
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Volition>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Volition] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Volition]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest216 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Volition
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Volition
                   InflectionData.$fReadManifest217
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Volition>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Volition>_R)))) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest217 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Volition -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Volition
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Volition
                   InflectionData.$fReadManifest218
                   eta
                   @ b
                   eta1) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest218 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)
                   InflectionData.$fReadManifest223
                   InflectionData.$fReadManifest219) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest219 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)
                   InflectionData.$fReadManifest220
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Volition))) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest220 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest222,
                  InflectionData.$fReadManifest221
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Volition>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Volition>_R))))) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest221 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Volition -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Volition
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.NVOL) -}
a147f57d31d19a7b927a6519c87735f0
  $fReadManifest222 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NVOL"#) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest223 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest225,
                  InflectionData.$fReadManifest224
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Volition>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Volition>_R))))) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadManifest224 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Volition -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Volition
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.VOL) -}
a4f5fa5f3a55d6690ea85ff8fbc7998f
  $fReadManifest225 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "VOL"#) -}
e2b1df00b55d39693c6dbd5f2bd8d010
  $fReadManifest23 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Mood]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Mood]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Mood])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Mood
                                      InflectionData.$fReadManifest24
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Mood>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Mood] ->
                                       eta
                                         (InflectionData.Manifest @ [InflectionData.Mood] a38 a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest24 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Mood
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Mood
                   InflectionData.$fReadManifest25
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Mood>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Mood>_R)))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest25 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Mood
                   InflectionData.$fReadManifest26
                   eta
                   @ b
                   eta1) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest26 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest63
                   InflectionData.$fReadManifest27) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest27 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest60
                   InflectionData.$fReadManifest28) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest28 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest57
                   InflectionData.$fReadManifest29) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest29 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest54
                   InflectionData.$fReadManifest30) -}
8c6aebea9419dc7f0de35408a7efc4d3
  $fReadManifest3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Manifest"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest30 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest51
                   InflectionData.$fReadManifest31) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest31 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest48
                   InflectionData.$fReadManifest32) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest32 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest45
                   InflectionData.$fReadManifest33) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest33 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest42
                   InflectionData.$fReadManifest34) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest34 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest39
                   InflectionData.$fReadManifest35) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest35 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
                   InflectionData.$fReadManifest36
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest36 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest38,
                  InflectionData.$fReadManifest37
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest37 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.COND) -}
d0399dd072a7459b12f1142915a4c318
  $fReadManifest38 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "COND"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest39 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest41,
                  InflectionData.$fReadManifest40
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
8b2a362bfdba7ebf36f834fc33aef6e0
  $fReadManifest4 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b1.
       ((GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
        -> Text.ParserCombinators.ReadP.P b1)
       -> Text.ParserCombinators.ReadP.P b1
  {- Arity: 2,
     Unfolding: (\ w3 :: Text.ParserCombinators.ReadPrec.Prec
                   @ b1
                   w4 :: (GrammarData.LexCat,
                          InflectionData.ManifestType,
                          GHC.Types.Int)
                         -> Text.ParserCombinators.ReadP.P b1[OneShot] ->
                 GHC.Read.$wa4
                   @ GrammarData.LexCat
                   @ InflectionData.ManifestType
                   @ GHC.Types.Int
                   GrammarData.$fReadLexCat
                   InflectionData.$fReadManifestType
                   GHC.Read.$fReadInt
                   @ b1
                   w4) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest40 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.POT) -}
385fb113aa9c0503c43a801cbec22b60
  $fReadManifest41 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "POT"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest42 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest44,
                  InflectionData.$fReadManifest43
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest43 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.SBJV) -}
7b2920f91f9e0965c54d145e0bd75149
  $fReadManifest44 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SBJV"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest45 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest47,
                  InflectionData.$fReadManifest46
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest46 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.EPIS) -}
9437faab84480c06a6d7d652aad29815
  $fReadManifest47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "EPIS"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest48 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest50,
                  InflectionData.$fReadManifest49
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest49 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.OPT) -}
1811093cd4f5f7f187b9d7c9c84dbb92
  $fReadManifest5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoManifest"#) -}
e86f3a5b67a8575d2bf843cf2565c166
  $fReadManifest50 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OPT"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest51 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest53,
                  InflectionData.$fReadManifest52
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest52 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.JUS) -}
6400eb1c866146ec9b4681dca0e73bde
  $fReadManifest53 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "JUS"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest54 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest56,
                  InflectionData.$fReadManifest55
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest55 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IMP) -}
faa1b831e915aa7a09c344cf9c2b3dd3
  $fReadManifest56 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IMP"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest57 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest59,
                  InflectionData.$fReadManifest58
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest58 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DEO) -}
09464b762441e29f0bfe1b54f09d9177
  $fReadManifest59 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DEO"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest60 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest62,
                  InflectionData.$fReadManifest61
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest61 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IRR) -}
62bebad320bc8c61555f1aebe37dc803
  $fReadManifest62 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IRR"#) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest63 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest65,
                  InflectionData.$fReadManifest64
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Mood>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Mood>_R))))) -}
89f52f47d857baf59a835f155022c894
  $fReadManifest64 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Mood -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Mood -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.IND) -}
4c4ce1e01d76c70904a3cbaec4c9dda9
  $fReadManifest65 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "IND"#) -}
7a3a99f7749329af6518277b74cb4709
  $fReadManifest67 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Number]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Number]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Number])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Number
                                      InflectionData.$fReadManifest68
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Number>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Number] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Number]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest68 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Number
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Number
                   InflectionData.$fReadManifest69
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Number>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Number>_R)))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest69 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Number
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Number
                   InflectionData.$fReadManifest70
                   eta
                   @ b
                   eta1) -}
756ff63c03afdd088cd4f4581e2bbe0f
  $fReadManifest7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Animacy]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Animacy]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Animacy])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Animacy
                                      InflectionData.$fReadAnimacy2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Animacy>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Animacy] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Animacy]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest70 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
                   InflectionData.$fReadManifest87
                   InflectionData.$fReadManifest71) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest71 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
                   InflectionData.$fReadManifest84
                   InflectionData.$fReadManifest72) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest72 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
                   InflectionData.$fReadManifest81
                   InflectionData.$fReadManifest73) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest73 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
                   InflectionData.$fReadManifest78
                   InflectionData.$fReadManifest74) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest74 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
                   InflectionData.$fReadManifest75
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Number))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest75 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest77,
                  InflectionData.$fReadManifest76
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Number>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Number>_R))))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest76 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Number -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PL) -}
8d7f7589201353e5118ae71e34d39b72
  $fReadManifest77 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PL"#) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest78 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest80,
                  InflectionData.$fReadManifest79
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Number>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Number>_R))))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest79 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Number -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PA) -}
f948925c3137a0efc906e7e64e297975
  $fReadManifest80 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PA"#) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest81 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest83,
                  InflectionData.$fReadManifest82
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Number>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Number>_R))))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest82 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Number -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.TRI) -}
93afcb1f0643bfadb43bae95ac624f57
  $fReadManifest83 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "TRI"#) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest84 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest86,
                  InflectionData.$fReadManifest85
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Number>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Number>_R))))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest85 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Number -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.DU) -}
d953816cad27fc7de84df948a5eaf79f
  $fReadManifest86 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "DU"#) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest87 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest89,
                  InflectionData.$fReadManifest88
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Number>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Number>_R))))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadManifest88 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Number -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Number -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.SG) -}
8a15fc0ea7e5ebaaf0a7925b480bc720
  $fReadManifest89 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SG"#) -}
e4cc7b67d3dcd197f495cdbdbcb72381
  $fReadManifest9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Aspect]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Aspect]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Aspect])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Aspect
                                      InflectionData.$fReadAspect2
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Aspect>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Aspect] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Aspect]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
be73ca1df5041adb0cabddf5e14729ea
  $fReadManifest91 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Manifest [InflectionData.Person]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,1*U(U)><L,C(U)>,
     Unfolding: (\ n :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Manifest [InflectionData.Person]
                          -> Text.ParserCombinators.ReadP.P b ->
                 let {
                   lvl118 :: Text.ParserCombinators.ReadP.P b
                   = let {
                       lvl119 :: Text.ParserCombinators.ReadP.P b
                       = eta (InflectionData.NoManifest @ [InflectionData.Person])
                     } in
                     Text.Read.Lex.expect2
                       @ b
                       (\ a98 :: Text.Read.Lex.Lexeme ->
                        case a98 of wild {
                          DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                          Text.Read.Lex.Ident a38
                          -> case GHC.Base.eqString
                                    a38
                                    InflectionData.$fReadManifest5 of wild1 {
                               GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                               GHC.Types.True -> lvl119 } })
                 } in
                 let {
                   k :: () -> Text.ParserCombinators.ReadP.P b
                     {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                        Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                   = \ w2 :: () -> lvl118
                 } in
                 Text.ParserCombinators.ReadP.$fAlternativeP_$c<|>
                   @ b
                   (Text.ParserCombinators.ReadP.Look
                      @ b
                      (\ a98 :: GHC.Base.String ->
                       (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                         `cast`
                       (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                         @ b
                         k))
                   (case n of wild { GHC.Types.I# x ->
                    case GHC.Prim.tagToEnum#
                           @ GHC.Types.Bool
                           (GHC.Prim.<=# x 10) of wild2 {
                      GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                      GHC.Types.True
                      -> let {
                           lvl119 :: Text.ParserCombinators.ReadP.P b
                           = let {
                               lvl120 :: Text.ParserCombinators.ReadP.P b
                               = GHC.Read.$wa
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fReadManifest4
                                     `cast`
                                   (Trans
                                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                       <(GrammarData.LexCat,
                                                         InflectionData.ManifestType,
                                                         GHC.Types.Int)>_R))
                                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                  <(GrammarData.LexCat,
                                                    InflectionData.ManifestType,
                                                    GHC.Types.Int)>_R)))
                                   @ b
                                   (\ a38 :: [(GrammarData.LexCat,
                                               InflectionData.ManifestType,
                                               GHC.Types.Int)] ->
                                    GHC.Read.$wa
                                      @ InflectionData.Person
                                      InflectionData.$fReadManifest92
                                        `cast`
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <InflectionData.Person>_R))
                                      @ b
                                      (\ a39 :: [InflectionData.Person] ->
                                       eta
                                         (InflectionData.Manifest
                                            @ [InflectionData.Person]
                                            a38
                                            a39)))
                             } in
                             Text.Read.Lex.expect2
                               @ b
                               (\ a98 :: Text.Read.Lex.Lexeme ->
                                case a98 of wild1 {
                                  DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                                  Text.Read.Lex.Ident a38
                                  -> case GHC.Base.eqString
                                            a38
                                            InflectionData.$fReadManifest3 of wild3 {
                                       GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                       GHC.Types.True -> lvl120 } })
                         } in
                         let {
                           k1 :: () -> Text.ParserCombinators.ReadP.P b
                             {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                                Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl119) -}
                           = \ w2 :: () -> lvl119
                         } in
                         Text.ParserCombinators.ReadP.Look
                           @ b
                           (\ a98 :: GHC.Base.String ->
                            (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                              `cast`
                            (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                              @ b
                              k1) } })) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest92 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.Person
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.Person
                   InflectionData.$fReadManifest93
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.Person>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.Person>_R)))) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest93 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.Person
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.Person
                   InflectionData.$fReadManifest94
                   eta
                   @ b
                   eta1) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest94 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
                   InflectionData.$fReadManifest103
                   InflectionData.$fReadManifest95) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest95 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
                   InflectionData.$fReadManifest100
                   InflectionData.$fReadManifest96) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest96 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
                   InflectionData.$fReadManifest97
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.Person))) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest97 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifest99,
                  InflectionData.$fReadManifest98
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.Person>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.Person>_R))))) -}
87552d4bd640161dc918422e1f989f36
  $fReadManifest98 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.Person -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.Person -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.THIRD) -}
3aacc02976efb3d875426a63ec40ff1b
  $fReadManifest99 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "THIRD"#) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType :: GHC.Read.Read InflectionData.ManifestType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.ManifestType
                  InflectionData.$fReadManifestType_$s$dmreadsPrec
                  InflectionData.$fReadManifestType_$sreadListDefault
                  InflectionData.$fReadManifestType_$creadPrec
                  InflectionData.$fReadManifestType_$creadListPrec -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.ManifestType] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.ManifestType]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.ManifestType
                   InflectionData.$fReadManifestType2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.ManifestType>_R))
                   @ b
                   eta1) -}
9d7bdcd9c299fdc8325a2ae93fb62a61
  $fReadManifestType10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PostParticle"#) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType11 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.ManifestType)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifestType13,
                  InflectionData.$fReadManifestType12
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.ManifestType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.ManifestType>_R))))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType12 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.ManifestType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.ManifestType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.Suffix) -}
b131a7977171b952ae5f026d590d09cd
  $fReadManifestType13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Suffix"#) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType14 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.ManifestType)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifestType16,
                  InflectionData.$fReadManifestType15
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.ManifestType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.ManifestType>_R))))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType15 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.ManifestType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.ManifestType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.Prefix) -}
ab763f9f346f832e68180ccd2d3f87fd
  $fReadManifestType16 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Prefix"#) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType17 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.ManifestType)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifestType19,
                  InflectionData.$fReadManifestType18
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.ManifestType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.ManifestType>_R))))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType18 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.ManifestType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.ManifestType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PreParticle) -}
6a8a376cca051f0c7544eecf03a0e6dc
  $fReadManifestType19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PreParticle"#) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP InflectionData.ManifestType
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ InflectionData.ManifestType
                   InflectionData.$fReadManifestType3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                       <InflectionData.ManifestType>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                  <InflectionData.ManifestType>_R)))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.ManifestType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: InflectionData.ManifestType
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.choose2
                   @ InflectionData.ManifestType
                   InflectionData.$fReadManifestType4
                   eta
                   @ b
                   eta1) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.ManifestType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.ManifestType)
                   InflectionData.$fReadManifestType17
                   InflectionData.$fReadManifestType5) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.ManifestType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.ManifestType)
                   InflectionData.$fReadManifestType14
                   InflectionData.$fReadManifestType6) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType6 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.ManifestType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.ManifestType)
                   InflectionData.$fReadManifestType11
                   InflectionData.$fReadManifestType7) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType7 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        InflectionData.ManifestType)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        InflectionData.ManifestType)
                   InflectionData.$fReadManifestType8
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           InflectionData.ManifestType))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType8 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       InflectionData.ManifestType)
  {- Strictness: m,
     Unfolding: ((InflectionData.$fReadManifestType10,
                  InflectionData.$fReadManifestType9
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                      <InflectionData.ManifestType>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                 <InflectionData.ManifestType>_R))))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType9 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (InflectionData.ManifestType -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ ds :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta :: InflectionData.ManifestType
                          -> Text.ParserCombinators.ReadP.P b ->
                 eta InflectionData.PostParticle) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.ManifestType]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifestType1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.ManifestType]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.ManifestType]>_R))) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.ManifestType
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifestType2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.ManifestType>_R)) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.ManifestType
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.ManifestType
                   InflectionData.$fReadManifestType_$creadPrec
                   eta) -}
d4d7fe6a7722743af73d0848be830e04
  $fReadManifestType_$sreadListDefault ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.ManifestType]
  {- Arity: 1,
     Unfolding: InlineRule (0, True, False)
                (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.ManifestType]
                   ((InflectionData.$fReadManifestType_$creadListPrec
                       `cast`
                     (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <[InflectionData.ManifestType]>_R)
                       GHC.Read.$fRead(,)7)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <[InflectionData.ManifestType]>_R)
                      @ [InflectionData.ManifestType]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [InflectionData.ManifestType]))) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest_$creadList ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Manifest a]
  {- Arity: 1, Strictness: <L,U(A,A,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ @ a38 $dRead :: GHC.Read.Read a38 ->
                 Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Manifest a38]
                   (GHC.Read.$wa
                      @ (InflectionData.Manifest a38)
                      (InflectionData.$fReadManifest2 @ a38 $dRead)
                        `cast`
                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                <InflectionData.Manifest a38>_R))
                      @ [InflectionData.Manifest a38]
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ [InflectionData.Manifest a38]))) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest_$creadListPrec ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.Manifest a]
  {- Arity: 3, Strictness: <L,U(A,A,U,A)><L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest1
                  `cast`
                (forall a38.
                 <GHC.Read.Read a38>_R
                 ->_R Trans
                          (<Text.ParserCombinators.ReadPrec.Prec>_R
                           ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                         <[InflectionData.Manifest a38]>_R))
                          (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                    <[InflectionData.Manifest a38]>_R))) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest_$creadPrec ::
    GHC.Read.Read a =>
    Text.ParserCombinators.ReadPrec.ReadPrec
      (InflectionData.Manifest a)
  {- Arity: 2, Strictness: <L,1*U(A,A,1*U,A)><L,U>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest2
                  `cast`
                (forall a38.
                 <GHC.Read.Read a38>_R
                 ->_R Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <InflectionData.Manifest a38>_R)) -}
585905e8fe5aabe454e8c831c9719ba2
  $fReadManifest_$creadsPrec ::
    GHC.Read.Read a =>
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS (InflectionData.Manifest a)
  {- Arity: 2, Strictness: <L,1*U(A,A,1*U,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a38 $dRead :: GHC.Read.Read a38 eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadP.run
                   @ (InflectionData.Manifest a38)
                   ((InflectionData.$fReadManifest2 @ a38 $dRead eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                         <InflectionData.Manifest a38>_R)
                      @ (InflectionData.Manifest a38)
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                         @ (InflectionData.Manifest a38)))) -}
89f52f47d857baf59a835f155022c894
  $fReadMood :: GHC.Read.Read InflectionData.Mood
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Mood
                  InflectionData.$fReadMood_$s$dmreadsPrec
                  InflectionData.$fReadMood2
                  InflectionData.$fReadMood_$creadPrec
                  InflectionData.$fReadMood_$creadListPrec -}
89f52f47d857baf59a835f155022c894
  $fReadMood1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Mood] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Mood]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Mood
                   InflectionData.$fReadManifest24
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Mood>_R))
                   @ b
                   eta1) -}
89f52f47d857baf59a835f155022c894
  $fReadMood2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Mood]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Mood]
                   InflectionData.$fReadMood3) -}
89f52f47d857baf59a835f155022c894
  $fReadMood3 :: Text.ParserCombinators.ReadP.P [InflectionData.Mood]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Mood
                   InflectionData.$fReadManifest24
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Mood>_R))
                   @ [InflectionData.Mood]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Mood])) -}
89f52f47d857baf59a835f155022c894
  $fReadMood_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Mood]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadMood1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Mood]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Mood]>_R))) -}
89f52f47d857baf59a835f155022c894
  $fReadMood_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Mood
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest24
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Mood>_R)) -}
89f52f47d857baf59a835f155022c894
  $fReadMood_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Mood
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Mood
                   InflectionData.$fReadMood_$creadPrec
                   eta) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber :: GHC.Read.Read InflectionData.Number
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Number
                  InflectionData.$fReadNumber_$s$dmreadsPrec
                  InflectionData.$fReadNumber2
                  InflectionData.$fReadNumber_$creadPrec
                  InflectionData.$fReadNumber_$creadListPrec -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Number] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Number]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Number
                   InflectionData.$fReadManifest68
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Number>_R))
                   @ b
                   eta1) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Number]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Number]
                   InflectionData.$fReadNumber3) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Number]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Number
                   InflectionData.$fReadManifest68
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Number>_R))
                   @ [InflectionData.Number]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Number])) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Number]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadNumber1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Number]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Number]>_R))) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Number
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest68
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Number>_R)) -}
d524767ed256fd8fb6411842c02ad522
  $fReadNumber_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Number
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Number
                   InflectionData.$fReadNumber_$creadPrec
                   eta) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson :: GHC.Read.Read InflectionData.Person
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Person
                  InflectionData.$fReadPerson_$s$dmreadsPrec
                  InflectionData.$fReadPerson2
                  InflectionData.$fReadPerson_$creadPrec
                  InflectionData.$fReadPerson_$creadListPrec -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Person] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Person]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Person
                   InflectionData.$fReadManifest92
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Person>_R))
                   @ b
                   eta1) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Person]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Person]
                   InflectionData.$fReadPerson3) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Person]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Person
                   InflectionData.$fReadManifest92
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Person>_R))
                   @ [InflectionData.Person]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Person])) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Person]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadPerson1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Person]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Person]>_R))) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Person
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest92
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Person>_R)) -}
87552d4bd640161dc918422e1f989f36
  $fReadPerson_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Person
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Person
                   InflectionData.$fReadPerson_$creadPrec
                   eta) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity :: GHC.Read.Read InflectionData.Polarity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Polarity
                  InflectionData.$fReadPolarity_$s$dmreadsPrec
                  InflectionData.$fReadPolarity2
                  InflectionData.$fReadPolarity_$creadPrec
                  InflectionData.$fReadPolarity_$creadListPrec -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Polarity] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Polarity]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Polarity
                   InflectionData.$fReadManifest108
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Polarity>_R))
                   @ b
                   eta1) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Polarity]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Polarity]
                   InflectionData.$fReadPolarity3) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Polarity]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Polarity
                   InflectionData.$fReadManifest108
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Polarity>_R))
                   @ [InflectionData.Polarity]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Polarity])) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Polarity]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadPolarity1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Polarity]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Polarity]>_R))) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Polarity
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest108
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Polarity>_R)) -}
b165a208777adb6384e8aa49b7841cdc
  $fReadPolarity_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Polarity
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Polarity
                   InflectionData.$fReadPolarity_$creadPrec
                   eta) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity :: GHC.Read.Read InflectionData.Specificity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Specificity
                  InflectionData.$fReadSpecificity_$s$dmreadsPrec
                  InflectionData.$fReadSpecificity2
                  InflectionData.$fReadSpecificity_$creadPrec
                  InflectionData.$fReadSpecificity_$creadListPrec -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Specificity] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Specificity]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Specificity
                   InflectionData.$fReadManifest120
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Specificity>_R))
                   @ b
                   eta1) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Specificity]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Specificity]
                   InflectionData.$fReadSpecificity3) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Specificity]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Specificity
                   InflectionData.$fReadManifest120
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Specificity>_R))
                   @ [InflectionData.Specificity]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Specificity])) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.Specificity]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadSpecificity1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Specificity]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Specificity]>_R))) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Specificity
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest120
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Specificity>_R)) -}
43df515dcdadd0ea11740b17c269f784
  $fReadSpecificity_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Specificity
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Specificity
                   InflectionData.$fReadSpecificity_$creadPrec
                   eta) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense :: GHC.Read.Read InflectionData.Tense
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Tense
                  InflectionData.$fReadTense_$s$dmreadsPrec
                  InflectionData.$fReadTense2
                  InflectionData.$fReadTense_$creadPrec
                  InflectionData.$fReadTense_$creadListPrec -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Tense] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Tense]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Tense
                   InflectionData.$fReadManifest132
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Tense>_R))
                   @ b
                   eta1) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Tense]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Tense]
                   InflectionData.$fReadTense3) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Tense]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Tense
                   InflectionData.$fReadManifest132
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Tense>_R))
                   @ [InflectionData.Tense]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Tense])) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Tense]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadTense1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Tense]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Tense]>_R))) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Tense
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest132
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Tense>_R)) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fReadTense_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Tense
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Tense
                   InflectionData.$fReadTense_$creadPrec
                   eta) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic :: GHC.Read.Read InflectionData.Topic
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Topic
                  InflectionData.$fReadTopic_$s$dmreadsPrec
                  InflectionData.$fReadTopic2
                  InflectionData.$fReadTopic_$creadPrec
                  InflectionData.$fReadTopic_$creadListPrec -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Topic] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Topic]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Topic
                   InflectionData.$fReadManifest172
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Topic>_R))
                   @ b
                   eta1) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Topic]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Topic]
                   InflectionData.$fReadTopic3) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Topic]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Topic
                   InflectionData.$fReadManifest172
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Topic>_R))
                   @ [InflectionData.Topic]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Topic])) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Topic]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadTopic1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Topic]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Topic]>_R))) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Topic
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest172
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Topic>_R)) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fReadTopic_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Topic
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Topic
                   InflectionData.$fReadTopic_$creadPrec
                   eta) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity :: GHC.Read.Read InflectionData.Transitivity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Transitivity
                  InflectionData.$fReadTransitivity_$s$dmreadsPrec
                  InflectionData.$fReadTransitivity2
                  InflectionData.$fReadTransitivity_$creadPrec
                  InflectionData.$fReadTransitivity_$creadListPrec -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Transitivity] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Transitivity]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Transitivity
                   InflectionData.$fReadManifest184
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Transitivity>_R))
                   @ b
                   eta1) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Transitivity]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Transitivity]
                   InflectionData.$fReadTransitivity3) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Transitivity]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Transitivity
                   InflectionData.$fReadManifest184
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Transitivity>_R))
                   @ [InflectionData.Transitivity]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Transitivity])) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [InflectionData.Transitivity]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadTransitivity1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Transitivity]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Transitivity]>_R))) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      InflectionData.Transitivity
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest184
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Transitivity>_R)) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fReadTransitivity_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Transitivity
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Transitivity
                   InflectionData.$fReadTransitivity_$creadPrec
                   eta) -}
523b90b12350f06385d4da5905742868
  $fReadVoice :: GHC.Read.Read InflectionData.Voice
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Voice
                  InflectionData.$fReadVoice_$s$dmreadsPrec
                  InflectionData.$fReadVoice2
                  InflectionData.$fReadVoice_$creadPrec
                  InflectionData.$fReadVoice_$creadListPrec -}
523b90b12350f06385d4da5905742868
  $fReadVoice1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Voice] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Voice]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Voice
                   InflectionData.$fReadManifest200
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Voice>_R))
                   @ b
                   eta1) -}
523b90b12350f06385d4da5905742868
  $fReadVoice2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Voice]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Voice]
                   InflectionData.$fReadVoice3) -}
523b90b12350f06385d4da5905742868
  $fReadVoice3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Voice]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Voice
                   InflectionData.$fReadManifest200
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Voice>_R))
                   @ [InflectionData.Voice]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Voice])) -}
523b90b12350f06385d4da5905742868
  $fReadVoice_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Voice]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadVoice1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Voice]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Voice]>_R))) -}
523b90b12350f06385d4da5905742868
  $fReadVoice_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Voice
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest200
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Voice>_R)) -}
523b90b12350f06385d4da5905742868
  $fReadVoice_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Voice
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Voice
                   InflectionData.$fReadVoice_$creadPrec
                   eta) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition :: GHC.Read.Read InflectionData.Volition
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Volition
                  InflectionData.$fReadVolition_$s$dmreadsPrec
                  InflectionData.$fReadVolition2
                  InflectionData.$fReadVolition_$creadPrec
                  InflectionData.$fReadVolition_$creadListPrec -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([InflectionData.Volition] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ eta :: Text.ParserCombinators.ReadPrec.Prec
                   @ b
                   eta1 :: [InflectionData.Volition]
                           -> Text.ParserCombinators.ReadP.P b ->
                 GHC.Read.$wa
                   @ InflectionData.Volition
                   InflectionData.$fReadManifest216
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Volition>_R))
                   @ b
                   eta1) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition2 ::
    Text.ParserCombinators.ReadP.ReadS [InflectionData.Volition]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [InflectionData.Volition]
                   InflectionData.$fReadVolition3) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition3 ::
    Text.ParserCombinators.ReadP.P [InflectionData.Volition]
  {- Unfolding: (GHC.Read.$wa
                   @ InflectionData.Volition
                   InflectionData.$fReadManifest216
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                             <InflectionData.Volition>_R))
                   @ [InflectionData.Volition]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ [InflectionData.Volition])) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [InflectionData.Volition]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadVolition1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                    <[InflectionData.Volition]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                               <[InflectionData.Volition]>_R))) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec InflectionData.Volition
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fReadManifest216
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                          <InflectionData.Volition>_R)) -}
79163f2537538d5ab28ad5d835b8900a
  $fReadVolition_$s$dmreadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS InflectionData.Volition
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (-1, True, False)
                (\ eta :: GHC.Types.Int ->
                 Text.ParserCombinators.ReadPrec.readPrec_to_S
                   @ InflectionData.Volition
                   InflectionData.$fReadVolition_$creadPrec
                   eta) -}
ff5c0a71d04a232cd45f5e0b5abfb21c
  $fShow(,,,,,,,,,,,,,,,,,) ::
    (GHC.Show.Show a, GHC.Show.Show b, GHC.Show.Show c,
     GHC.Show.Show d, GHC.Show.Show e, GHC.Show.Show f, GHC.Show.Show g,
     GHC.Show.Show h, GHC.Show.Show i, GHC.Show.Show j, GHC.Show.Show k,
     GHC.Show.Show l, GHC.Show.Show m, GHC.Show.Show n, GHC.Show.Show o,
     GHC.Show.Show p, GHC.Show.Show q, GHC.Show.Show r) =>
    GHC.Show.Show
      (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
  DFunId[0]
  {- Arity: 18,
     Strictness: <L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a38
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      @ o
                      @ p
                      @ q
                      @ r
                      $dShow :: GHC.Show.Show a38
                      $dShow1 :: GHC.Show.Show b
                      $dShow2 :: GHC.Show.Show c
                      $dShow3 :: GHC.Show.Show d
                      $dShow4 :: GHC.Show.Show e
                      $dShow5 :: GHC.Show.Show f
                      $dShow6 :: GHC.Show.Show g
                      $dShow7 :: GHC.Show.Show h
                      $dShow8 :: GHC.Show.Show i
                      $dShow9 :: GHC.Show.Show j
                      $dShow10 :: GHC.Show.Show k
                      $dShow11 :: GHC.Show.Show l
                      $dShow12 :: GHC.Show.Show m
                      $dShow13 :: GHC.Show.Show n
                      $dShow14 :: GHC.Show.Show o
                      $dShow15 :: GHC.Show.Show p
                      $dShow16 :: GHC.Show.Show q
                      $dShow17 :: GHC.Show.Show r.
                  @ (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
                  (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowsPrec
                     @ a38
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     @ p
                     @ q
                     @ r
                     $dShow
                     $dShow1
                     $dShow2
                     $dShow3
                     $dShow4
                     $dShow5
                     $dShow6
                     $dShow7
                     $dShow8
                     $dShow9
                     $dShow10
                     $dShow11
                     $dShow12
                     $dShow13
                     $dShow14
                     $dShow15
                     $dShow16
                     $dShow17)
                  (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshow
                     @ a38
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     @ p
                     @ q
                     @ r
                     $dShow
                     $dShow1
                     $dShow2
                     $dShow3
                     $dShow4
                     $dShow5
                     $dShow6
                     $dShow7
                     $dShow8
                     $dShow9
                     $dShow10
                     $dShow11
                     $dShow12
                     $dShow13
                     $dShow14
                     $dShow15
                     $dShow16
                     $dShow17)
                  (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowList
                     @ a38
                     @ b
                     @ c
                     @ d
                     @ e
                     @ f
                     @ g
                     @ h
                     @ i
                     @ j
                     @ k
                     @ l
                     @ m
                     @ n
                     @ o
                     @ p
                     @ q
                     @ r
                     $dShow
                     $dShow1
                     $dShow2
                     $dShow3
                     $dShow4
                     $dShow5
                     $dShow6
                     $dShow7
                     $dShow8
                     $dShow9
                     $dShow10
                     $dShow11
                     $dShow12
                     $dShow13
                     $dShow14
                     $dShow15
                     $dShow16
                     $dShow17) -}
92661c975df3b59ae2c45cdd9cc1bb39
  $fShow(,,,,,,,,,,,,,,,,,)1 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# ')') -}
dace8b484561a502ea588a88a341bf42
  $fShow(,,,,,,,,,,,,,,,,,)2 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '(') -}
31613de3bbe2e7548d362d65bddda96b
  $fShow(,,,,,,,,,,,,,,,,,)3 ::
    (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
    -> GHC.Base.String -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ w4 :: (GrammarData.LexCat,
                          InflectionData.ManifestType,
                          GHC.Types.Int)
                   w5 :: GHC.Base.String[OneShot] ->
                 case w4 of ww { (,,) ww1 ww2 ww3 ->
                 GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows9
                   (GrammarData.$w$cshowsPrec4
                      ww1
                      (GHC.Types.:
                         @ GHC.Types.Char
                         GHC.Show.showList__1
                         (GHC.Show.$fShow(,,)_$sgo
                            (\ w :: GHC.Base.String -> InflectionData.$w$cshowsPrec ww2 w)
                            (GHC.Types.:
                               @ GHC.Show.ShowS
                               (\ w2 :: GHC.Base.String ->
                                case ww3 of ww4 { GHC.Types.I# ww5 ->
                                case GHC.Show.$wshowSignedInt 0 ww5 w2 of ww6 { (#,#) ww7 ww8 ->
                                GHC.Types.: @ GHC.Types.Char ww7 ww8 } })
                               (GHC.Types.[] @ GHC.Show.ShowS))
                            (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w5)))) }) -}
3b10718cbe932ddd8aea91301624e63b
  $fShow(,,,,,,,,,,,,,,,,,)4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Manifest "#) -}
6fa3f213e4e682f8413b07ee7216c6ab
  $fShow(,,,,,,,,,,,,,,,,,)_$cshow ::
    (GHC.Show.Show a, GHC.Show.Show b, GHC.Show.Show c,
     GHC.Show.Show d, GHC.Show.Show e, GHC.Show.Show f, GHC.Show.Show g,
     GHC.Show.Show h, GHC.Show.Show i, GHC.Show.Show j, GHC.Show.Show k,
     GHC.Show.Show l, GHC.Show.Show m, GHC.Show.Show n, GHC.Show.Show o,
     GHC.Show.Show p, GHC.Show.Show q, GHC.Show.Show r) =>
    (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> GHC.Base.String
  {- Arity: 19,
     Strictness: <L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (19, True, False)
                (\ @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   $dShow :: GHC.Show.Show a38
                   $dShow1 :: GHC.Show.Show b
                   $dShow2 :: GHC.Show.Show c
                   $dShow3 :: GHC.Show.Show d
                   $dShow4 :: GHC.Show.Show e
                   $dShow5 :: GHC.Show.Show f
                   $dShow6 :: GHC.Show.Show g
                   $dShow7 :: GHC.Show.Show h
                   $dShow8 :: GHC.Show.Show i
                   $dShow9 :: GHC.Show.Show j
                   $dShow10 :: GHC.Show.Show k
                   $dShow11 :: GHC.Show.Show l
                   $dShow12 :: GHC.Show.Show m
                   $dShow13 :: GHC.Show.Show n
                   $dShow14 :: GHC.Show.Show o
                   $dShow15 :: GHC.Show.Show p
                   $dShow16 :: GHC.Show.Show q
                   $dShow17 :: GHC.Show.Show r
                   x :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) ->
                 InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowsPrec
                   @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   $dShow
                   $dShow1
                   $dShow2
                   $dShow3
                   $dShow4
                   $dShow5
                   $dShow6
                   $dShow7
                   $dShow8
                   $dShow9
                   $dShow10
                   $dShow11
                   $dShow12
                   $dShow13
                   $dShow14
                   $dShow15
                   $dShow16
                   $dShow17
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
85a2f417c0ed3a5f71ceccdf52b5d181
  $fShow(,,,,,,,,,,,,,,,,,)_$cshowList ::
    (GHC.Show.Show a, GHC.Show.Show b, GHC.Show.Show c,
     GHC.Show.Show d, GHC.Show.Show e, GHC.Show.Show f, GHC.Show.Show g,
     GHC.Show.Show h, GHC.Show.Show i, GHC.Show.Show j, GHC.Show.Show k,
     GHC.Show.Show l, GHC.Show.Show m, GHC.Show.Show n, GHC.Show.Show o,
     GHC.Show.Show p, GHC.Show.Show q, GHC.Show.Show r) =>
    [(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)]
    -> GHC.Show.ShowS
  {- Arity: 20,
     Strictness: <L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><L,U(C(C1(U)),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (20, True, False)
                (\ @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   $dShow :: GHC.Show.Show a38
                   $dShow1 :: GHC.Show.Show b
                   $dShow2 :: GHC.Show.Show c
                   $dShow3 :: GHC.Show.Show d
                   $dShow4 :: GHC.Show.Show e
                   $dShow5 :: GHC.Show.Show f
                   $dShow6 :: GHC.Show.Show g
                   $dShow7 :: GHC.Show.Show h
                   $dShow8 :: GHC.Show.Show i
                   $dShow9 :: GHC.Show.Show j
                   $dShow10 :: GHC.Show.Show k
                   $dShow11 :: GHC.Show.Show l
                   $dShow12 :: GHC.Show.Show m
                   $dShow13 :: GHC.Show.Show n
                   $dShow14 :: GHC.Show.Show o
                   $dShow15 :: GHC.Show.Show p
                   $dShow16 :: GHC.Show.Show q
                   $dShow17 :: GHC.Show.Show r
                   ls :: [(a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
                   (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowsPrec
                      @ a38
                      @ b
                      @ c
                      @ d
                      @ e
                      @ f
                      @ g
                      @ h
                      @ i
                      @ j
                      @ k
                      @ l
                      @ m
                      @ n
                      @ o
                      @ p
                      @ q
                      @ r
                      $dShow
                      $dShow1
                      $dShow2
                      $dShow3
                      $dShow4
                      $dShow5
                      $dShow6
                      $dShow7
                      $dShow8
                      $dShow9
                      $dShow10
                      $dShow11
                      $dShow12
                      $dShow13
                      $dShow14
                      $dShow15
                      $dShow16
                      $dShow17
                      GHC.Show.shows18)
                   ls
                   s) -}
51ea1547bee4601526e5e9a5a3cbe2f7
  $fShow(,,,,,,,,,,,,,,,,,)_$cshowsPrec ::
    (GHC.Show.Show a, GHC.Show.Show b, GHC.Show.Show c,
     GHC.Show.Show d, GHC.Show.Show e, GHC.Show.Show f, GHC.Show.Show g,
     GHC.Show.Show h, GHC.Show.Show i, GHC.Show.Show j, GHC.Show.Show k,
     GHC.Show.Show l, GHC.Show.Show m, GHC.Show.Show n, GHC.Show.Show o,
     GHC.Show.Show p, GHC.Show.Show q, GHC.Show.Show r) =>
    GHC.Types.Int
    -> (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r)
    -> GHC.Show.ShowS
  {- Arity: 20,
     Strictness: <L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (20, True, False)
                (\ @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   w :: GHC.Show.Show a38
                   w1 :: GHC.Show.Show b
                   w2 :: GHC.Show.Show c
                   w3 :: GHC.Show.Show d
                   w4 :: GHC.Show.Show e
                   w5 :: GHC.Show.Show f
                   w6 :: GHC.Show.Show g
                   w7 :: GHC.Show.Show h
                   w8 :: GHC.Show.Show i
                   w9 :: GHC.Show.Show j
                   w10 :: GHC.Show.Show k
                   w11 :: GHC.Show.Show l
                   w12 :: GHC.Show.Show m
                   w13 :: GHC.Show.Show n
                   w14 :: GHC.Show.Show o
                   w15 :: GHC.Show.Show p
                   w16 :: GHC.Show.Show q
                   w17 :: GHC.Show.Show r
                   w18 :: GHC.Types.Int
                   w19 :: (a38, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) ->
                 case w19 of ww { (,,,,,,,,,,,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 InflectionData.$w$cshowsPrec8
                   @ a38
                   @ b
                   @ c
                   @ d
                   @ e
                   @ f
                   @ g
                   @ h
                   @ i
                   @ j
                   @ k
                   @ l
                   @ m
                   @ n
                   @ o
                   @ p
                   @ q
                   @ r
                   w
                   w1
                   w2
                   w3
                   w4
                   w5
                   w6
                   w7
                   w8
                   w9
                   w10
                   w11
                   w12
                   w13
                   w14
                   w15
                   w16
                   w17
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
ffc92a563a03cfcc92a978bedc938c54
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshow ::
    (InflectionData.Manifest InflectionData.Gender,
     InflectionData.Manifest InflectionData.Animacy,
     InflectionData.Manifest InflectionData.Case,
     InflectionData.Manifest InflectionData.Number,
     InflectionData.Manifest InflectionData.Definiteness,
     InflectionData.Manifest InflectionData.Specificity,
     InflectionData.Manifest InflectionData.Topic,
     InflectionData.Manifest InflectionData.Person,
     InflectionData.Manifest InflectionData.Clusivity,
     InflectionData.Manifest InflectionData.Honorific,
     InflectionData.Manifest InflectionData.Polarity,
     InflectionData.Manifest InflectionData.Tense,
     InflectionData.Manifest InflectionData.Aspect,
     InflectionData.Manifest InflectionData.Mood,
     InflectionData.Manifest InflectionData.Voice,
     InflectionData.Manifest InflectionData.Evidentiality,
     InflectionData.Manifest InflectionData.Transitivity,
     InflectionData.Manifest InflectionData.Volition)
    -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition) ->
                 InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
717bda366db7c2d7a7dc8a80484dfb7a
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowList ::
    [(InflectionData.Manifest InflectionData.Gender,
      InflectionData.Manifest InflectionData.Animacy,
      InflectionData.Manifest InflectionData.Case,
      InflectionData.Manifest InflectionData.Number,
      InflectionData.Manifest InflectionData.Definiteness,
      InflectionData.Manifest InflectionData.Specificity,
      InflectionData.Manifest InflectionData.Topic,
      InflectionData.Manifest InflectionData.Person,
      InflectionData.Manifest InflectionData.Clusivity,
      InflectionData.Manifest InflectionData.Honorific,
      InflectionData.Manifest InflectionData.Polarity,
      InflectionData.Manifest InflectionData.Tense,
      InflectionData.Manifest InflectionData.Aspect,
      InflectionData.Manifest InflectionData.Mood,
      InflectionData.Manifest InflectionData.Voice,
      InflectionData.Manifest InflectionData.Evidentiality,
      InflectionData.Manifest InflectionData.Transitivity,
      InflectionData.Manifest InflectionData.Volition)]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ ls :: [(InflectionData.Manifest InflectionData.Gender,
                           InflectionData.Manifest InflectionData.Animacy,
                           InflectionData.Manifest InflectionData.Case,
                           InflectionData.Manifest InflectionData.Number,
                           InflectionData.Manifest InflectionData.Definiteness,
                           InflectionData.Manifest InflectionData.Specificity,
                           InflectionData.Manifest InflectionData.Topic,
                           InflectionData.Manifest InflectionData.Person,
                           InflectionData.Manifest InflectionData.Clusivity,
                           InflectionData.Manifest InflectionData.Honorific,
                           InflectionData.Manifest InflectionData.Polarity,
                           InflectionData.Manifest InflectionData.Tense,
                           InflectionData.Manifest InflectionData.Aspect,
                           InflectionData.Manifest InflectionData.Mood,
                           InflectionData.Manifest InflectionData.Voice,
                           InflectionData.Manifest InflectionData.Evidentiality,
                           InflectionData.Manifest InflectionData.Transitivity,
                           InflectionData.Manifest InflectionData.Volition)]
                   s :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (InflectionData.Manifest InflectionData.Gender,
                      InflectionData.Manifest InflectionData.Animacy,
                      InflectionData.Manifest InflectionData.Case,
                      InflectionData.Manifest InflectionData.Number,
                      InflectionData.Manifest InflectionData.Definiteness,
                      InflectionData.Manifest InflectionData.Specificity,
                      InflectionData.Manifest InflectionData.Topic,
                      InflectionData.Manifest InflectionData.Person,
                      InflectionData.Manifest InflectionData.Clusivity,
                      InflectionData.Manifest InflectionData.Honorific,
                      InflectionData.Manifest InflectionData.Polarity,
                      InflectionData.Manifest InflectionData.Tense,
                      InflectionData.Manifest InflectionData.Aspect,
                      InflectionData.Manifest InflectionData.Mood,
                      InflectionData.Manifest InflectionData.Voice,
                      InflectionData.Manifest InflectionData.Evidentiality,
                      InflectionData.Manifest InflectionData.Transitivity,
                      InflectionData.Manifest InflectionData.Volition)
                   (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec
                      GHC.Show.shows18)
                   ls
                   s) -}
13144439f60fc7d9fd3a1148f2003f8d
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec ::
    GHC.Types.Int
    -> (InflectionData.Manifest InflectionData.Gender,
        InflectionData.Manifest InflectionData.Animacy,
        InflectionData.Manifest InflectionData.Case,
        InflectionData.Manifest InflectionData.Number,
        InflectionData.Manifest InflectionData.Definiteness,
        InflectionData.Manifest InflectionData.Specificity,
        InflectionData.Manifest InflectionData.Topic,
        InflectionData.Manifest InflectionData.Person,
        InflectionData.Manifest InflectionData.Clusivity,
        InflectionData.Manifest InflectionData.Honorific,
        InflectionData.Manifest InflectionData.Polarity,
        InflectionData.Manifest InflectionData.Tense,
        InflectionData.Manifest InflectionData.Aspect,
        InflectionData.Manifest InflectionData.Mood,
        InflectionData.Manifest InflectionData.Voice,
        InflectionData.Manifest InflectionData.Evidentiality,
        InflectionData.Manifest InflectionData.Transitivity,
        InflectionData.Manifest InflectionData.Volition)
    -> GHC.Show.ShowS
  {- Arity: 2,
     Strictness: <L,A><S,1*U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: (InflectionData.Manifest InflectionData.Gender,
                          InflectionData.Manifest InflectionData.Animacy,
                          InflectionData.Manifest InflectionData.Case,
                          InflectionData.Manifest InflectionData.Number,
                          InflectionData.Manifest InflectionData.Definiteness,
                          InflectionData.Manifest InflectionData.Specificity,
                          InflectionData.Manifest InflectionData.Topic,
                          InflectionData.Manifest InflectionData.Person,
                          InflectionData.Manifest InflectionData.Clusivity,
                          InflectionData.Manifest InflectionData.Honorific,
                          InflectionData.Manifest InflectionData.Polarity,
                          InflectionData.Manifest InflectionData.Tense,
                          InflectionData.Manifest InflectionData.Aspect,
                          InflectionData.Manifest InflectionData.Mood,
                          InflectionData.Manifest InflectionData.Voice,
                          InflectionData.Manifest InflectionData.Evidentiality,
                          InflectionData.Manifest InflectionData.Transitivity,
                          InflectionData.Manifest InflectionData.Volition) ->
                 case w1 of ww { (,,,,,,,,,,,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 InflectionData.$w$s$cshowsPrec
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec1 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Volition
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Volition
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.VOL
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest225
                                          x1
                                     InflectionData.NVOL
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest222
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec10 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Clusivity
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Clusivity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (case b2 of wild2 {
                                  InflectionData.INCL
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadClusivity11
                                       x1
                                  InflectionData.EXCL
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadClusivity8
                                       x1 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec11 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Person -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Person
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.FIRST
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest105
                                          x1
                                     InflectionData.SECOND
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest102
                                          x1
                                     InflectionData.THIRD
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest99
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec12 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Topic -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Topic
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.TOP
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest181
                                          x1
                                     InflectionData.NTOP
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest178
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec13 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Specificity
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Specificity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.SPEC
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest129
                                          x1
                                     InflectionData.NSPEC
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest126
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec14 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Definiteness
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Definiteness
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (case b2 of wild2 {
                                  InflectionData.DEF
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadDefiniteness11
                                       x1
                                  InflectionData.INDF
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadDefiniteness8
                                       x1 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec15 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Number -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Number
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (InflectionData.$w$cshowsPrec4 b2 x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec16 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Case -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Case
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (GHC.Show.showList__
                                @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (InflectionData.$w$cshowsPrec5 b2 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (GHC.Show.showList__
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (InflectionData.$w$cshowsPrec5
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            eta))))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec17 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Animacy -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Animacy
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (GHC.Show.showList__
                                @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (InflectionData.$w$cshowsPrec6 b2 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (GHC.Show.showList__
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (InflectionData.$w$cshowsPrec6
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            eta))))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec18 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Gender -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Gender
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (GHC.Show.showList__
                                @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (InflectionData.$w$cshowsPrec7 b2 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (GHC.Show.showList__
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (InflectionData.$w$cshowsPrec7
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            eta))))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec2 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Transitivity
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Transitivity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.NTRANS
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest197
                                          x1
                                     InflectionData.TRANS
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest194
                                          x1
                                     InflectionData.DITRANS
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest191
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec3 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Evidentiality
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Evidentiality
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (GHC.Show.showList__
                                @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                b1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.showSpace1
                                   (InflectionData.$w$cshowsPrec1 b2 eta)))
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (GHC.Show.showList__
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (InflectionData.$w$cshowsPrec1
                                         b2
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            eta))))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec4 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Voice -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Voice
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.ACTIVE
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest213
                                          x1
                                     InflectionData.MIDDLE
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest210
                                          x1
                                     InflectionData.PASSIVE
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest207
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec5 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Mood -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Mood
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (InflectionData.$w$cshowsPrec2 b2 x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec6 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Aspect -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Aspect
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (case b2 of wild2 {
                                  InflectionData.PFV
                                  -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadAspect11 x1
                                  InflectionData.IPFV
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadAspect8
                                       x1 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec7 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Tense -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Tense
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (InflectionData.$w$cshowsPrec3 b2 x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec8 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Polarity
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Polarity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (case b2 of wild2 {
                                     InflectionData.AFF
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest117
                                          x1
                                     InflectionData.NEG
                                     -> GHC.Base.++
                                          @ GHC.Types.Char
                                          InflectionData.$fReadManifest114
                                          x1 })))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec9 ::
    GHC.Types.Int
    -> InflectionData.Manifest InflectionData.Honorific
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest InflectionData.Honorific
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,1*U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (case b2 of wild2 {
                                  InflectionData.FAM
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadHonorific11
                                       x1
                                  InflectionData.FORM
                                  -> GHC.Base.++
                                       @ GHC.Types.Char
                                       InflectionData.$fReadHonorific8
                                       x1 }))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
0939b7d20171cbd1cbc6d78c0319a4fd
  $fShow(,,,,,,,,,,,,,,,,,)_$s$fShow(,,,,,,,,,,,,,,,,,) ::
    GHC.Show.Show
      (InflectionData.Manifest InflectionData.Gender,
       InflectionData.Manifest InflectionData.Animacy,
       InflectionData.Manifest InflectionData.Case,
       InflectionData.Manifest InflectionData.Number,
       InflectionData.Manifest InflectionData.Definiteness,
       InflectionData.Manifest InflectionData.Specificity,
       InflectionData.Manifest InflectionData.Topic,
       InflectionData.Manifest InflectionData.Person,
       InflectionData.Manifest InflectionData.Clusivity,
       InflectionData.Manifest InflectionData.Honorific,
       InflectionData.Manifest InflectionData.Polarity,
       InflectionData.Manifest InflectionData.Tense,
       InflectionData.Manifest InflectionData.Aspect,
       InflectionData.Manifest InflectionData.Mood,
       InflectionData.Manifest InflectionData.Voice,
       InflectionData.Manifest InflectionData.Evidentiality,
       InflectionData.Manifest InflectionData.Transitivity,
       InflectionData.Manifest InflectionData.Volition)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (InflectionData.Manifest InflectionData.Gender,
                     InflectionData.Manifest InflectionData.Animacy,
                     InflectionData.Manifest InflectionData.Case,
                     InflectionData.Manifest InflectionData.Number,
                     InflectionData.Manifest InflectionData.Definiteness,
                     InflectionData.Manifest InflectionData.Specificity,
                     InflectionData.Manifest InflectionData.Topic,
                     InflectionData.Manifest InflectionData.Person,
                     InflectionData.Manifest InflectionData.Clusivity,
                     InflectionData.Manifest InflectionData.Honorific,
                     InflectionData.Manifest InflectionData.Polarity,
                     InflectionData.Manifest InflectionData.Tense,
                     InflectionData.Manifest InflectionData.Aspect,
                     InflectionData.Manifest InflectionData.Mood,
                     InflectionData.Manifest InflectionData.Voice,
                     InflectionData.Manifest InflectionData.Evidentiality,
                     InflectionData.Manifest InflectionData.Transitivity,
                     InflectionData.Manifest InflectionData.Volition)
                  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec
                  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshow
                  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowList -}
fdd324339d646dcb3174c00a146e460c
  $fShow(,,,,,,,,,,,,,,,,,)_go ::
    [GHC.Base.String -> GHC.Base.String]
    -> GHC.Base.String -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U> -}
645292a0c707731346010c9800970e0d
  $fShowAgreement :: GHC.Show.Show InflectionData.Agreement
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Agreement
                  InflectionData.$fShowAgreement_$cshowsPrec
                  InflectionData.$fShowAgreement_$cshow
                  InflectionData.$fShowAgreement_$cshowList -}
645292a0c707731346010c9800970e0d
  $fShowAgreement1 :: InflectionData.Agreement -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: InflectionData.Agreement
                   w1 :: GHC.Base.String ->
                 case w of ww { InflectionData.Agreement ww1 ww2 ->
                 InflectionData.$w$cshowsPrec9 0 ww1 ww2 w1 }) -}
807fdc41c6c9db555608633a22a7d9cf
  $fShowAgreement2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Agreement "#) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fShowAgreementSystem ::
    GHC.Show.Show InflectionData.AgreementSystem
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.AgreementSystem
                  InflectionData.$fShowAgreementSystem_$cshowsPrec
                  InflectionData.$fShowAgreementSystem_$cshow
                  InflectionData.$fShowAgreementSystem_$cshowList -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fShowAgreementSystem1 ::
    InflectionData.AgreementSystem -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: InflectionData.AgreementSystem
                   w1 :: GHC.Base.String ->
                 case w of ww { InflectionData.AgreementSystem ww1 ->
                 InflectionData.$w$cshowsPrec10 0 ww1 w1 }) -}
260d27023aaf68a979a52e7c5e9e120d
  $fShowAgreementSystem2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "AgreementSystem "#) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fShowAgreementSystem_$cshow ::
    InflectionData.AgreementSystem -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.AgreementSystem ->
                 InflectionData.$fShowAgreementSystem_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fShowAgreementSystem_$cshowList ::
    [InflectionData.AgreementSystem] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.AgreementSystem
                   InflectionData.$fShowAgreementSystem1) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $fShowAgreementSystem_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.AgreementSystem -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.AgreementSystem
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { InflectionData.AgreementSystem ww3 ->
                 InflectionData.$w$cshowsPrec10 ww1 ww3 w2 } }) -}
645292a0c707731346010c9800970e0d
  $fShowAgreement_$cshow ::
    InflectionData.Agreement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Agreement ->
                 InflectionData.$fShowAgreement_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
645292a0c707731346010c9800970e0d
  $fShowAgreement_$cshowList ::
    [InflectionData.Agreement] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Agreement
                   InflectionData.$fShowAgreement1) -}
645292a0c707731346010c9800970e0d
  $fShowAgreement_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Agreement -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Agreement
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { InflectionData.Agreement ww3 ww4 ->
                 InflectionData.$w$cshowsPrec9 ww1 ww3 ww4 w2 } }) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fShowAnimacy :: GHC.Show.Show InflectionData.Animacy
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Animacy
                  InflectionData.$fShowAnimacy_$cshowsPrec
                  InflectionData.$fShowAnimacy_$cshow
                  InflectionData.$fShowAnimacy_$cshowList -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fShowAnimacy_$cshow :: InflectionData.Animacy -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Animacy ->
                 InflectionData.$fShowAnimacy_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fShowAnimacy_$cshowList ::
    [InflectionData.Animacy] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Animacy
                   InflectionData.$w$cshowsPrec6) -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $fShowAnimacy_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Animacy -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Animacy
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec6 w1 w2) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fShowAspect :: GHC.Show.Show InflectionData.Aspect
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Aspect
                  InflectionData.$fShowAspect_$cshowsPrec
                  InflectionData.$fShowAspect_$cshow
                  InflectionData.$fShowAspect_$cshowList -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fShowAspect1 :: InflectionData.Aspect -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Aspect eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.PFV
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadAspect11)
                        eta
                   InflectionData.IPFV
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadAspect8)
                        eta }) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fShowAspect_$cshow :: InflectionData.Aspect -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Aspect ->
                 case x of wild {
                   InflectionData.PFV -> InflectionData.$fReadAspect11
                   InflectionData.IPFV -> InflectionData.$fReadAspect8 }) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fShowAspect_$cshowList ::
    [InflectionData.Aspect] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Aspect
                   InflectionData.$fShowAspect1) -}
6cd9c63aad1a4e1ec43732010ec1ea5c
  $fShowAspect_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Aspect -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Aspect
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.PFV
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadAspect11)
                        eta
                   InflectionData.IPFV
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadAspect8)
                        eta }) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fShowCase :: GHC.Show.Show InflectionData.Case
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Case
                  InflectionData.$fShowCase_$cshowsPrec
                  InflectionData.$fShowCase_$cshow
                  InflectionData.$fShowCase_$cshowList -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fShowCase_$cshow :: InflectionData.Case -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Case ->
                 InflectionData.$fShowCase_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fShowCase_$cshowList :: [InflectionData.Case] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Case
                   InflectionData.$w$cshowsPrec5) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $fShowCase_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Case -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Case
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec5 w1 w2) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fShowClusivity :: GHC.Show.Show InflectionData.Clusivity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Clusivity
                  InflectionData.$fShowClusivity_$cshowsPrec
                  InflectionData.$fShowClusivity_$cshow
                  InflectionData.$fShowClusivity_$cshowList -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fShowClusivity1 :: InflectionData.Clusivity -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Clusivity eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.INCL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadClusivity11)
                        eta
                   InflectionData.EXCL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadClusivity8)
                        eta }) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fShowClusivity_$cshow ::
    InflectionData.Clusivity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Clusivity ->
                 case x of wild {
                   InflectionData.INCL -> InflectionData.$fReadClusivity11
                   InflectionData.EXCL -> InflectionData.$fReadClusivity8 }) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fShowClusivity_$cshowList ::
    [InflectionData.Clusivity] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Clusivity
                   InflectionData.$fShowClusivity1) -}
ec2f2b20d2b1cf035f6ca129e5552311
  $fShowClusivity_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Clusivity -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Clusivity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.INCL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadClusivity11)
                        eta
                   InflectionData.EXCL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadClusivity8)
                        eta }) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fShowDefiniteness :: GHC.Show.Show InflectionData.Definiteness
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Definiteness
                  InflectionData.$fShowDefiniteness_$cshowsPrec
                  InflectionData.$fShowDefiniteness_$cshow
                  InflectionData.$fShowDefiniteness_$cshowList -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fShowDefiniteness1 ::
    InflectionData.Definiteness -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Definiteness eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.DEF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadDefiniteness11)
                        eta
                   InflectionData.INDF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadDefiniteness8)
                        eta }) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fShowDefiniteness_$cshow ::
    InflectionData.Definiteness -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Definiteness ->
                 case x of wild {
                   InflectionData.DEF -> InflectionData.$fReadDefiniteness11
                   InflectionData.INDF -> InflectionData.$fReadDefiniteness8 }) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fShowDefiniteness_$cshowList ::
    [InflectionData.Definiteness] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Definiteness
                   InflectionData.$fShowDefiniteness1) -}
b37f400b256ab5a9a84f13e148a3d2d5
  $fShowDefiniteness_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Definiteness -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Definiteness
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.DEF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadDefiniteness11)
                        eta
                   InflectionData.INDF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadDefiniteness8)
                        eta }) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fShowEvidentiality :: GHC.Show.Show InflectionData.Evidentiality
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Evidentiality
                  InflectionData.$fShowEvidentiality_$cshowsPrec
                  InflectionData.$fShowEvidentiality_$cshow
                  InflectionData.$fShowEvidentiality_$cshowList -}
72f49e3daffb56d4bf46854dab7a01ee
  $fShowEvidentiality_$cshow ::
    InflectionData.Evidentiality -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Evidentiality ->
                 InflectionData.$fShowEvidentiality_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fShowEvidentiality_$cshowList ::
    [InflectionData.Evidentiality] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Evidentiality
                   InflectionData.$w$cshowsPrec1) -}
72f49e3daffb56d4bf46854dab7a01ee
  $fShowEvidentiality_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Evidentiality -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Evidentiality
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec1 w1 w2) -}
bea847055a51c2d8a5a4f43d44b03253
  $fShowGender :: GHC.Show.Show InflectionData.Gender
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Gender
                  InflectionData.$fShowGender_$cshowsPrec
                  InflectionData.$fShowGender_$cshow
                  InflectionData.$fShowGender_$cshowList -}
bea847055a51c2d8a5a4f43d44b03253
  $fShowGender_$cshow :: InflectionData.Gender -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Gender ->
                 InflectionData.$fShowGender_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
bea847055a51c2d8a5a4f43d44b03253
  $fShowGender_$cshowList ::
    [InflectionData.Gender] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Gender
                   InflectionData.$w$cshowsPrec7) -}
bea847055a51c2d8a5a4f43d44b03253
  $fShowGender_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Gender -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Gender
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec7 w1 w2) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fShowHonorific :: GHC.Show.Show InflectionData.Honorific
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Honorific
                  InflectionData.$fShowHonorific_$cshowsPrec
                  InflectionData.$fShowHonorific_$cshow
                  InflectionData.$fShowHonorific_$cshowList -}
b998d88ddf707e2096355bc29dc9a0f5
  $fShowHonorific1 :: InflectionData.Honorific -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Honorific eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.FAM
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadHonorific11)
                        eta
                   InflectionData.FORM
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadHonorific8)
                        eta }) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fShowHonorific_$cshow ::
    InflectionData.Honorific -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Honorific ->
                 case x of wild {
                   InflectionData.FAM -> InflectionData.$fReadHonorific11
                   InflectionData.FORM -> InflectionData.$fReadHonorific8 }) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fShowHonorific_$cshowList ::
    [InflectionData.Honorific] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Honorific
                   InflectionData.$fShowHonorific1) -}
b998d88ddf707e2096355bc29dc9a0f5
  $fShowHonorific_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Honorific -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Honorific
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.FAM
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadHonorific11)
                        eta
                   InflectionData.FORM
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadHonorific8)
                        eta }) -}
1e3fe4826a39142c5de940012234f2c4
  $fShowInflectionSystem ::
    GHC.Show.Show InflectionData.InflectionSystem
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.InflectionSystem
                  InflectionData.$fShowInflectionSystem_$cshowsPrec
                  InflectionData.$fShowInflectionSystem_$cshow
                  InflectionData.$fShowInflectionSystem_$cshowList -}
1e3fe4826a39142c5de940012234f2c4
  $fShowInflectionSystem1 ::
    InflectionData.InflectionSystem -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: InflectionData.InflectionSystem
                   w1 :: GHC.Base.String ->
                 case w of ww { InflectionData.InflectionSystem ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 InflectionData.$w$cshowsPrec11
                   0
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   w1 }) -}
1e3fe4826a39142c5de940012234f2c4
  $fShowInflectionSystem_$cshow ::
    InflectionData.InflectionSystem -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.InflectionSystem ->
                 InflectionData.$fShowInflectionSystem_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
1e3fe4826a39142c5de940012234f2c4
  $fShowInflectionSystem_$cshowList ::
    [InflectionData.InflectionSystem] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.InflectionSystem
                   InflectionData.$fShowInflectionSystem1) -}
1e3fe4826a39142c5de940012234f2c4
  $fShowInflectionSystem_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.InflectionSystem -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.InflectionSystem
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { InflectionData.InflectionSystem ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ww19 ww20 ->
                 InflectionData.$w$cshowsPrec11
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18
                   ww19
                   ww20
                   w2 } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest ::
    GHC.Show.Show a => GHC.Show.Show (InflectionData.Manifest a)
  DFunId[0]
  {- Arity: 1, Strictness: <L,U(C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a38 $dShow :: GHC.Show.Show a38.
                  @ (InflectionData.Manifest a38)
                  (InflectionData.$fShowManifest_$cshowsPrec @ a38 $dShow)
                  (InflectionData.$fShowManifest_$cshow @ a38 $dShow)
                  (InflectionData.$fShowManifest_$cshowList @ a38 $dShow) -}
5a8ab4c8c4b866d5381db416ee1e7fdc
  $fShowManifest2 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0) -}
b165a208777adb6384e8aa49b7841cdc
  $fShowManifest20 :: InflectionData.Polarity -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Polarity eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.AFF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest117)
                        eta
                   InflectionData.NEG
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest114)
                        eta }) -}
43df515dcdadd0ea11740b17c269f784
  $fShowManifest21 :: InflectionData.Specificity -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Specificity eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.SPEC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest129)
                        eta
                   InflectionData.NSPEC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest126)
                        eta }) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fShowManifest22 :: InflectionData.Topic -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Topic eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.TOP
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest181)
                        eta
                   InflectionData.NTOP
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest178)
                        eta }) -}
79163f2537538d5ab28ad5d835b8900a
  $fShowManifest23 :: InflectionData.Volition -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ ds :: InflectionData.Volition eta :: GHC.Base.String ->
                 case ds of wild {
                   InflectionData.VOL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest225)
                        eta
                   InflectionData.NVOL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest222)
                        eta }) -}
d2f13d57675d89fd018367087198d32a
  $fShowManifest24 :: GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   InflectionData.$fReadManifest5) -}
14ed06b72ac1d79fabc4057a9ce24111
  $fShowManifest25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Base.++
                   @ GHC.Types.Char
                   InflectionData.$fReadManifest5
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fShowManifestSystem :: GHC.Show.Show InflectionData.ManifestSystem
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.ManifestSystem
                  InflectionData.$fShowManifestSystem_$cshowsPrec
                  InflectionData.$fShowManifestSystem_$cshow
                  InflectionData.$fShowManifestSystem_$cshowList -}
0e7b2c73aa17600e0a7730d855d918b4
  $fShowManifestSystem1 ::
    InflectionData.ManifestSystem -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ w :: InflectionData.ManifestSystem
                   w1 :: GHC.Base.String ->
                 case w of ww { InflectionData.ManifestSystem ww1 ww2 ww3 ->
                 InflectionData.$w$cshowsPrec15 0 ww1 ww2 ww3 w1 }) -}
caa347193d93dc0a61ce32356c54c207
  $fShowManifestSystem2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ManifestSystem "#) -}
e7a0af8a6bdcc1c8eecf28aef54b0164
  $fShowManifestSystem3 ::
    GHC.Show.Show
      (InflectionData.Manifest InflectionData.Gender,
       InflectionData.Manifest InflectionData.Animacy,
       InflectionData.Manifest InflectionData.Case,
       InflectionData.Manifest InflectionData.Number,
       InflectionData.Manifest InflectionData.Definiteness,
       InflectionData.Manifest InflectionData.Specificity,
       InflectionData.Manifest InflectionData.Topic,
       InflectionData.Manifest InflectionData.Person,
       InflectionData.Manifest InflectionData.Clusivity,
       InflectionData.Manifest InflectionData.Honorific,
       InflectionData.Manifest InflectionData.Polarity,
       InflectionData.Manifest InflectionData.Tense,
       InflectionData.Manifest InflectionData.Aspect,
       InflectionData.Manifest InflectionData.Mood,
       InflectionData.Manifest InflectionData.Voice,
       InflectionData.Manifest InflectionData.Evidentiality,
       InflectionData.Manifest InflectionData.Transitivity,
       InflectionData.Manifest InflectionData.Volition)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$fShow(,,,,,,,,,,,,,,,,,) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fShowManifestSystem_$cshow ::
    InflectionData.ManifestSystem -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.ManifestSystem ->
                 InflectionData.$fShowManifestSystem_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fShowManifestSystem_$cshowList ::
    [InflectionData.ManifestSystem] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.ManifestSystem
                   InflectionData.$fShowManifestSystem1) -}
0e7b2c73aa17600e0a7730d855d918b4
  $fShowManifestSystem_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.ManifestSystem -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <S,1*U(U)><S,1*U(1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.ManifestSystem
                   w2 :: GHC.Base.String ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { InflectionData.ManifestSystem ww3 ww4 ww5 ->
                 InflectionData.$w$cshowsPrec15 ww1 ww3 ww4 ww5 w2 } }) -}
5de8cb20dc80f991fd718da8dd1b1903
  $fShowManifestSystem_$s$fShow(,)_$cshowList ::
    [(PhonemeData.Morpheme,
      (InflectionData.Manifest InflectionData.Gender,
       InflectionData.Manifest InflectionData.Animacy,
       InflectionData.Manifest InflectionData.Case,
       InflectionData.Manifest InflectionData.Number,
       InflectionData.Manifest InflectionData.Definiteness,
       InflectionData.Manifest InflectionData.Specificity,
       InflectionData.Manifest InflectionData.Topic,
       InflectionData.Manifest InflectionData.Person,
       InflectionData.Manifest InflectionData.Clusivity,
       InflectionData.Manifest InflectionData.Honorific,
       InflectionData.Manifest InflectionData.Polarity,
       InflectionData.Manifest InflectionData.Tense,
       InflectionData.Manifest InflectionData.Aspect,
       InflectionData.Manifest InflectionData.Mood,
       InflectionData.Manifest InflectionData.Voice,
       InflectionData.Manifest InflectionData.Evidentiality,
       InflectionData.Manifest InflectionData.Transitivity,
       InflectionData.Manifest InflectionData.Volition))]
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ eta :: [(PhonemeData.Morpheme,
                            (InflectionData.Manifest InflectionData.Gender,
                             InflectionData.Manifest InflectionData.Animacy,
                             InflectionData.Manifest InflectionData.Case,
                             InflectionData.Manifest InflectionData.Number,
                             InflectionData.Manifest InflectionData.Definiteness,
                             InflectionData.Manifest InflectionData.Specificity,
                             InflectionData.Manifest InflectionData.Topic,
                             InflectionData.Manifest InflectionData.Person,
                             InflectionData.Manifest InflectionData.Clusivity,
                             InflectionData.Manifest InflectionData.Honorific,
                             InflectionData.Manifest InflectionData.Polarity,
                             InflectionData.Manifest InflectionData.Tense,
                             InflectionData.Manifest InflectionData.Aspect,
                             InflectionData.Manifest InflectionData.Mood,
                             InflectionData.Manifest InflectionData.Voice,
                             InflectionData.Manifest InflectionData.Evidentiality,
                             InflectionData.Manifest InflectionData.Transitivity,
                             InflectionData.Manifest InflectionData.Volition))]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (PhonemeData.Morpheme,
                      (InflectionData.Manifest InflectionData.Gender,
                       InflectionData.Manifest InflectionData.Animacy,
                       InflectionData.Manifest InflectionData.Case,
                       InflectionData.Manifest InflectionData.Number,
                       InflectionData.Manifest InflectionData.Definiteness,
                       InflectionData.Manifest InflectionData.Specificity,
                       InflectionData.Manifest InflectionData.Topic,
                       InflectionData.Manifest InflectionData.Person,
                       InflectionData.Manifest InflectionData.Clusivity,
                       InflectionData.Manifest InflectionData.Honorific,
                       InflectionData.Manifest InflectionData.Polarity,
                       InflectionData.Manifest InflectionData.Tense,
                       InflectionData.Manifest InflectionData.Aspect,
                       InflectionData.Manifest InflectionData.Mood,
                       InflectionData.Manifest InflectionData.Voice,
                       InflectionData.Manifest InflectionData.Evidentiality,
                       InflectionData.Manifest InflectionData.Transitivity,
                       InflectionData.Manifest InflectionData.Volition))
                   (GHC.Show.$fShow(,)_$cshowsPrec
                      @ PhonemeData.Morpheme
                      @ (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition)
                      PhonemeData.$fShowMorpheme
                      InflectionData.$fShowManifestSystem3
                      GHC.Show.shows18)
                   eta
                   eta1) -}
d4d7fe6a7722743af73d0848be830e04
  $fShowManifestType :: GHC.Show.Show InflectionData.ManifestType
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.ManifestType
                  InflectionData.$fShowManifestType_$cshowsPrec
                  InflectionData.$fShowManifestType_$cshow
                  InflectionData.$fShowManifestType_$cshowList -}
d4d7fe6a7722743af73d0848be830e04
  $fShowManifestType_$cshow ::
    InflectionData.ManifestType -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.ManifestType ->
                 InflectionData.$fShowManifestType_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d4d7fe6a7722743af73d0848be830e04
  $fShowManifestType_$cshowList ::
    [InflectionData.ManifestType] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.ManifestType
                   InflectionData.$w$cshowsPrec) -}
d4d7fe6a7722743af73d0848be830e04
  $fShowManifestType_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.ManifestType -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.ManifestType
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec w1 w2) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$cshow ::
    GHC.Show.Show a => InflectionData.Manifest a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(1*C1(C1(C1(U))),A,A)><S,1*U>,
     Unfolding: (\ @ a38
                   $dShow :: GHC.Show.Show a38
                   x :: InflectionData.Manifest a38 ->
                 case x of wild {
                   InflectionData.NoManifest -> InflectionData.$fShowManifest25
                   InflectionData.Manifest b1 b2
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                        (GHC.Show.showList__
                           @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                           InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                           b1
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (GHC.Show.showsPrec
                                 @ a38
                                 $dShow
                                 InflectionData.$fReadAgreement5
                                 b2
                                 (GHC.Types.[] @ GHC.Types.Char)))) }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$cshowList ::
    GHC.Show.Show a => [InflectionData.Manifest a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a38
                   $dShow :: GHC.Show.Show a38
                   eta :: [InflectionData.Manifest a38]
                   eta1 :: GHC.Base.String ->
                 GHC.Show.showList__
                   @ (InflectionData.Manifest a38)
                   (InflectionData.$fShowManifest_$cshowsPrec
                      @ a38
                      $dShow
                      InflectionData.$fShowManifest2)
                   eta
                   eta1) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> InflectionData.Manifest a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(1*C1(C1(U)),A,A)><L,1*U(U)><S,1*U>,
     Unfolding: (\ @ a38
                   $dShow :: GHC.Show.Show a38
                   ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest a38 ->
                 case ds1 of wild {
                   InflectionData.NoManifest -> InflectionData.$fShowManifest24
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = GHC.Show.showsPrec
                            @ a38
                            $dShow
                            InflectionData.$fReadAgreement5
                            b2
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> \ x1 :: GHC.Base.String ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (GHC.Show.showList__
                                @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                b1
                                (GHC.Types.: @ GHC.Types.Char GHC.Show.showSpace1 (g x1)))
                        GHC.Types.True
                        -> \ x1 :: GHC.Base.String ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (GHC.Show.showList__
                                   @ (GrammarData.LexCat,
                                      InflectionData.ManifestType,
                                      GHC.Types.Int)
                                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                                   b1
                                   (GHC.Types.:
                                      @ GHC.Types.Char
                                      GHC.Show.showSpace1
                                      (g (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows8
                                            x1))))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Animacy]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Animacy]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Animacy
                                  InflectionData.$w$cshowsPrec6
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec1 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Aspect]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Aspect]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Aspect
                                  InflectionData.$fShowAspect1
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec10 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Person]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Person]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Person
                                     InflectionData.$w$cshowsPrec12
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec11 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Polarity]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Polarity]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Polarity
                                     InflectionData.$fShowManifest20
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec12 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Specificity]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Specificity]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Specificity
                                     InflectionData.$fShowManifest21
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec13 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Tense] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Tense]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Tense
                                     InflectionData.$w$cshowsPrec3
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec14 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Topic] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Topic]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Topic
                                     InflectionData.$fShowManifest22
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec15 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Transitivity]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Transitivity]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Transitivity
                                     InflectionData.$w$cshowsPrec13
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec16 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Voice] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Voice]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Voice
                                     InflectionData.$w$cshowsPrec14
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec17 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Volition]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Volition]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Volition
                                     InflectionData.$fShowManifest23
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec2 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Case] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Case]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Case
                                  InflectionData.$w$cshowsPrec5
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec3 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Clusivity]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Clusivity]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Clusivity
                                  InflectionData.$fShowClusivity1
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec4 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Definiteness]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Definiteness]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Definiteness
                                  InflectionData.$fShowDefiniteness1
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec5 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Evidentiality]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Evidentiality]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Evidentiality
                                  InflectionData.$w$cshowsPrec1
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec6 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Gender]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Gender]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Gender
                                  InflectionData.$w$cshowsPrec7
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec7 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Honorific]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Honorific]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        g :: GHC.Base.String -> GHC.Base.String
                          {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Show.showList__
                            @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                            b1
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.showSpace1
                               (GHC.Show.showList__
                                  @ InflectionData.Honorific
                                  InflectionData.$fShowHonorific1
                                  b2
                                  x1))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                             (g eta)
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (GHC.Base.++
                                @ GHC.Types.Char
                                InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta))) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec8 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Mood] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Mood]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Mood
                                     InflectionData.$w$cshowsPrec2
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
585905e8fe5aabe454e8c831c9719ba2
  $fShowManifest_$s$cshowsPrec9 ::
    GHC.Types.Int
    -> InflectionData.Manifest [InflectionData.Number]
    -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(U)><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Manifest [InflectionData.Number]
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.NoManifest
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest5 eta
                   InflectionData.Manifest b1 b2
                   -> case ds of wild1 { GHC.Types.I# x ->
                      let {
                        p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,U> -}
                        = \ x1 :: GHC.Base.String[OneShot] ->
                          GHC.Base.++
                            @ GHC.Types.Char
                            InflectionData.$fShow(,,,,,,,,,,,,,,,,,)4
                            (GHC.Show.showList__
                               @ (GrammarData.LexCat, InflectionData.ManifestType, GHC.Types.Int)
                               InflectionData.$fShow(,,,,,,,,,,,,,,,,,)3
                               b1
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.showSpace1
                                  (GHC.Show.showList__
                                     @ InflectionData.Number
                                     InflectionData.$w$cshowsPrec4
                                     b2
                                     x1)))
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# x 11) of wild2 {
                        GHC.Types.False -> p eta
                        GHC.Types.True
                        -> GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows9
                             (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 eta)) } } }) -}
89f52f47d857baf59a835f155022c894
  $fShowMood :: GHC.Show.Show InflectionData.Mood
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Mood
                  InflectionData.$fShowMood_$cshowsPrec
                  InflectionData.$fShowMood_$cshow
                  InflectionData.$fShowMood_$cshowList -}
89f52f47d857baf59a835f155022c894
  $fShowMood_$cshow :: InflectionData.Mood -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Mood ->
                 InflectionData.$fShowMood_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
89f52f47d857baf59a835f155022c894
  $fShowMood_$cshowList :: [InflectionData.Mood] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Mood
                   InflectionData.$w$cshowsPrec2) -}
89f52f47d857baf59a835f155022c894
  $fShowMood_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Mood -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Mood
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec2 w1 w2) -}
d524767ed256fd8fb6411842c02ad522
  $fShowNumber :: GHC.Show.Show InflectionData.Number
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Number
                  InflectionData.$fShowNumber_$cshowsPrec
                  InflectionData.$fShowNumber_$cshow
                  InflectionData.$fShowNumber_$cshowList -}
d524767ed256fd8fb6411842c02ad522
  $fShowNumber_$cshow :: InflectionData.Number -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Number ->
                 InflectionData.$fShowNumber_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d524767ed256fd8fb6411842c02ad522
  $fShowNumber_$cshowList ::
    [InflectionData.Number] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Number
                   InflectionData.$w$cshowsPrec4) -}
d524767ed256fd8fb6411842c02ad522
  $fShowNumber_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Number -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Number
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec4 w1 w2) -}
87552d4bd640161dc918422e1f989f36
  $fShowPerson :: GHC.Show.Show InflectionData.Person
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Person
                  InflectionData.$fShowPerson_$cshowsPrec
                  InflectionData.$fShowPerson_$cshow
                  InflectionData.$fShowPerson_$cshowList -}
87552d4bd640161dc918422e1f989f36
  $fShowPerson_$cshow :: InflectionData.Person -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Person ->
                 case x of wild {
                   InflectionData.FIRST -> InflectionData.$fReadManifest105
                   InflectionData.SECOND -> InflectionData.$fReadManifest102
                   InflectionData.THIRD -> InflectionData.$fReadManifest99 }) -}
87552d4bd640161dc918422e1f989f36
  $fShowPerson_$cshowList ::
    [InflectionData.Person] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Person
                   InflectionData.$w$cshowsPrec12) -}
87552d4bd640161dc918422e1f989f36
  $fShowPerson_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Person -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Person
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec12 w1 w2) -}
b165a208777adb6384e8aa49b7841cdc
  $fShowPolarity :: GHC.Show.Show InflectionData.Polarity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Polarity
                  InflectionData.$fShowPolarity_$cshowsPrec
                  InflectionData.$fShowPolarity_$cshow
                  InflectionData.$fShowPolarity_$cshowList -}
b165a208777adb6384e8aa49b7841cdc
  $fShowPolarity_$cshow :: InflectionData.Polarity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Polarity ->
                 case x of wild {
                   InflectionData.AFF -> InflectionData.$fReadManifest117
                   InflectionData.NEG -> InflectionData.$fReadManifest114 }) -}
b165a208777adb6384e8aa49b7841cdc
  $fShowPolarity_$cshowList ::
    [InflectionData.Polarity] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Polarity
                   InflectionData.$fShowManifest20) -}
b165a208777adb6384e8aa49b7841cdc
  $fShowPolarity_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Polarity -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Polarity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.AFF
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest117)
                        eta
                   InflectionData.NEG
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest114)
                        eta }) -}
43df515dcdadd0ea11740b17c269f784
  $fShowSpecificity :: GHC.Show.Show InflectionData.Specificity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Specificity
                  InflectionData.$fShowSpecificity_$cshowsPrec
                  InflectionData.$fShowSpecificity_$cshow
                  InflectionData.$fShowSpecificity_$cshowList -}
43df515dcdadd0ea11740b17c269f784
  $fShowSpecificity_$cshow ::
    InflectionData.Specificity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Specificity ->
                 case x of wild {
                   InflectionData.SPEC -> InflectionData.$fReadManifest129
                   InflectionData.NSPEC -> InflectionData.$fReadManifest126 }) -}
43df515dcdadd0ea11740b17c269f784
  $fShowSpecificity_$cshowList ::
    [InflectionData.Specificity] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Specificity
                   InflectionData.$fShowManifest21) -}
43df515dcdadd0ea11740b17c269f784
  $fShowSpecificity_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Specificity -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Specificity
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.SPEC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest129)
                        eta
                   InflectionData.NSPEC
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest126)
                        eta }) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fShowTense :: GHC.Show.Show InflectionData.Tense
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Tense
                  InflectionData.$fShowTense_$cshowsPrec
                  InflectionData.$fShowTense_$cshow
                  InflectionData.$fShowTense_$cshowList -}
004b6b4805c5a693db94c0d4a7a3616e
  $fShowTense_$cshow :: InflectionData.Tense -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Tense ->
                 InflectionData.$fShowTense_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fShowTense_$cshowList :: [InflectionData.Tense] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Tense
                   InflectionData.$w$cshowsPrec3) -}
004b6b4805c5a693db94c0d4a7a3616e
  $fShowTense_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Tense -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Tense
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec3 w1 w2) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fShowTopic :: GHC.Show.Show InflectionData.Topic
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Topic
                  InflectionData.$fShowTopic_$cshowsPrec
                  InflectionData.$fShowTopic_$cshow
                  InflectionData.$fShowTopic_$cshowList -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fShowTopic_$cshow :: InflectionData.Topic -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Topic ->
                 case x of wild {
                   InflectionData.TOP -> InflectionData.$fReadManifest181
                   InflectionData.NTOP -> InflectionData.$fReadManifest178 }) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fShowTopic_$cshowList :: [InflectionData.Topic] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Topic
                   InflectionData.$fShowManifest22) -}
324933ffc8ee2e478eb9c9c4b97f7e1c
  $fShowTopic_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Topic -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Topic
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.TOP
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest181)
                        eta
                   InflectionData.NTOP
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest178)
                        eta }) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fShowTransitivity :: GHC.Show.Show InflectionData.Transitivity
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Transitivity
                  InflectionData.$fShowTransitivity_$cshowsPrec
                  InflectionData.$fShowTransitivity_$cshow
                  InflectionData.$fShowTransitivity_$cshowList -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fShowTransitivity_$cshow ::
    InflectionData.Transitivity -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Transitivity ->
                 case x of wild {
                   InflectionData.NTRANS -> InflectionData.$fReadManifest197
                   InflectionData.TRANS -> InflectionData.$fReadManifest194
                   InflectionData.DITRANS -> InflectionData.$fReadManifest191 }) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fShowTransitivity_$cshowList ::
    [InflectionData.Transitivity] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Transitivity
                   InflectionData.$w$cshowsPrec13) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $fShowTransitivity_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Transitivity -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Transitivity
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec13 w1 w2) -}
523b90b12350f06385d4da5905742868
  $fShowVoice :: GHC.Show.Show InflectionData.Voice
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Voice
                  InflectionData.$fShowVoice_$cshowsPrec
                  InflectionData.$fShowVoice_$cshow
                  InflectionData.$fShowVoice_$cshowList -}
523b90b12350f06385d4da5905742868
  $fShowVoice_$cshow :: InflectionData.Voice -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Voice ->
                 case x of wild {
                   InflectionData.ACTIVE -> InflectionData.$fReadManifest213
                   InflectionData.MIDDLE -> InflectionData.$fReadManifest210
                   InflectionData.PASSIVE -> InflectionData.$fReadManifest207 }) -}
523b90b12350f06385d4da5905742868
  $fShowVoice_$cshowList :: [InflectionData.Voice] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Voice
                   InflectionData.$w$cshowsPrec14) -}
523b90b12350f06385d4da5905742868
  $fShowVoice_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Voice -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ w :: GHC.Types.Int
                   w1 :: InflectionData.Voice
                   w2 :: GHC.Base.String ->
                 InflectionData.$w$cshowsPrec14 w1 w2) -}
79163f2537538d5ab28ad5d835b8900a
  $fShowVolition :: GHC.Show.Show InflectionData.Volition
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ InflectionData.Volition
                  InflectionData.$fShowVolition_$cshowsPrec
                  InflectionData.$fShowVolition_$cshow
                  InflectionData.$fShowVolition_$cshowList -}
79163f2537538d5ab28ad5d835b8900a
  $fShowVolition_$cshow :: InflectionData.Volition -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: InflectionData.Volition ->
                 case x of wild {
                   InflectionData.VOL -> InflectionData.$fReadManifest225
                   InflectionData.NVOL -> InflectionData.$fReadManifest222 }) -}
79163f2537538d5ab28ad5d835b8900a
  $fShowVolition_$cshowList ::
    [InflectionData.Volition] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ InflectionData.Volition
                   InflectionData.$fShowManifest23) -}
79163f2537538d5ab28ad5d835b8900a
  $fShowVolition_$cshowsPrec ::
    GHC.Types.Int -> InflectionData.Volition -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ ds :: GHC.Types.Int
                   ds1 :: InflectionData.Volition
                   eta :: GHC.Base.String ->
                 case ds1 of wild {
                   InflectionData.VOL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest225)
                        eta
                   InflectionData.NVOL
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b c :: GHC.Types.Char -> b -> b[OneShot] n :: b[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c
                           n
                           InflectionData.$fReadManifest222)
                        eta }) -}
8607047241b3266cc7c3119e996b5e23
  $s$dmshow47 ::
    (InflectionData.Manifest InflectionData.Gender,
     InflectionData.Manifest InflectionData.Animacy,
     InflectionData.Manifest InflectionData.Case,
     InflectionData.Manifest InflectionData.Number,
     InflectionData.Manifest InflectionData.Definiteness,
     InflectionData.Manifest InflectionData.Specificity,
     InflectionData.Manifest InflectionData.Topic,
     InflectionData.Manifest InflectionData.Person,
     InflectionData.Manifest InflectionData.Clusivity,
     InflectionData.Manifest InflectionData.Honorific,
     InflectionData.Manifest InflectionData.Polarity,
     InflectionData.Manifest InflectionData.Tense,
     InflectionData.Manifest InflectionData.Aspect,
     InflectionData.Manifest InflectionData.Mood,
     InflectionData.Manifest InflectionData.Voice,
     InflectionData.Manifest InflectionData.Evidentiality,
     InflectionData.Manifest InflectionData.Transitivity,
     InflectionData.Manifest InflectionData.Volition)
    -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition) ->
                 case w of ww { (,,,,,,,,,,,,,,,,,) ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ww16 ww17 ww18 ->
                 InflectionData.$w$s$cshowsPrec
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   ww16
                   ww17
                   ww18 }) -}
fcaf73c0209bc537fa01600d2542087f
  $w$c== ::
    (GHC.Classes.Eq a, GHC.Classes.Eq b, GHC.Classes.Eq c,
     GHC.Classes.Eq d, GHC.Classes.Eq e, GHC.Classes.Eq f,
     GHC.Classes.Eq g, GHC.Classes.Eq h, GHC.Classes.Eq i,
     GHC.Classes.Eq j, GHC.Classes.Eq k, GHC.Classes.Eq l,
     GHC.Classes.Eq m, GHC.Classes.Eq n, GHC.Classes.Eq o,
     GHC.Classes.Eq p, GHC.Classes.Eq q, GHC.Classes.Eq r) =>
    a
    -> b
    -> c
    -> d
    -> e
    -> f
    -> g
    -> h
    -> i
    -> j
    -> k
    -> l
    -> m
    -> n
    -> o
    -> p
    -> q
    -> r
    -> a
    -> b
    -> c
    -> d
    -> e
    -> f
    -> g
    -> h
    -> i
    -> j
    -> k
    -> l
    -> m
    -> n
    -> o
    -> p
    -> q
    -> r
    -> GHC.Types.Bool
  {- Arity: 54, HasNoCafRefs,
     Strictness: <S(C(C(S))L),1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,1*U(1*C1(C1(U)),A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
e76f599166992b9f52cdc09ef2c9aa6b
  $w$c==1 ::
    GrammarData.LexCat
    -> GrammarData.LexCat
    -> GrammarData.LexCat
    -> GrammarData.LexCat
    -> GHC.Types.Bool
  {- Arity: 4, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ ww :: GrammarData.LexCat
                   ww1 :: GrammarData.LexCat
                   ww2 :: GrammarData.LexCat
                   ww3 :: GrammarData.LexCat ->
                 case ww of wild {
                   GrammarData.Comp
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Comp -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Infl
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Infl -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Verb
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Verb -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Det
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Det -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Noun
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Noun -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Adpo
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Adpo -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Adj
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Adj -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Adv
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Adv -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Obj
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Obj -> GrammarData.$fEqLexCat_$c== ww1 ww3 }
                   GrammarData.Subj
                   -> case ww2 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Subj -> GrammarData.$fEqLexCat_$c== ww1 ww3 } }) -}
740be181c3b988117f684bfaf80ab094
  $w$c==2 ::
    InflectionData.Manifest [InflectionData.Gender]
    -> InflectionData.Manifest [InflectionData.Animacy]
    -> InflectionData.Manifest [InflectionData.Case]
    -> InflectionData.Manifest [InflectionData.Number]
    -> InflectionData.Manifest [InflectionData.Definiteness]
    -> InflectionData.Manifest [InflectionData.Specificity]
    -> InflectionData.Manifest [InflectionData.Topic]
    -> InflectionData.Manifest [InflectionData.Person]
    -> InflectionData.Manifest [InflectionData.Clusivity]
    -> InflectionData.Manifest [InflectionData.Honorific]
    -> InflectionData.Manifest [InflectionData.Polarity]
    -> InflectionData.Manifest [InflectionData.Tense]
    -> InflectionData.Manifest [InflectionData.Aspect]
    -> InflectionData.Manifest [InflectionData.Mood]
    -> InflectionData.Manifest [InflectionData.Voice]
    -> InflectionData.Manifest [InflectionData.Evidentiality]
    -> InflectionData.Manifest [InflectionData.Transitivity]
    -> InflectionData.Manifest [InflectionData.Volition]
    -> InflectionData.Manifest [InflectionData.Gender]
    -> InflectionData.Manifest [InflectionData.Animacy]
    -> InflectionData.Manifest [InflectionData.Case]
    -> InflectionData.Manifest [InflectionData.Number]
    -> InflectionData.Manifest [InflectionData.Definiteness]
    -> InflectionData.Manifest [InflectionData.Specificity]
    -> InflectionData.Manifest [InflectionData.Topic]
    -> InflectionData.Manifest [InflectionData.Person]
    -> InflectionData.Manifest [InflectionData.Clusivity]
    -> InflectionData.Manifest [InflectionData.Honorific]
    -> InflectionData.Manifest [InflectionData.Polarity]
    -> InflectionData.Manifest [InflectionData.Tense]
    -> InflectionData.Manifest [InflectionData.Aspect]
    -> InflectionData.Manifest [InflectionData.Mood]
    -> InflectionData.Manifest [InflectionData.Voice]
    -> InflectionData.Manifest [InflectionData.Evidentiality]
    -> InflectionData.Manifest [InflectionData.Transitivity]
    -> InflectionData.Manifest [InflectionData.Volition]
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
b9fedda701c078a812786280ef3858b0
  $w$c==3 ::
    GrammarData.LexCat
    -> InflectionData.ManifestType
    -> [(PhonemeData.Morpheme,
         (InflectionData.Manifest InflectionData.Gender,
          InflectionData.Manifest InflectionData.Animacy,
          InflectionData.Manifest InflectionData.Case,
          InflectionData.Manifest InflectionData.Number,
          InflectionData.Manifest InflectionData.Definiteness,
          InflectionData.Manifest InflectionData.Specificity,
          InflectionData.Manifest InflectionData.Topic,
          InflectionData.Manifest InflectionData.Person,
          InflectionData.Manifest InflectionData.Clusivity,
          InflectionData.Manifest InflectionData.Honorific,
          InflectionData.Manifest InflectionData.Polarity,
          InflectionData.Manifest InflectionData.Tense,
          InflectionData.Manifest InflectionData.Aspect,
          InflectionData.Manifest InflectionData.Mood,
          InflectionData.Manifest InflectionData.Voice,
          InflectionData.Manifest InflectionData.Evidentiality,
          InflectionData.Manifest InflectionData.Transitivity,
          InflectionData.Manifest InflectionData.Volition))]
    -> GrammarData.LexCat
    -> InflectionData.ManifestType
    -> [(PhonemeData.Morpheme,
         (InflectionData.Manifest InflectionData.Gender,
          InflectionData.Manifest InflectionData.Animacy,
          InflectionData.Manifest InflectionData.Case,
          InflectionData.Manifest InflectionData.Number,
          InflectionData.Manifest InflectionData.Definiteness,
          InflectionData.Manifest InflectionData.Specificity,
          InflectionData.Manifest InflectionData.Topic,
          InflectionData.Manifest InflectionData.Person,
          InflectionData.Manifest InflectionData.Clusivity,
          InflectionData.Manifest InflectionData.Honorific,
          InflectionData.Manifest InflectionData.Polarity,
          InflectionData.Manifest InflectionData.Tense,
          InflectionData.Manifest InflectionData.Aspect,
          InflectionData.Manifest InflectionData.Mood,
          InflectionData.Manifest InflectionData.Voice,
          InflectionData.Manifest InflectionData.Evidentiality,
          InflectionData.Manifest InflectionData.Transitivity,
          InflectionData.Manifest InflectionData.Volition))]
    -> GHC.Types.Bool
  {- Arity: 6, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U>,
     Inline: [0],
     Unfolding: (\ ww :: GrammarData.LexCat
                   ww1 :: InflectionData.ManifestType
                   ww2 :: [(PhonemeData.Morpheme,
                            (InflectionData.Manifest InflectionData.Gender,
                             InflectionData.Manifest InflectionData.Animacy,
                             InflectionData.Manifest InflectionData.Case,
                             InflectionData.Manifest InflectionData.Number,
                             InflectionData.Manifest InflectionData.Definiteness,
                             InflectionData.Manifest InflectionData.Specificity,
                             InflectionData.Manifest InflectionData.Topic,
                             InflectionData.Manifest InflectionData.Person,
                             InflectionData.Manifest InflectionData.Clusivity,
                             InflectionData.Manifest InflectionData.Honorific,
                             InflectionData.Manifest InflectionData.Polarity,
                             InflectionData.Manifest InflectionData.Tense,
                             InflectionData.Manifest InflectionData.Aspect,
                             InflectionData.Manifest InflectionData.Mood,
                             InflectionData.Manifest InflectionData.Voice,
                             InflectionData.Manifest InflectionData.Evidentiality,
                             InflectionData.Manifest InflectionData.Transitivity,
                             InflectionData.Manifest InflectionData.Volition))]
                   ww3 :: GrammarData.LexCat
                   ww4 :: InflectionData.ManifestType
                   ww5 :: [(PhonemeData.Morpheme,
                            (InflectionData.Manifest InflectionData.Gender,
                             InflectionData.Manifest InflectionData.Animacy,
                             InflectionData.Manifest InflectionData.Case,
                             InflectionData.Manifest InflectionData.Number,
                             InflectionData.Manifest InflectionData.Definiteness,
                             InflectionData.Manifest InflectionData.Specificity,
                             InflectionData.Manifest InflectionData.Topic,
                             InflectionData.Manifest InflectionData.Person,
                             InflectionData.Manifest InflectionData.Clusivity,
                             InflectionData.Manifest InflectionData.Honorific,
                             InflectionData.Manifest InflectionData.Polarity,
                             InflectionData.Manifest InflectionData.Tense,
                             InflectionData.Manifest InflectionData.Aspect,
                             InflectionData.Manifest InflectionData.Mood,
                             InflectionData.Manifest InflectionData.Voice,
                             InflectionData.Manifest InflectionData.Evidentiality,
                             InflectionData.Manifest InflectionData.Transitivity,
                             InflectionData.Manifest InflectionData.Volition))] ->
                 let {
                   $j :: GHC.Prim.Void# -> GHC.Types.Bool
                     {- Arity: 1, Strictness: <L,A> -}
                   = \ w :: GHC.Prim.Void#[OneShot] ->
                     case ww1 of wild {
                       InflectionData.PreParticle
                       -> case ww4 of wild1 {
                            DEFAULT -> GHC.Types.False
                            InflectionData.PreParticle
                            -> GHC.Classes.$fEq[]_$c==
                                 @ (PhonemeData.Morpheme,
                                    (InflectionData.Manifest InflectionData.Gender,
                                     InflectionData.Manifest InflectionData.Animacy,
                                     InflectionData.Manifest InflectionData.Case,
                                     InflectionData.Manifest InflectionData.Number,
                                     InflectionData.Manifest InflectionData.Definiteness,
                                     InflectionData.Manifest InflectionData.Specificity,
                                     InflectionData.Manifest InflectionData.Topic,
                                     InflectionData.Manifest InflectionData.Person,
                                     InflectionData.Manifest InflectionData.Clusivity,
                                     InflectionData.Manifest InflectionData.Honorific,
                                     InflectionData.Manifest InflectionData.Polarity,
                                     InflectionData.Manifest InflectionData.Tense,
                                     InflectionData.Manifest InflectionData.Aspect,
                                     InflectionData.Manifest InflectionData.Mood,
                                     InflectionData.Manifest InflectionData.Voice,
                                     InflectionData.Manifest InflectionData.Evidentiality,
                                     InflectionData.Manifest InflectionData.Transitivity,
                                     InflectionData.Manifest InflectionData.Volition))
                                 InflectionData.$fEqManifestSystem_$s$fEq(,)
                                 ww2
                                 ww5 }
                       InflectionData.Prefix
                       -> case ww4 of wild1 {
                            DEFAULT -> GHC.Types.False
                            InflectionData.Prefix
                            -> GHC.Classes.$fEq[]_$c==
                                 @ (PhonemeData.Morpheme,
                                    (InflectionData.Manifest InflectionData.Gender,
                                     InflectionData.Manifest InflectionData.Animacy,
                                     InflectionData.Manifest InflectionData.Case,
                                     InflectionData.Manifest InflectionData.Number,
                                     InflectionData.Manifest InflectionData.Definiteness,
                                     InflectionData.Manifest InflectionData.Specificity,
                                     InflectionData.Manifest InflectionData.Topic,
                                     InflectionData.Manifest InflectionData.Person,
                                     InflectionData.Manifest InflectionData.Clusivity,
                                     InflectionData.Manifest InflectionData.Honorific,
                                     InflectionData.Manifest InflectionData.Polarity,
                                     InflectionData.Manifest InflectionData.Tense,
                                     InflectionData.Manifest InflectionData.Aspect,
                                     InflectionData.Manifest InflectionData.Mood,
                                     InflectionData.Manifest InflectionData.Voice,
                                     InflectionData.Manifest InflectionData.Evidentiality,
                                     InflectionData.Manifest InflectionData.Transitivity,
                                     InflectionData.Manifest InflectionData.Volition))
                                 InflectionData.$fEqManifestSystem_$s$fEq(,)
                                 ww2
                                 ww5 }
                       InflectionData.Suffix
                       -> case ww4 of wild1 {
                            DEFAULT -> GHC.Types.False
                            InflectionData.Suffix
                            -> GHC.Classes.$fEq[]_$c==
                                 @ (PhonemeData.Morpheme,
                                    (InflectionData.Manifest InflectionData.Gender,
                                     InflectionData.Manifest InflectionData.Animacy,
                                     InflectionData.Manifest InflectionData.Case,
                                     InflectionData.Manifest InflectionData.Number,
                                     InflectionData.Manifest InflectionData.Definiteness,
                                     InflectionData.Manifest InflectionData.Specificity,
                                     InflectionData.Manifest InflectionData.Topic,
                                     InflectionData.Manifest InflectionData.Person,
                                     InflectionData.Manifest InflectionData.Clusivity,
                                     InflectionData.Manifest InflectionData.Honorific,
                                     InflectionData.Manifest InflectionData.Polarity,
                                     InflectionData.Manifest InflectionData.Tense,
                                     InflectionData.Manifest InflectionData.Aspect,
                                     InflectionData.Manifest InflectionData.Mood,
                                     InflectionData.Manifest InflectionData.Voice,
                                     InflectionData.Manifest InflectionData.Evidentiality,
                                     InflectionData.Manifest InflectionData.Transitivity,
                                     InflectionData.Manifest InflectionData.Volition))
                                 InflectionData.$fEqManifestSystem_$s$fEq(,)
                                 ww2
                                 ww5 }
                       InflectionData.PostParticle
                       -> case ww4 of wild1 {
                            DEFAULT -> GHC.Types.False
                            InflectionData.PostParticle
                            -> GHC.Classes.$fEq[]_$c==
                                 @ (PhonemeData.Morpheme,
                                    (InflectionData.Manifest InflectionData.Gender,
                                     InflectionData.Manifest InflectionData.Animacy,
                                     InflectionData.Manifest InflectionData.Case,
                                     InflectionData.Manifest InflectionData.Number,
                                     InflectionData.Manifest InflectionData.Definiteness,
                                     InflectionData.Manifest InflectionData.Specificity,
                                     InflectionData.Manifest InflectionData.Topic,
                                     InflectionData.Manifest InflectionData.Person,
                                     InflectionData.Manifest InflectionData.Clusivity,
                                     InflectionData.Manifest InflectionData.Honorific,
                                     InflectionData.Manifest InflectionData.Polarity,
                                     InflectionData.Manifest InflectionData.Tense,
                                     InflectionData.Manifest InflectionData.Aspect,
                                     InflectionData.Manifest InflectionData.Mood,
                                     InflectionData.Manifest InflectionData.Voice,
                                     InflectionData.Manifest InflectionData.Evidentiality,
                                     InflectionData.Manifest InflectionData.Transitivity,
                                     InflectionData.Manifest InflectionData.Volition))
                                 InflectionData.$fEqManifestSystem_$s$fEq(,)
                                 ww2
                                 ww5 } }
                 } in
                 case ww of wild {
                   GrammarData.Comp
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Comp -> $j GHC.Prim.void# }
                   GrammarData.Infl
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Infl -> $j GHC.Prim.void# }
                   GrammarData.Verb
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Verb -> $j GHC.Prim.void# }
                   GrammarData.Det
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Det -> $j GHC.Prim.void# }
                   GrammarData.Noun
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Noun -> $j GHC.Prim.void# }
                   GrammarData.Adpo
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Adpo -> $j GHC.Prim.void# }
                   GrammarData.Adj
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Adj -> $j GHC.Prim.void# }
                   GrammarData.Adv
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Adv -> $j GHC.Prim.void# }
                   GrammarData.Obj
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Obj -> $j GHC.Prim.void# }
                   GrammarData.Subj
                   -> case ww3 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Subj -> $j GHC.Prim.void# } }) -}
d4d7fe6a7722743af73d0848be830e04
  $w$cshowsPrec ::
    InflectionData.ManifestType -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.ManifestType
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.PreParticle
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifestType19
                        w1
                   InflectionData.Prefix
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifestType16
                        w1
                   InflectionData.Suffix
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifestType13
                        w1
                   InflectionData.PostParticle
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifestType10
                        w1 }) -}
72f49e3daffb56d4bf46854dab7a01ee
  $w$cshowsPrec1 ::
    InflectionData.Evidentiality -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Evidentiality
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.EXP
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality39
                        w1
                   InflectionData.VIS
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality36
                        w1
                   InflectionData.NVIS
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality33
                        w1
                   InflectionData.AUD
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality30
                        w1
                   InflectionData.INFER
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality27
                        w1
                   InflectionData.REP
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality24
                        w1
                   InflectionData.HSY
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality21
                        w1
                   InflectionData.QUO
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality18
                        w1
                   InflectionData.ASS
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadEvidentiality15
                        w1 }) -}
2b85480bebe13580aa04571f5b01a69d
  $w$cshowsPrec10 ::
    GHC.Prim.Int#
    -> [InflectionData.Agreement] -> GHC.Base.String -> GHC.Base.String
  {- Arity: 3, Strictness: <L,U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: [InflectionData.Agreement]
                   w :: GHC.Base.String ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fShowAgreementSystem2
                        (GHC.Show.showList__
                           @ InflectionData.Agreement
                           InflectionData.$fShowAgreement1
                           ww1
                           w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           InflectionData.$fShowAgreementSystem2
                           (GHC.Show.showList__
                              @ InflectionData.Agreement
                              InflectionData.$fShowAgreement1
                              ww1
                              (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w))) }) -}
5527b6ffaef2e006795fe42b8ee84e8c
  $w$cshowsPrec11 ::
    GHC.Prim.Int#
    -> InflectionData.Manifest [InflectionData.Gender]
    -> InflectionData.Manifest [InflectionData.Animacy]
    -> InflectionData.Manifest [InflectionData.Case]
    -> InflectionData.Manifest [InflectionData.Number]
    -> InflectionData.Manifest [InflectionData.Definiteness]
    -> InflectionData.Manifest [InflectionData.Specificity]
    -> InflectionData.Manifest [InflectionData.Topic]
    -> InflectionData.Manifest [InflectionData.Person]
    -> InflectionData.Manifest [InflectionData.Clusivity]
    -> InflectionData.Manifest [InflectionData.Honorific]
    -> InflectionData.Manifest [InflectionData.Polarity]
    -> InflectionData.Manifest [InflectionData.Tense]
    -> InflectionData.Manifest [InflectionData.Aspect]
    -> InflectionData.Manifest [InflectionData.Mood]
    -> InflectionData.Manifest [InflectionData.Voice]
    -> InflectionData.Manifest [InflectionData.Evidentiality]
    -> InflectionData.Manifest [InflectionData.Transitivity]
    -> InflectionData.Manifest [InflectionData.Volition]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 20,
     Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
87552d4bd640161dc918422e1f989f36
  $w$cshowsPrec12 ::
    InflectionData.Person -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Person w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.FIRST
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest105 w1
                   InflectionData.SECOND
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest102 w1
                   InflectionData.THIRD
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest99
                        w1 }) -}
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  $w$cshowsPrec13 ::
    InflectionData.Transitivity -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Transitivity
                   w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.NTRANS
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest197 w1
                   InflectionData.TRANS
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest194 w1
                   InflectionData.DITRANS
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest191
                        w1 }) -}
523b90b12350f06385d4da5905742868
  $w$cshowsPrec14 ::
    InflectionData.Voice -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Voice w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.ACTIVE
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest213 w1
                   InflectionData.MIDDLE
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest210 w1
                   InflectionData.PASSIVE
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest207
                        w1 }) -}
28d346924866c074bf1a47c3e3c569b8
  $w$cshowsPrec15 ::
    GHC.Prim.Int#
    -> GrammarData.LexCat
    -> InflectionData.ManifestType
    -> [(PhonemeData.Morpheme,
         (InflectionData.Manifest InflectionData.Gender,
          InflectionData.Manifest InflectionData.Animacy,
          InflectionData.Manifest InflectionData.Case,
          InflectionData.Manifest InflectionData.Number,
          InflectionData.Manifest InflectionData.Definiteness,
          InflectionData.Manifest InflectionData.Specificity,
          InflectionData.Manifest InflectionData.Topic,
          InflectionData.Manifest InflectionData.Person,
          InflectionData.Manifest InflectionData.Clusivity,
          InflectionData.Manifest InflectionData.Honorific,
          InflectionData.Manifest InflectionData.Polarity,
          InflectionData.Manifest InflectionData.Tense,
          InflectionData.Manifest InflectionData.Aspect,
          InflectionData.Manifest InflectionData.Mood,
          InflectionData.Manifest InflectionData.Voice,
          InflectionData.Manifest InflectionData.Evidentiality,
          InflectionData.Manifest InflectionData.Transitivity,
          InflectionData.Manifest InflectionData.Volition))]
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GrammarData.LexCat
                   ww2 :: InflectionData.ManifestType
                   ww3 :: [(PhonemeData.Morpheme,
                            (InflectionData.Manifest InflectionData.Gender,
                             InflectionData.Manifest InflectionData.Animacy,
                             InflectionData.Manifest InflectionData.Case,
                             InflectionData.Manifest InflectionData.Number,
                             InflectionData.Manifest InflectionData.Definiteness,
                             InflectionData.Manifest InflectionData.Specificity,
                             InflectionData.Manifest InflectionData.Topic,
                             InflectionData.Manifest InflectionData.Person,
                             InflectionData.Manifest InflectionData.Clusivity,
                             InflectionData.Manifest InflectionData.Honorific,
                             InflectionData.Manifest InflectionData.Polarity,
                             InflectionData.Manifest InflectionData.Tense,
                             InflectionData.Manifest InflectionData.Aspect,
                             InflectionData.Manifest InflectionData.Mood,
                             InflectionData.Manifest InflectionData.Voice,
                             InflectionData.Manifest InflectionData.Evidentiality,
                             InflectionData.Manifest InflectionData.Transitivity,
                             InflectionData.Manifest InflectionData.Volition))]
                   w :: GHC.Base.String ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                     {- Arity: 1, Strictness: <L,U> -}
                   = \ x :: GHC.Base.String[OneShot] ->
                     GrammarData.$w$cshowsPrec4
                       ww1
                       (GHC.Types.:
                          @ GHC.Types.Char
                          GHC.Show.showSpace1
                          (InflectionData.$w$cshowsPrec
                             ww2
                             (GHC.Types.:
                                @ GHC.Types.Char
                                GHC.Show.showSpace1
                                (InflectionData.$fShowManifestSystem_$s$fShow(,)_$cshowList
                                   ww3
                                   x))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fShowManifestSystem2
                        (g w)
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           InflectionData.$fShowManifestSystem2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w))) }) -}
89f52f47d857baf59a835f155022c894
  $w$cshowsPrec2 ::
    InflectionData.Mood -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Mood w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.IND
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest65 w1
                   InflectionData.IRR
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest62 w1
                   InflectionData.DEO
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest59 w1
                   InflectionData.IMP
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest56 w1
                   InflectionData.JUS
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest53 w1
                   InflectionData.OPT
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest50 w1
                   InflectionData.EPIS
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest47 w1
                   InflectionData.SBJV
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest44 w1
                   InflectionData.POT
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest41 w1
                   InflectionData.COND
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest38
                        w1 }) -}
004b6b4805c5a693db94c0d4a7a3616e
  $w$cshowsPrec3 ::
    InflectionData.Tense -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Tense w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.PST
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest169 w1
                   InflectionData.REM
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest166 w1
                   InflectionData.REC
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest163 w1
                   InflectionData.NPST
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest160 w1
                   InflectionData.PRS
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest157 w1
                   InflectionData.NFUT
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest154 w1
                   InflectionData.FUT
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest151 w1
                   InflectionData.IMMF
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest148 w1
                   InflectionData.REMF
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest145
                        w1 }) -}
d524767ed256fd8fb6411842c02ad522
  $w$cshowsPrec4 ::
    InflectionData.Number -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Number w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.SG
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest89 w1
                   InflectionData.DU
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest86 w1
                   InflectionData.TRI
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest83 w1
                   InflectionData.PA
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadManifest80 w1
                   InflectionData.PL
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadManifest77
                        w1 }) -}
fe9f4ca1606b5f19f2230e1deea3d046
  $w$cshowsPrec5 ::
    InflectionData.Case -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0] -}
cedf9e666cdb6656f2a2a96d2d3bd589
  $w$cshowsPrec6 ::
    InflectionData.Animacy -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Animacy w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.AN
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadAnimacy23 w1
                   InflectionData.HUM
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadAnimacy20 w1
                   InflectionData.NHUM
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadAnimacy17 w1
                   InflectionData.ZO
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadAnimacy14 w1
                   InflectionData.INAN
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadAnimacy11
                        w1 }) -}
bea847055a51c2d8a5a4f43d44b03253
  $w$cshowsPrec7 ::
    InflectionData.Gender -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ w :: InflectionData.Gender w1 :: GHC.Base.String ->
                 case w of wild {
                   InflectionData.M
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadGender19 w1
                   InflectionData.F
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadGender16 w1
                   InflectionData.COM
                   -> GHC.Base.++ @ GHC.Types.Char InflectionData.$fReadGender13 w1
                   InflectionData.N
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fReadGender10
                        w1 }) -}
6ddcb2ad1d03ff90bed9194dae51837d
  $w$cshowsPrec8 ::
    (GHC.Show.Show a, GHC.Show.Show b, GHC.Show.Show c,
     GHC.Show.Show d, GHC.Show.Show e, GHC.Show.Show f, GHC.Show.Show g,
     GHC.Show.Show h, GHC.Show.Show i, GHC.Show.Show j, GHC.Show.Show k,
     GHC.Show.Show l, GHC.Show.Show m, GHC.Show.Show n, GHC.Show.Show o,
     GHC.Show.Show p, GHC.Show.Show q, GHC.Show.Show r) =>
    a
    -> b
    -> c
    -> d
    -> e
    -> f
    -> g
    -> h
    -> i
    -> j
    -> k
    -> l
    -> m
    -> n
    -> o
    -> p
    -> q
    -> r
    -> GHC.Show.ShowS
  {- Arity: 36,
     Strictness: <L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,1*U(1*C1(C1(U)),A,A)><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0] -}
0f10977e1ef9523b1a2281ed80048de0
  $w$cshowsPrec9 ::
    GHC.Prim.Int#
    -> GrammarData.LexCat
    -> GrammarData.LexCat
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 4, Strictness: <L,U><L,1*U><L,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GrammarData.LexCat
                   ww2 :: GrammarData.LexCat
                   w :: GHC.Base.String ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        InflectionData.$fShowAgreement2
                        (GrammarData.$w$cshowsPrec4
                           ww1
                           (GHC.Types.:
                              @ GHC.Types.Char
                              GHC.Show.showSpace1
                              (GrammarData.$w$cshowsPrec4 ww2 w)))
                   GHC.Types.True
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (GHC.Base.++
                           @ GHC.Types.Char
                           InflectionData.$fShowAgreement2
                           (GrammarData.$w$cshowsPrec4
                              ww1
                              (GHC.Types.:
                                 @ GHC.Types.Char
                                 GHC.Show.showSpace1
                                 (GrammarData.$w$cshowsPrec4
                                    ww2
                                    (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 w))))) }) -}
5d2bfb3c09bfaee857c3a8dcdc85ff51
  $w$s$c== ::
    InflectionData.Manifest InflectionData.Gender
    -> InflectionData.Manifest InflectionData.Animacy
    -> InflectionData.Manifest InflectionData.Case
    -> InflectionData.Manifest InflectionData.Number
    -> InflectionData.Manifest InflectionData.Definiteness
    -> InflectionData.Manifest InflectionData.Specificity
    -> InflectionData.Manifest InflectionData.Topic
    -> InflectionData.Manifest InflectionData.Person
    -> InflectionData.Manifest InflectionData.Clusivity
    -> InflectionData.Manifest InflectionData.Honorific
    -> InflectionData.Manifest InflectionData.Polarity
    -> InflectionData.Manifest InflectionData.Tense
    -> InflectionData.Manifest InflectionData.Aspect
    -> InflectionData.Manifest InflectionData.Mood
    -> InflectionData.Manifest InflectionData.Voice
    -> InflectionData.Manifest InflectionData.Evidentiality
    -> InflectionData.Manifest InflectionData.Transitivity
    -> InflectionData.Manifest InflectionData.Volition
    -> InflectionData.Manifest InflectionData.Gender
    -> InflectionData.Manifest InflectionData.Animacy
    -> InflectionData.Manifest InflectionData.Case
    -> InflectionData.Manifest InflectionData.Number
    -> InflectionData.Manifest InflectionData.Definiteness
    -> InflectionData.Manifest InflectionData.Specificity
    -> InflectionData.Manifest InflectionData.Topic
    -> InflectionData.Manifest InflectionData.Person
    -> InflectionData.Manifest InflectionData.Clusivity
    -> InflectionData.Manifest InflectionData.Honorific
    -> InflectionData.Manifest InflectionData.Polarity
    -> InflectionData.Manifest InflectionData.Tense
    -> InflectionData.Manifest InflectionData.Aspect
    -> InflectionData.Manifest InflectionData.Mood
    -> InflectionData.Manifest InflectionData.Voice
    -> InflectionData.Manifest InflectionData.Evidentiality
    -> InflectionData.Manifest InflectionData.Transitivity
    -> InflectionData.Manifest InflectionData.Volition
    -> GHC.Types.Bool
  {- Arity: 36, HasNoCafRefs,
     Strictness: <S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><S,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U>,
     Inline: [0] -}
11384988a97b2140d163d63926bde3ec
  $w$s$cshowsPrec ::
    InflectionData.Manifest InflectionData.Gender
    -> InflectionData.Manifest InflectionData.Animacy
    -> InflectionData.Manifest InflectionData.Case
    -> InflectionData.Manifest InflectionData.Number
    -> InflectionData.Manifest InflectionData.Definiteness
    -> InflectionData.Manifest InflectionData.Specificity
    -> InflectionData.Manifest InflectionData.Topic
    -> InflectionData.Manifest InflectionData.Person
    -> InflectionData.Manifest InflectionData.Clusivity
    -> InflectionData.Manifest InflectionData.Honorific
    -> InflectionData.Manifest InflectionData.Polarity
    -> InflectionData.Manifest InflectionData.Tense
    -> InflectionData.Manifest InflectionData.Aspect
    -> InflectionData.Manifest InflectionData.Mood
    -> InflectionData.Manifest InflectionData.Voice
    -> InflectionData.Manifest InflectionData.Evidentiality
    -> InflectionData.Manifest InflectionData.Transitivity
    -> InflectionData.Manifest InflectionData.Volition
    -> GHC.Show.ShowS
  {- Arity: 18,
     Strictness: <L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ ww :: InflectionData.Manifest InflectionData.Gender
                   ww1 :: InflectionData.Manifest InflectionData.Animacy
                   ww2 :: InflectionData.Manifest InflectionData.Case
                   ww3 :: InflectionData.Manifest InflectionData.Number
                   ww4 :: InflectionData.Manifest InflectionData.Definiteness
                   ww5 :: InflectionData.Manifest InflectionData.Specificity
                   ww6 :: InflectionData.Manifest InflectionData.Topic
                   ww7 :: InflectionData.Manifest InflectionData.Person
                   ww8 :: InflectionData.Manifest InflectionData.Clusivity
                   ww9 :: InflectionData.Manifest InflectionData.Honorific
                   ww10 :: InflectionData.Manifest InflectionData.Polarity
                   ww11 :: InflectionData.Manifest InflectionData.Tense
                   ww12 :: InflectionData.Manifest InflectionData.Aspect
                   ww13 :: InflectionData.Manifest InflectionData.Mood
                   ww14 :: InflectionData.Manifest InflectionData.Voice
                   ww15 :: InflectionData.Manifest InflectionData.Evidentiality
                   ww16 :: InflectionData.Manifest InflectionData.Transitivity
                   ww17 :: InflectionData.Manifest InflectionData.Volition ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_go
                       (GHC.Types.:
                          @ GHC.Show.ShowS
                          (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec18
                             GHC.Show.shows18
                             ww)
                          (GHC.Types.:
                             @ GHC.Show.ShowS
                             (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec17
                                GHC.Show.shows18
                                ww1)
                             (GHC.Types.:
                                @ GHC.Show.ShowS
                                (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec16
                                   GHC.Show.shows18
                                   ww2)
                                (GHC.Types.:
                                   @ GHC.Show.ShowS
                                   (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec15
                                      GHC.Show.shows18
                                      ww3)
                                   (GHC.Types.:
                                      @ GHC.Show.ShowS
                                      (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec14
                                         GHC.Show.shows18
                                         ww4)
                                      (GHC.Types.:
                                         @ GHC.Show.ShowS
                                         (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec13
                                            GHC.Show.shows18
                                            ww5)
                                         (GHC.Types.:
                                            @ GHC.Show.ShowS
                                            (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec12
                                               GHC.Show.shows18
                                               ww6)
                                            (GHC.Types.:
                                               @ GHC.Show.ShowS
                                               (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec11
                                                  GHC.Show.shows18
                                                  ww7)
                                               (GHC.Types.:
                                                  @ GHC.Show.ShowS
                                                  (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec10
                                                     GHC.Show.shows18
                                                     ww8)
                                                  (GHC.Types.:
                                                     @ GHC.Show.ShowS
                                                     (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec9
                                                        GHC.Show.shows18
                                                        ww9)
                                                     (GHC.Types.:
                                                        @ GHC.Show.ShowS
                                                        (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec8
                                                           GHC.Show.shows18
                                                           ww10)
                                                        (GHC.Types.:
                                                           @ GHC.Show.ShowS
                                                           (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec7
                                                              GHC.Show.shows18
                                                              ww11)
                                                           (GHC.Types.:
                                                              @ GHC.Show.ShowS
                                                              (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec6
                                                                 GHC.Show.shows18
                                                                 ww12)
                                                              (GHC.Types.:
                                                                 @ GHC.Show.ShowS
                                                                 (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec5
                                                                    GHC.Show.shows18
                                                                    ww13)
                                                                 (GHC.Types.:
                                                                    @ GHC.Show.ShowS
                                                                    (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec4
                                                                       GHC.Show.shows18
                                                                       ww14)
                                                                    (GHC.Types.:
                                                                       @ GHC.Show.ShowS
                                                                       (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec3
                                                                          GHC.Show.shows18
                                                                          ww15)
                                                                       (GHC.Types.:
                                                                          @ GHC.Show.ShowS
                                                                          (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec2
                                                                             GHC.Show.shows18
                                                                             ww16)
                                                                          (GHC.Types.:
                                                                             @ GHC.Show.ShowS
                                                                             (InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec1
                                                                                GHC.Show.shows18
                                                                                ww17)
                                                                             (GHC.Types.[]
                                                                                @ GHC.Show.ShowS)))))))))))))))))))
                 } in
                 \ x :: GHC.Base.String ->
                 GHC.Types.:
                   @ GHC.Types.Char
                   InflectionData.$fShow(,,,,,,,,,,,,,,,,,)2
                   (f (GHC.Types.:
                         @ GHC.Types.Char
                         InflectionData.$fShow(,,,,,,,,,,,,,,,,,)1
                         x))) -}
645292a0c707731346010c9800970e0d
  $wa ::
    GHC.Prim.Int#
    -> forall b.
       (InflectionData.Agreement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,C(U)>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   @ b
                   w :: InflectionData.Agreement
                        -> Text.ParserCombinators.ReadP.P b ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 10) of wild2 {
                   GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                   GHC.Types.True
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl119 :: Text.ParserCombinators.ReadP.P b
                            = (GHC.Read.$fReadDouble10
                                 @ GrammarData.LexCat
                                 GrammarData.$fReadLexCat3
                                   `cast`
                                 (Trans
                                      (<Text.ParserCombinators.ReadPrec.Prec>_R
                                       ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                     <GrammarData.LexCat>_R))
                                      (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                <GrammarData.LexCat>_R)))
                                 InflectionData.$fReadAgreement5)
                                `cast`
                              (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GrammarData.LexCat>_R)
                                @ b
                                (\ a38 :: GrammarData.LexCat ->
                                 (GHC.Read.$fReadDouble10
                                    @ GrammarData.LexCat
                                    GrammarData.$fReadLexCat3
                                      `cast`
                                    (Trans
                                         (<Text.ParserCombinators.ReadPrec.Prec>_R
                                          ->_R Sym (Text.ParserCombinators.ReadP.NTCo:ReadP[0]
                                                        <GrammarData.LexCat>_R))
                                         (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                                   <GrammarData.LexCat>_R)))
                                    InflectionData.$fReadAgreement5)
                                   `cast`
                                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GrammarData.LexCat>_R)
                                   @ b
                                   (\ a39 :: GrammarData.LexCat ->
                                    w (InflectionData.Agreement a38 a39)))
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ a98 :: Text.Read.Lex.Lexeme ->
                             case a98 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a38
                               -> case GHC.Base.eqString
                                         a38
                                         InflectionData.$fReadAgreement4 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl119 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                             Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                        = \ w2 :: () -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ a98 :: GHC.Base.String ->
                         (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                           `cast`
                         (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                           @ b
                           k) }) -}
1419dcfa02d8f66ac2c47a6bd2d69863
  $wa1 ::
    GHC.Prim.Int#
    -> forall b.
       (InflectionData.AgreementSystem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,C(U)>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   @ b
                   w :: InflectionData.AgreementSystem
                        -> Text.ParserCombinators.ReadP.P b ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww 10) of wild2 {
                   GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                   GHC.Types.True
                   -> let {
                        lvl118 :: Text.ParserCombinators.ReadP.P b
                        = let {
                            lvl119 :: Text.ParserCombinators.ReadP.P b
                            = GHC.Read.$wa
                                @ InflectionData.Agreement
                                InflectionData.$fReadAgreement2
                                  `cast`
                                (Sym (Text.ParserCombinators.ReadPrec.NTCo:ReadPrec[0]
                                          <InflectionData.Agreement>_R))
                                @ b
                                (\ a38 :: [InflectionData.Agreement] ->
                                 w (InflectionData.AgreementSystem a38))
                          } in
                          Text.Read.Lex.expect2
                            @ b
                            (\ a98 :: Text.Read.Lex.Lexeme ->
                             case a98 of wild {
                               DEFAULT -> Text.ParserCombinators.ReadP.Fail @ b
                               Text.Read.Lex.Ident a38
                               -> case GHC.Base.eqString
                                         a38
                                         InflectionData.$fReadAgreementSystem4 of wild1 {
                                    GHC.Types.False -> Text.ParserCombinators.ReadP.Fail @ b
                                    GHC.Types.True -> lvl119 } })
                      } in
                      let {
                        k :: () -> Text.ParserCombinators.ReadP.P b
                          {- Arity: 1, Strictness: <L,A>, Inline: INLINE[0],
                             Unfolding: InlineRule (1, True, True) (\ w2 :: () -> lvl118) -}
                        = \ w2 :: () -> lvl118
                      } in
                      Text.ParserCombinators.ReadP.Look
                        @ b
                        (\ a98 :: GHC.Base.String ->
                         (Text.ParserCombinators.ReadP.skipSpaces_skip a98)
                           `cast`
                         (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <()>_R)
                           @ b
                           k) }) -}
1e3fe4826a39142c5de940012234f2c4
  $wa2 ::
    GHC.Prim.Int#
    -> forall b.
       (InflectionData.InflectionSystem
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,C(U)>, Inline: [0] -}
645292a0c707731346010c9800970e0d
  data Agreement = Agreement GrammarData.LexCat GrammarData.LexCat
    Promotable
1419dcfa02d8f66ac2c47a6bd2d69863
  data AgreementSystem = AgreementSystem [InflectionData.Agreement]
    Promotable
cedf9e666cdb6656f2a2a96d2d3bd589
  data Animacy = AN | HUM | NHUM | ZO | INAN
    Promotable
6cd9c63aad1a4e1ec43732010ec1ea5c
  data Aspect = PFV | IPFV
    Promotable
fe9f4ca1606b5f19f2230e1deea3d046
  data Case
    = INTR
    | ACC
    | ERG
    | PEG
    | INDIR
    | SEC
    | NOM
    | ABS
    | MTR
    | DIR
    | PRIM
    | ERG2
    | NOM2
    | ABS2
    | ABS3
    | DTR
    | OBJ
    | DRT1
    | TR
    | DRT2
    | OBL1
    | OBL2
    | OBL3
    | OBL4
    | OBL5
    | OBL6
    | ADP
    | PREP
    | POST
    | LAT
    | LOC
    | ABL
    | COMP
    | EQU
    | IDEN
    | ABE
    | DAT
    | INS
    | COMIT
    | INSCOMIT
    | ORN
    | BEN
    | CAUS
    | DISTR
    | GEN
    | POSS
    | PART
    | VOC
    Promotable
ec2f2b20d2b1cf035f6ca129e5552311
  data Clusivity = INCL | EXCL
    Promotable
b37f400b256ab5a9a84f13e148a3d2d5
  data Definiteness = DEF | INDF
    Promotable
72f49e3daffb56d4bf46854dab7a01ee
  data Evidentiality
    = EXP | VIS | NVIS | AUD | INFER | REP | HSY | QUO | ASS
    Promotable
bea847055a51c2d8a5a4f43d44b03253
  data Gender = M | F | COM | N
    Promotable
b998d88ddf707e2096355bc29dc9a0f5
  data Honorific = FAM | FORM
    Promotable
1e3fe4826a39142c5de940012234f2c4
  data InflectionSystem
    = InflectionSystem {genSys :: InflectionData.Manifest
                                    [InflectionData.Gender],
                        aniSys :: InflectionData.Manifest [InflectionData.Animacy],
                        casSys :: InflectionData.Manifest [InflectionData.Case],
                        numSys :: InflectionData.Manifest [InflectionData.Number],
                        defSys :: InflectionData.Manifest [InflectionData.Definiteness],
                        speSys :: InflectionData.Manifest [InflectionData.Specificity],
                        topSys :: InflectionData.Manifest [InflectionData.Topic],
                        perSys :: InflectionData.Manifest [InflectionData.Person],
                        cluSys :: InflectionData.Manifest [InflectionData.Clusivity],
                        honSys :: InflectionData.Manifest [InflectionData.Honorific],
                        polSys :: InflectionData.Manifest [InflectionData.Polarity],
                        tenSys :: InflectionData.Manifest [InflectionData.Tense],
                        aspSys :: InflectionData.Manifest [InflectionData.Aspect],
                        mooSys :: InflectionData.Manifest [InflectionData.Mood],
                        voiSys :: InflectionData.Manifest [InflectionData.Voice],
                        eviSys :: InflectionData.Manifest [InflectionData.Evidentiality],
                        traSys :: InflectionData.Manifest [InflectionData.Transitivity],
                        volSys :: InflectionData.Manifest [InflectionData.Volition]}
585905e8fe5aabe454e8c831c9719ba2
  data Manifest a
    = NoManifest
    | Manifest [(GrammarData.LexCat,
                 InflectionData.ManifestType,
                 GHC.Types.Int)]
               a
0e7b2c73aa17600e0a7730d855d918b4
  data ManifestSystem
    = ManifestSystem GrammarData.LexCat
                     InflectionData.ManifestType
                     [(PhonemeData.Morpheme,
                       (InflectionData.Manifest InflectionData.Gender,
                        InflectionData.Manifest InflectionData.Animacy,
                        InflectionData.Manifest InflectionData.Case,
                        InflectionData.Manifest InflectionData.Number,
                        InflectionData.Manifest InflectionData.Definiteness,
                        InflectionData.Manifest InflectionData.Specificity,
                        InflectionData.Manifest InflectionData.Topic,
                        InflectionData.Manifest InflectionData.Person,
                        InflectionData.Manifest InflectionData.Clusivity,
                        InflectionData.Manifest InflectionData.Honorific,
                        InflectionData.Manifest InflectionData.Polarity,
                        InflectionData.Manifest InflectionData.Tense,
                        InflectionData.Manifest InflectionData.Aspect,
                        InflectionData.Manifest InflectionData.Mood,
                        InflectionData.Manifest InflectionData.Voice,
                        InflectionData.Manifest InflectionData.Evidentiality,
                        InflectionData.Manifest InflectionData.Transitivity,
                        InflectionData.Manifest InflectionData.Volition))]
d4d7fe6a7722743af73d0848be830e04
  data ManifestType = PreParticle | Prefix | Suffix | PostParticle
    Promotable
89f52f47d857baf59a835f155022c894
  data Mood
    = IND | IRR | DEO | IMP | JUS | OPT | EPIS | SBJV | POT | COND
    Promotable
d524767ed256fd8fb6411842c02ad522
  data Number = SG | DU | TRI | PA | PL
    Promotable
87552d4bd640161dc918422e1f989f36
  data Person = FIRST | SECOND | THIRD
    Promotable
b165a208777adb6384e8aa49b7841cdc
  data Polarity = AFF | NEG
    Promotable
43df515dcdadd0ea11740b17c269f784
  data Specificity = SPEC | NSPEC
    Promotable
004b6b4805c5a693db94c0d4a7a3616e
  data Tense
    = PST | REM | REC | NPST | PRS | NFUT | FUT | IMMF | REMF
    Promotable
324933ffc8ee2e478eb9c9c4b97f7e1c
  data Topic = TOP | NTOP
    Promotable
aa30e8d12dfa43bab7ebbfaa9a7bbce4
  data Transitivity = NTRANS | TRANS | DITRANS
    Promotable
523b90b12350f06385d4da5905742868
  data Voice = ACTIVE | MIDDLE | PASSIVE
    Promotable
79163f2537538d5ab28ad5d835b8900a
  data Volition = VOL | NVOL
    Promotable
bf2169ba387ab3638393b84dee90c49a
  aniSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Animacy]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds2 }) -}
486a8c668bebed30f10df64f6643cd35
  aspSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Aspect]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds13 }) -}
b6253f264cf04b70ed6733ef84265597
  casSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Case]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds3 }) -}
1cf3ddc5b66c5059d89d1759026d76ef
  cluSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Clusivity]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLLLLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds9 }) -}
791f6bb49015e490e4fbaca91284d8c2
  defSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Definiteness]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds5 }) -}
5f339467cb57a3613471b8a6ebc540f8
  eviSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Evidentiality]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds16 }) -}
c2d6181902bbf995c74be89480b26002
  genSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Gender]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds1 }) -}
af70c7f20f205d30889f82d82d0aeb97
  honSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Honorific]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds10 }) -}
51b1a25ce92a0ae2667748a51389e595
  mooSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Mood]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds14 }) -}
179377656af013c07c11434888cc557e
  numSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Number]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds4 }) -}
5da2ccc97fb2c77d51c790b5bcb3cec4
  perSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Person]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLLLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds8 }) -}
36b2afcffd5ef0a1cda1beadc367dc13
  polSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Polarity]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds11 }) -}
b7c67cfc67167d978d2235118f373623
  speSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Specificity]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds6 }) -}
b03397c4d00cd45069a68405c6b06dd1
  tenSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Tense]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSLLLLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds12 }) -}
6853f117ed274e895a39b6a3602af3f2
  topSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Topic]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds7 }) -}
d27da8882b7759d098740802420a9feb
  traSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Transitivity]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds17 }) -}
38713f13dcf55bcb8c1bbbe8a724c366
  voiSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Voice]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds15 }) -}
24176821604239ceb5a5e4fb709e7dfc
  volSys ::
    InflectionData.InflectionSystem
    -> InflectionData.Manifest [InflectionData.Volition]
  RecSel InflectionData.InflectionSystem
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: InflectionData.InflectionSystem ->
                 case ds of wild { InflectionData.InflectionSystem ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ds14 ds15 ds16 ds17 ds18 ->
                 ds18 }) -}
instance GHC.Classes.Eq [(,,,,,,,,,,,,,,,,,)]
  = InflectionData.$fEq(,,,,,,,,,,,,,,,,,)
instance GHC.Classes.Eq [InflectionData.Agreement]
  = InflectionData.$fEqAgreement
instance GHC.Classes.Eq [InflectionData.AgreementSystem]
  = InflectionData.$fEqAgreementSystem
instance GHC.Classes.Eq [InflectionData.Animacy]
  = InflectionData.$fEqAnimacy
instance GHC.Classes.Eq [InflectionData.Aspect]
  = InflectionData.$fEqAspect
instance GHC.Classes.Eq [InflectionData.Case]
  = InflectionData.$fEqCase
instance GHC.Classes.Eq [InflectionData.Clusivity]
  = InflectionData.$fEqClusivity
instance GHC.Classes.Eq [InflectionData.Definiteness]
  = InflectionData.$fEqDefiniteness
instance GHC.Classes.Eq [InflectionData.Evidentiality]
  = InflectionData.$fEqEvidentiality
instance GHC.Classes.Eq [InflectionData.Gender]
  = InflectionData.$fEqGender
instance GHC.Classes.Eq [InflectionData.Honorific]
  = InflectionData.$fEqHonorific
instance GHC.Classes.Eq [InflectionData.InflectionSystem]
  = InflectionData.$fEqInflectionSystem
instance GHC.Classes.Eq [InflectionData.Manifest]
  = InflectionData.$fEqManifest
instance GHC.Classes.Eq [InflectionData.ManifestSystem]
  = InflectionData.$fEqManifestSystem
instance GHC.Classes.Eq [InflectionData.ManifestType]
  = InflectionData.$fEqManifestType
instance GHC.Classes.Eq [InflectionData.Mood]
  = InflectionData.$fEqMood
instance GHC.Classes.Eq [InflectionData.Number]
  = InflectionData.$fEqNumber
instance GHC.Classes.Eq [InflectionData.Person]
  = InflectionData.$fEqPerson
instance GHC.Classes.Eq [InflectionData.Polarity]
  = InflectionData.$fEqPolarity
instance GHC.Classes.Eq [InflectionData.Specificity]
  = InflectionData.$fEqSpecificity
instance GHC.Classes.Eq [InflectionData.Tense]
  = InflectionData.$fEqTense
instance GHC.Classes.Eq [InflectionData.Topic]
  = InflectionData.$fEqTopic
instance GHC.Classes.Eq [InflectionData.Transitivity]
  = InflectionData.$fEqTransitivity
instance GHC.Classes.Eq [InflectionData.Voice]
  = InflectionData.$fEqVoice
instance GHC.Classes.Eq [InflectionData.Volition]
  = InflectionData.$fEqVolition
instance GHC.Read.Read [InflectionData.Agreement]
  = InflectionData.$fReadAgreement
instance GHC.Read.Read [InflectionData.AgreementSystem]
  = InflectionData.$fReadAgreementSystem
instance GHC.Read.Read [InflectionData.Animacy]
  = InflectionData.$fReadAnimacy
instance GHC.Read.Read [InflectionData.Aspect]
  = InflectionData.$fReadAspect
instance GHC.Read.Read [InflectionData.Case]
  = InflectionData.$fReadCase
instance GHC.Read.Read [InflectionData.Clusivity]
  = InflectionData.$fReadClusivity
instance GHC.Read.Read [InflectionData.Definiteness]
  = InflectionData.$fReadDefiniteness
instance GHC.Read.Read [InflectionData.Evidentiality]
  = InflectionData.$fReadEvidentiality
instance GHC.Read.Read [InflectionData.Gender]
  = InflectionData.$fReadGender
instance GHC.Read.Read [InflectionData.Honorific]
  = InflectionData.$fReadHonorific
instance GHC.Read.Read [InflectionData.InflectionSystem]
  = InflectionData.$fReadInflectionSystem
instance GHC.Read.Read [InflectionData.Manifest]
  = InflectionData.$fReadManifest
instance GHC.Read.Read [InflectionData.ManifestType]
  = InflectionData.$fReadManifestType
instance GHC.Read.Read [InflectionData.Mood]
  = InflectionData.$fReadMood
instance GHC.Read.Read [InflectionData.Number]
  = InflectionData.$fReadNumber
instance GHC.Read.Read [InflectionData.Person]
  = InflectionData.$fReadPerson
instance GHC.Read.Read [InflectionData.Polarity]
  = InflectionData.$fReadPolarity
instance GHC.Read.Read [InflectionData.Specificity]
  = InflectionData.$fReadSpecificity
instance GHC.Read.Read [InflectionData.Tense]
  = InflectionData.$fReadTense
instance GHC.Read.Read [InflectionData.Topic]
  = InflectionData.$fReadTopic
instance GHC.Read.Read [InflectionData.Transitivity]
  = InflectionData.$fReadTransitivity
instance GHC.Read.Read [InflectionData.Voice]
  = InflectionData.$fReadVoice
instance GHC.Read.Read [InflectionData.Volition]
  = InflectionData.$fReadVolition
instance GHC.Show.Show [(,,,,,,,,,,,,,,,,,)]
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)
instance GHC.Show.Show [InflectionData.Agreement]
  = InflectionData.$fShowAgreement
instance GHC.Show.Show [InflectionData.AgreementSystem]
  = InflectionData.$fShowAgreementSystem
instance GHC.Show.Show [InflectionData.Animacy]
  = InflectionData.$fShowAnimacy
instance GHC.Show.Show [InflectionData.Aspect]
  = InflectionData.$fShowAspect
instance GHC.Show.Show [InflectionData.Case]
  = InflectionData.$fShowCase
instance GHC.Show.Show [InflectionData.Clusivity]
  = InflectionData.$fShowClusivity
instance GHC.Show.Show [InflectionData.Definiteness]
  = InflectionData.$fShowDefiniteness
instance GHC.Show.Show [InflectionData.Evidentiality]
  = InflectionData.$fShowEvidentiality
instance GHC.Show.Show [InflectionData.Gender]
  = InflectionData.$fShowGender
instance GHC.Show.Show [InflectionData.Honorific]
  = InflectionData.$fShowHonorific
instance GHC.Show.Show [InflectionData.InflectionSystem]
  = InflectionData.$fShowInflectionSystem
instance GHC.Show.Show [InflectionData.Manifest]
  = InflectionData.$fShowManifest
instance GHC.Show.Show [InflectionData.ManifestSystem]
  = InflectionData.$fShowManifestSystem
instance GHC.Show.Show [InflectionData.ManifestType]
  = InflectionData.$fShowManifestType
instance GHC.Show.Show [InflectionData.Mood]
  = InflectionData.$fShowMood
instance GHC.Show.Show [InflectionData.Number]
  = InflectionData.$fShowNumber
instance GHC.Show.Show [InflectionData.Person]
  = InflectionData.$fShowPerson
instance GHC.Show.Show [InflectionData.Polarity]
  = InflectionData.$fShowPolarity
instance GHC.Show.Show [InflectionData.Specificity]
  = InflectionData.$fShowSpecificity
instance GHC.Show.Show [InflectionData.Tense]
  = InflectionData.$fShowTense
instance GHC.Show.Show [InflectionData.Topic]
  = InflectionData.$fShowTopic
instance GHC.Show.Show [InflectionData.Transitivity]
  = InflectionData.$fShowTransitivity
instance GHC.Show.Show [InflectionData.Voice]
  = InflectionData.$fShowVoice
instance GHC.Show.Show [InflectionData.Volition]
  = InflectionData.$fShowVolition
"SPEC $c/= @ (Manifest Gender) @ (Manifest Animacy) @ (Manifest
                                                        Case) @ (Manifest Number) @ (Manifest
                                                                                       Definiteness) @ (Manifest
                                                                                                          Specificity) @ (Manifest
                                                                                                                            Topic) @ (Manifest
                                                                                                                                        Person) @ (Manifest
                                                                                                                                                     Clusivity) @ (Manifest
                                                                                                                                                                     Honorific) @ (Manifest
                                                                                                                                                                                     Polarity) @ (Manifest
                                                                                                                                                                                                    Tense) @ (Manifest
                                                                                                                                                                                                                Aspect) @ (Manifest
                                                                                                                                                                                                                             Mood) @ (Manifest
                                                                                                                                                                                                                                        Voice) @ (Manifest
                                                                                                                                                                                                                                                    Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                        Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                           Volition)" [ALWAYS] forall $dEq :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Gender)
dEq1 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Animacy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq2 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Case)
dEq3 :: GHC.Classes.Eq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (InflectionData.Manifest
nflectionData.Number)
dEq4 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Definiteness)
dEq5 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Specificity)
dEq6 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Topic)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq7 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Person)
dEq8 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Clusivity)
dEq9 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Honorific)
dEq10 :: GHC.Classes.Eq
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           InflectionData.Polarity)
dEq11 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Tense)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq12 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Aspect)
dEq13 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Mood)
dEq14 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Voice)
dEq15 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Evidentiality)
dEq16 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Transitivity)
dEq17 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$c/= @ (InflectionData.Manifest
                                                   InflectionData.Gender)
                                              @ (InflectionData.Manifest InflectionData.Animacy)
                                              @ (InflectionData.Manifest InflectionData.Case)
                                              @ (InflectionData.Manifest InflectionData.Number)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Definiteness)
                                              @ (InflectionData.Manifest InflectionData.Specificity)
                                              @ (InflectionData.Manifest InflectionData.Topic)
                                              @ (InflectionData.Manifest InflectionData.Person)
                                              @ (InflectionData.Manifest InflectionData.Clusivity)
                                              @ (InflectionData.Manifest InflectionData.Honorific)
                                              @ (InflectionData.Manifest InflectionData.Polarity)
                                              @ (InflectionData.Manifest InflectionData.Tense)
                                              @ (InflectionData.Manifest InflectionData.Aspect)
                                              @ (InflectionData.Manifest InflectionData.Mood)
                                              @ (InflectionData.Manifest InflectionData.Voice)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Evidentiality)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Transitivity)
                                              @ (InflectionData.Manifest InflectionData.Volition)
                                              $dEq
                                              $dEq1
                                              $dEq2
                                              $dEq3
                                              $dEq4
                                              $dEq5
                                              $dEq6
                                              $dEq7
                                              $dEq8
                                              $dEq9
                                              $dEq10
                                              $dEq11
                                              $dEq12
                                              $dEq13
                                              $dEq14
                                              $dEq15
                                              $dEq16
                                              $dEq17
  = InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$c/=
"SPEC $c== @ (Manifest Gender) @ (Manifest Animacy) @ (Manifest
                                                        Case) @ (Manifest Number) @ (Manifest
                                                                                       Definiteness) @ (Manifest
                                                                                                          Specificity) @ (Manifest
                                                                                                                            Topic) @ (Manifest
                                                                                                                                        Person) @ (Manifest
                                                                                                                                                     Clusivity) @ (Manifest
                                                                                                                                                                     Honorific) @ (Manifest
                                                                                                                                                                                     Polarity) @ (Manifest
                                                                                                                                                                                                    Tense) @ (Manifest
                                                                                                                                                                                                                Aspect) @ (Manifest
                                                                                                                                                                                                                             Mood) @ (Manifest
                                                                                                                                                                                                                                        Voice) @ (Manifest
                                                                                                                                                                                                                                                    Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                        Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                           Volition)" [ALWAYS] forall $dEq :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Gender)
dEq1 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Animacy)
dEq2 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Case)
dEq3 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Number)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq4 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Definiteness)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq5 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Specificity)
dEq6 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Topic)
dEq7 :: GHC.Classes.Eq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (InflectionData.Manifest
nflectionData.Person)
dEq8 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Clusivity)
dEq9 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Honorific)
dEq10 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Polarity)
dEq11 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Tense)
dEq12 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Aspect)
dEq13 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Mood)
dEq14 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Voice)
dEq15 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Evidentiality)
dEq16 :: GHC.Classes.Eq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        (InflectionData.Manifest
nflectionData.Transitivity)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dEq17 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$c== @ (InflectionData.Manifest
                                                   InflectionData.Gender)
                                              @ (InflectionData.Manifest InflectionData.Animacy)
                                              @ (InflectionData.Manifest InflectionData.Case)
                                              @ (InflectionData.Manifest InflectionData.Number)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Definiteness)
                                              @ (InflectionData.Manifest InflectionData.Specificity)
                                              @ (InflectionData.Manifest InflectionData.Topic)
                                              @ (InflectionData.Manifest InflectionData.Person)
                                              @ (InflectionData.Manifest InflectionData.Clusivity)
                                              @ (InflectionData.Manifest InflectionData.Honorific)
                                              @ (InflectionData.Manifest InflectionData.Polarity)
                                              @ (InflectionData.Manifest InflectionData.Tense)
                                              @ (InflectionData.Manifest InflectionData.Aspect)
                                              @ (InflectionData.Manifest InflectionData.Mood)
                                              @ (InflectionData.Manifest InflectionData.Voice)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Evidentiality)
                                              @ (InflectionData.Manifest
                                                   InflectionData.Transitivity)
                                              @ (InflectionData.Manifest InflectionData.Volition)
                                              $dEq
                                              $dEq1
                                              $dEq2
                                              $dEq3
                                              $dEq4
                                              $dEq5
                                              $dEq6
                                              $dEq7
                                              $dEq8
                                              $dEq9
                                              $dEq10
                                              $dEq11
                                              $dEq12
                                              $dEq13
                                              $dEq14
                                              $dEq15
                                              $dEq16
                                              $dEq17
  = InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$c==
"SPEC $c== @ Volition" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                 InflectionData.Volition
  InflectionData.$fEqManifest_$c==10 @ InflectionData.Volition $dEq
  = InflectionData.$fEqManifest_$s$c==17
"SPEC $c== @ [Volition]" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                   [InflectionData.Volition]
  InflectionData.$fEqManifest_$c==10 @ [InflectionData.Volition] $dEq
  = InflectionData.$fEqManifest_$s$c==35
"SPEC $cshow @ (Manifest Gender) @ (Manifest Animacy) @ (Manifest
                                                          Case) @ (Manifest Number) @ (Manifest
                                                                                         Definiteness) @ (Manifest
                                                                                                            Specificity) @ (Manifest
                                                                                                                              Topic) @ (Manifest
                                                                                                                                          Person) @ (Manifest
                                                                                                                                                       Clusivity) @ (Manifest
                                                                                                                                                                       Honorific) @ (Manifest
                                                                                                                                                                                       Polarity) @ (Manifest
                                                                                                                                                                                                      Tense) @ (Manifest
                                                                                                                                                                                                                  Aspect) @ (Manifest
                                                                                                                                                                                                                               Mood) @ (Manifest
                                                                                                                                                                                                                                          Voice) @ (Manifest
                                                                                                                                                                                                                                                      Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                          Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                             Volition)" [ALWAYS] forall $dShow :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Gender)
dShow1 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Animacy)
dShow2 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (InflectionData.Manifest
nflectionData.Case)
dShow3 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Number)
dShow4 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Definiteness)
dShow5 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Specificity)
dShow6 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Topic)
dShow7 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         (InflectionData.Manifest
nflectionData.Person)
dShow8 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Clusivity)
dShow9 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Honorific)
dShow10 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Polarity)
dShow11 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Tense)
dShow12 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Aspect)
dShow13 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Mood)
dShow14 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Voice)
dShow15 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Evidentiality)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            $dShow16 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             InflectionData.Transitivity)
dShow17 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             InflectionData.Volition)
  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshow @ (InflectionData.Manifest
                                                       InflectionData.Gender)
                                                  @ (InflectionData.Manifest InflectionData.Animacy)
                                                  @ (InflectionData.Manifest InflectionData.Case)
                                                  @ (InflectionData.Manifest InflectionData.Number)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Definiteness)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Specificity)
                                                  @ (InflectionData.Manifest InflectionData.Topic)
                                                  @ (InflectionData.Manifest InflectionData.Person)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Clusivity)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Honorific)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Polarity)
                                                  @ (InflectionData.Manifest InflectionData.Tense)
                                                  @ (InflectionData.Manifest InflectionData.Aspect)
                                                  @ (InflectionData.Manifest InflectionData.Mood)
                                                  @ (InflectionData.Manifest InflectionData.Voice)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Evidentiality)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Transitivity)
                                                  @ (InflectionData.Manifest
                                                       InflectionData.Volition)
                                                  $dShow
                                                  $dShow1
                                                  $dShow2
                                                  $dShow3
                                                  $dShow4
                                                  $dShow5
                                                  $dShow6
                                                  $dShow7
                                                  $dShow8
                                                  $dShow9
                                                  $dShow10
                                                  $dShow11
                                                  $dShow12
                                                  $dShow13
                                                  $dShow14
                                                  $dShow15
                                                  $dShow16
                                                  $dShow17
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshow
"SPEC $cshowList @ (Manifest Gender) @ (Manifest
                                         Animacy) @ (Manifest Case) @ (Manifest Number) @ (Manifest
                                                                                             Definiteness) @ (Manifest
                                                                                                                Specificity) @ (Manifest
                                                                                                                                  Topic) @ (Manifest
                                                                                                                                              Person) @ (Manifest
                                                                                                                                                           Clusivity) @ (Manifest
                                                                                                                                                                           Honorific) @ (Manifest
                                                                                                                                                                                           Polarity) @ (Manifest
                                                                                                                                                                                                          Tense) @ (Manifest
                                                                                                                                                                                                                      Aspect) @ (Manifest
                                                                                                                                                                                                                                   Mood) @ (Manifest
                                                                                                                                                                                                                                              Voice) @ (Manifest
                                                                                                                                                                                                                                                          Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                              Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                                 Volition)" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   (InflectionData.Manifest
nflectionData.Gender)
dShow1 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Animacy)
dShow2 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Case)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       $dShow3 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Number)
dShow4 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Definiteness)
dShow5 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Specificity)
dShow6 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    (InflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       InflectionData.Topic)
dShow7 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Person)
dShow8 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Clusivity)
dShow9 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Honorific)
dShow10 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        InflectionData.Polarity)
dShow11 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Tense)
dShow12 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Aspect)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       $dShow13 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Mood)
dShow14 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Voice)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       $dShow15 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Evidentiality)
dShow16 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        InflectionData.Transitivity)
dShow17 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowList @ (InflectionData.Manifest
                                                           InflectionData.Gender)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Animacy)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Case)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Number)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Definiteness)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Specificity)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Topic)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Person)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Clusivity)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Honorific)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Polarity)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Tense)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Aspect)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Mood)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Voice)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Evidentiality)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Transitivity)
                                                      @ (InflectionData.Manifest
                                                           InflectionData.Volition)
                                                      $dShow
                                                      $dShow1
                                                      $dShow2
                                                      $dShow3
                                                      $dShow4
                                                      $dShow5
                                                      $dShow6
                                                      $dShow7
                                                      $dShow8
                                                      $dShow9
                                                      $dShow10
                                                      $dShow11
                                                      $dShow12
                                                      $dShow13
                                                      $dShow14
                                                      $dShow15
                                                      $dShow16
                                                      $dShow17
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowList
"SPEC $cshowsPrec @ (Manifest Gender) @ (Manifest
                                          Animacy) @ (Manifest Case) @ (Manifest Number) @ (Manifest
                                                                                              Definiteness) @ (Manifest
                                                                                                                 Specificity) @ (Manifest
                                                                                                                                   Topic) @ (Manifest
                                                                                                                                               Person) @ (Manifest
                                                                                                                                                            Clusivity) @ (Manifest
                                                                                                                                                                            Honorific) @ (Manifest
                                                                                                                                                                                            Polarity) @ (Manifest
                                                                                                                                                                                                           Tense) @ (Manifest
                                                                                                                                                                                                                       Aspect) @ (Manifest
                                                                                                                                                                                                                                    Mood) @ (Manifest
                                                                                                                                                                                                                                               Voice) @ (Manifest
                                                                                                                                                                                                                                                           Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                               Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                                  Volition)" [ALWAYS] forall $dShow :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Gender)
dShow1 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Animacy)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       $dShow2 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Case)
dShow3 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Number)
dShow4 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Definiteness)
dShow5 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       InflectionData.Specificity)
dShow6 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Topic)
dShow7 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Person)
dShow8 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Clusivity)
dShow9 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Honorific)
dShow10 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Polarity)
dShow11 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Tense)
dShow12 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Aspect)
dShow13 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Mood)
dShow14 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Voice)
dShow15 :: GHC.Show.Show
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        InflectionData.Evidentiality)
dShow16 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Transitivity)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       $dShow17 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$cshowsPrec @ (InflectionData.Manifest
                                                            InflectionData.Gender)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Animacy)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Case)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Number)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Definiteness)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Specificity)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Topic)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Person)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Clusivity)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Honorific)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Polarity)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Tense)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Aspect)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Mood)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Voice)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Evidentiality)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Transitivity)
                                                       @ (InflectionData.Manifest
                                                            InflectionData.Volition)
                                                       $dShow
                                                       $dShow1
                                                       $dShow2
                                                       $dShow3
                                                       $dShow4
                                                       $dShow5
                                                       $dShow6
                                                       $dShow7
                                                       $dShow8
                                                       $dShow9
                                                       $dShow10
                                                       $dShow11
                                                       $dShow12
                                                       $dShow13
                                                       $dShow14
                                                       $dShow15
                                                       $dShow16
                                                       $dShow17
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec
"SPEC $cshowsPrec @ Animacy" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                         InflectionData.Animacy
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Animacy
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec17
"SPEC $cshowsPrec @ Aspect" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        InflectionData.Aspect
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Aspect
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec6
"SPEC $cshowsPrec @ Case" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                      InflectionData.Case
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Case
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec16
"SPEC $cshowsPrec @ Clusivity" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                           InflectionData.Clusivity
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Clusivity
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec10
"SPEC $cshowsPrec @ Definiteness" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                              InflectionData.Definiteness
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Definiteness
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec14
"SPEC $cshowsPrec @ Evidentiality" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                               InflectionData.Evidentiality
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Evidentiality
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec3
"SPEC $cshowsPrec @ Gender" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        InflectionData.Gender
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Gender
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec18
"SPEC $cshowsPrec @ Honorific" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                           InflectionData.Honorific
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Honorific
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec9
"SPEC $cshowsPrec @ Mood" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                      InflectionData.Mood
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Mood
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec5
"SPEC $cshowsPrec @ Number" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        InflectionData.Number
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Number
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec15
"SPEC $cshowsPrec @ Person" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        InflectionData.Person
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Person
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec11
"SPEC $cshowsPrec @ Polarity" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          InflectionData.Polarity
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Polarity
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec8
"SPEC $cshowsPrec @ Specificity" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                             InflectionData.Specificity
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Specificity
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec13
"SPEC $cshowsPrec @ Tense" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                       InflectionData.Tense
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Tense
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec7
"SPEC $cshowsPrec @ Topic" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                       InflectionData.Topic
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Topic
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec12
"SPEC $cshowsPrec @ Transitivity" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                              InflectionData.Transitivity
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Transitivity
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec2
"SPEC $cshowsPrec @ Voice" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                       InflectionData.Voice
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Voice
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec4
"SPEC $cshowsPrec @ Volition" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          InflectionData.Volition
  InflectionData.$fShowManifest_$cshowsPrec @ InflectionData.Volition
                                            $dShow
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$cshowsPrec1
"SPEC $cshowsPrec @ [Animacy]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                           [InflectionData.Animacy]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Animacy]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec
"SPEC $cshowsPrec @ [Aspect]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          [InflectionData.Aspect]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Aspect]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec1
"SPEC $cshowsPrec @ [Case]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        [InflectionData.Case]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Case]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec2
"SPEC $cshowsPrec @ [Clusivity]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                             [InflectionData.Clusivity]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Clusivity]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec3
"SPEC $cshowsPrec @ [Definiteness]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                [InflectionData.Definiteness]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Definiteness]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec4
"SPEC $cshowsPrec @ [Evidentiality]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                 [InflectionData.Evidentiality]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Evidentiality]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec5
"SPEC $cshowsPrec @ [Gender]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          [InflectionData.Gender]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Gender]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec6
"SPEC $cshowsPrec @ [Honorific]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                             [InflectionData.Honorific]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Honorific]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec7
"SPEC $cshowsPrec @ [Mood]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                        [InflectionData.Mood]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Mood]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec8
"SPEC $cshowsPrec @ [Number]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          [InflectionData.Number]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Number]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec9
"SPEC $cshowsPrec @ [Person]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                          [InflectionData.Person]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Person]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec10
"SPEC $cshowsPrec @ [Polarity]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                            [InflectionData.Polarity]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Polarity]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec11
"SPEC $cshowsPrec @ [Specificity]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                               [InflectionData.Specificity]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Specificity]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec12
"SPEC $cshowsPrec @ [Tense]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                         [InflectionData.Tense]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Tense]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec13
"SPEC $cshowsPrec @ [Topic]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                         [InflectionData.Topic]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Topic]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec14
"SPEC $cshowsPrec @ [Transitivity]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                                [InflectionData.Transitivity]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Transitivity]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec15
"SPEC $cshowsPrec @ [Voice]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                         [InflectionData.Voice]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Voice]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec16
"SPEC $cshowsPrec @ [Volition]" [ALWAYS] forall $dShow :: GHC.Show.Show
                                                            [InflectionData.Volition]
  InflectionData.$fShowManifest_$cshowsPrec @ [InflectionData.Volition]
                                            $dShow
  = InflectionData.$fShowManifest_$s$cshowsPrec17
"SPEC $fEq(,,,,,,,,,,,,,,,,,) @ (Manifest Gender) @ (Manifest
                                                      Animacy) @ (Manifest Case) @ (Manifest
                                                                                      Number) @ (Manifest
                                                                                                   Definiteness) @ (Manifest
                                                                                                                      Specificity) @ (Manifest
                                                                                                                                        Topic) @ (Manifest
                                                                                                                                                    Person) @ (Manifest
                                                                                                                                                                 Clusivity) @ (Manifest
                                                                                                                                                                                 Honorific) @ (Manifest
                                                                                                                                                                                                 Polarity) @ (Manifest
                                                                                                                                                                                                                Tense) @ (Manifest
                                                                                                                                                                                                                            Aspect) @ (Manifest
                                                                                                                                                                                                                                         Mood) @ (Manifest
                                                                                                                                                                                                                                                    Voice) @ (Manifest
                                                                                                                                                                                                                                                                Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                                    Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                                       Volition)" [ALWAYS] forall $dEq :: GHC.Classes.Eq
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        InflectionData.Gender)
dEq1 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Animacy)
dEq2 :: GHC.Classes.Eq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (InflectionData.Manifest
nflectionData.Case)
dEq3 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Number)
dEq4 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Definiteness)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dEq5 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Specificity)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dEq6 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Topic)
dEq7 :: GHC.Classes.Eq
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      (InflectionData.Manifest
nflectionData.Person)
dEq8 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Clusivity)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dEq9 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Honorific)
dEq10 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Polarity)
dEq11 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Tense)
dEq12 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Aspect)
dEq13 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Mood)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           $dEq14 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Voice)
dEq15 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Evidentiality)
dEq16 :: GHC.Classes.Eq
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          InflectionData.Transitivity)
dEq17 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fEq(,,,,,,,,,,,,,,,,,) @ (InflectionData.Manifest
                                              InflectionData.Gender)
                                         @ (InflectionData.Manifest InflectionData.Animacy)
                                         @ (InflectionData.Manifest InflectionData.Case)
                                         @ (InflectionData.Manifest InflectionData.Number)
                                         @ (InflectionData.Manifest InflectionData.Definiteness)
                                         @ (InflectionData.Manifest InflectionData.Specificity)
                                         @ (InflectionData.Manifest InflectionData.Topic)
                                         @ (InflectionData.Manifest InflectionData.Person)
                                         @ (InflectionData.Manifest InflectionData.Clusivity)
                                         @ (InflectionData.Manifest InflectionData.Honorific)
                                         @ (InflectionData.Manifest InflectionData.Polarity)
                                         @ (InflectionData.Manifest InflectionData.Tense)
                                         @ (InflectionData.Manifest InflectionData.Aspect)
                                         @ (InflectionData.Manifest InflectionData.Mood)
                                         @ (InflectionData.Manifest InflectionData.Voice)
                                         @ (InflectionData.Manifest InflectionData.Evidentiality)
                                         @ (InflectionData.Manifest InflectionData.Transitivity)
                                         @ (InflectionData.Manifest InflectionData.Volition)
                                         $dEq
                                         $dEq1
                                         $dEq2
                                         $dEq3
                                         $dEq4
                                         $dEq5
                                         $dEq6
                                         $dEq7
                                         $dEq8
                                         $dEq9
                                         $dEq10
                                         $dEq11
                                         $dEq12
                                         $dEq13
                                         $dEq14
                                         $dEq15
                                         $dEq16
                                         $dEq17
  = InflectionData.$fEq(,,,,,,,,,,,,,,,,,)_$s$fEq(,,,,,,,,,,,,,,,,,)
"SPEC $fShow(,,,,,,,,,,,,,,,,,) @ (Manifest Gender) @ (Manifest
                                                        Animacy) @ (Manifest Case) @ (Manifest
                                                                                        Number) @ (Manifest
                                                                                                     Definiteness) @ (Manifest
                                                                                                                        Specificity) @ (Manifest
                                                                                                                                          Topic) @ (Manifest
                                                                                                                                                      Person) @ (Manifest
                                                                                                                                                                   Clusivity) @ (Manifest
                                                                                                                                                                                   Honorific) @ (Manifest
                                                                                                                                                                                                   Polarity) @ (Manifest
                                                                                                                                                                                                                  Tense) @ (Manifest
                                                                                                                                                                                                                              Aspect) @ (Manifest
                                                                                                                                                                                                                                           Mood) @ (Manifest
                                                                                                                                                                                                                                                      Voice) @ (Manifest
                                                                                                                                                                                                                                                                  Evidentiality) @ (Manifest
                                                                                                                                                                                                                                                                                      Transitivity) @ (Manifest
                                                                                                                                                                                                                                                                                                         Volition)" [ALWAYS] forall $dShow :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Gender)
dShow1 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Animacy)
dShow2 :: GHC.Show.Show
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          (InflectionData.Manifest
nflectionData.Case)
dShow3 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Number)
dShow4 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Definiteness)
dShow5 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Specificity)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             $dShow6 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Topic)
dShow7 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Person)
dShow8 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Clusivity)
dShow9 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Honorific)
dShow10 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Polarity)
dShow11 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Tense)
dShow12 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Aspect)
dShow13 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Mood)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             $dShow14 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Voice)
dShow15 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Evidentiality)
dShow16 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Transitivity)
dShow17 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Volition)
  InflectionData.$fShow(,,,,,,,,,,,,,,,,,) @ (InflectionData.Manifest
                                                InflectionData.Gender)
                                           @ (InflectionData.Manifest InflectionData.Animacy)
                                           @ (InflectionData.Manifest InflectionData.Case)
                                           @ (InflectionData.Manifest InflectionData.Number)
                                           @ (InflectionData.Manifest InflectionData.Definiteness)
                                           @ (InflectionData.Manifest InflectionData.Specificity)
                                           @ (InflectionData.Manifest InflectionData.Topic)
                                           @ (InflectionData.Manifest InflectionData.Person)
                                           @ (InflectionData.Manifest InflectionData.Clusivity)
                                           @ (InflectionData.Manifest InflectionData.Honorific)
                                           @ (InflectionData.Manifest InflectionData.Polarity)
                                           @ (InflectionData.Manifest InflectionData.Tense)
                                           @ (InflectionData.Manifest InflectionData.Aspect)
                                           @ (InflectionData.Manifest InflectionData.Mood)
                                           @ (InflectionData.Manifest InflectionData.Voice)
                                           @ (InflectionData.Manifest InflectionData.Evidentiality)
                                           @ (InflectionData.Manifest InflectionData.Transitivity)
                                           @ (InflectionData.Manifest InflectionData.Volition)
                                           $dShow
                                           $dShow1
                                           $dShow2
                                           $dShow3
                                           $dShow4
                                           $dShow5
                                           $dShow6
                                           $dShow7
                                           $dShow8
                                           $dShow9
                                           $dShow10
                                           $dShow11
                                           $dShow12
                                           $dShow13
                                           $dShow14
                                           $dShow15
                                           $dShow16
                                           $dShow17
  = InflectionData.$fShow(,,,,,,,,,,,,,,,,,)_$s$fShow(,,,,,,,,,,,,,,,,,)
"SPEC/InflectionData $dmreadsPrec @ Agreement" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                           InflectionData.Agreement
  GHC.Read.$dmreadsPrec @ InflectionData.Agreement $dRead
  = InflectionData.$fReadAgreement_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Animacy" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                         InflectionData.Animacy
  GHC.Read.$dmreadsPrec @ InflectionData.Animacy $dRead
  = InflectionData.$fReadAnimacy_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Aspect" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                        InflectionData.Aspect
  GHC.Read.$dmreadsPrec @ InflectionData.Aspect $dRead
  = InflectionData.$fReadAspect_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Case" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                      InflectionData.Case
  GHC.Read.$dmreadsPrec @ InflectionData.Case $dRead
  = InflectionData.$fReadCase_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Clusivity" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                           InflectionData.Clusivity
  GHC.Read.$dmreadsPrec @ InflectionData.Clusivity $dRead
  = InflectionData.$fReadClusivity_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Definiteness" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                              InflectionData.Definiteness
  GHC.Read.$dmreadsPrec @ InflectionData.Definiteness $dRead
  = InflectionData.$fReadDefiniteness_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Evidentiality" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                               InflectionData.Evidentiality
  GHC.Read.$dmreadsPrec @ InflectionData.Evidentiality $dRead
  = InflectionData.$fReadEvidentiality_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Gender" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                        InflectionData.Gender
  GHC.Read.$dmreadsPrec @ InflectionData.Gender $dRead
  = InflectionData.$fReadGender_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Honorific" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                           InflectionData.Honorific
  GHC.Read.$dmreadsPrec @ InflectionData.Honorific $dRead
  = InflectionData.$fReadHonorific_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ ManifestType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                              InflectionData.ManifestType
  GHC.Read.$dmreadsPrec @ InflectionData.ManifestType $dRead
  = InflectionData.$fReadManifestType_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Mood" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                      InflectionData.Mood
  GHC.Read.$dmreadsPrec @ InflectionData.Mood $dRead
  = InflectionData.$fReadMood_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Number" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                        InflectionData.Number
  GHC.Read.$dmreadsPrec @ InflectionData.Number $dRead
  = InflectionData.$fReadNumber_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Person" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                        InflectionData.Person
  GHC.Read.$dmreadsPrec @ InflectionData.Person $dRead
  = InflectionData.$fReadPerson_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Polarity" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                          InflectionData.Polarity
  GHC.Read.$dmreadsPrec @ InflectionData.Polarity $dRead
  = InflectionData.$fReadPolarity_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Specificity" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                             InflectionData.Specificity
  GHC.Read.$dmreadsPrec @ InflectionData.Specificity $dRead
  = InflectionData.$fReadSpecificity_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Tense" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                       InflectionData.Tense
  GHC.Read.$dmreadsPrec @ InflectionData.Tense $dRead
  = InflectionData.$fReadTense_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Topic" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                       InflectionData.Topic
  GHC.Read.$dmreadsPrec @ InflectionData.Topic $dRead
  = InflectionData.$fReadTopic_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Transitivity" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                              InflectionData.Transitivity
  GHC.Read.$dmreadsPrec @ InflectionData.Transitivity $dRead
  = InflectionData.$fReadTransitivity_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Voice" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                       InflectionData.Voice
  GHC.Read.$dmreadsPrec @ InflectionData.Voice $dRead
  = InflectionData.$fReadVoice_$s$dmreadsPrec
"SPEC/InflectionData $dmreadsPrec @ Volition" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                          InflectionData.Volition
  GHC.Read.$dmreadsPrec @ InflectionData.Volition $dRead
  = InflectionData.$fReadVolition_$s$dmreadsPrec
"SPEC/InflectionData $fEq(,) @ Morpheme @ (Manifest Gender,
                                          Manifest Animacy,
                                          Manifest Case,
                                          Manifest Number,
                                          Manifest Definiteness,
                                          Manifest Specificity,
                                          Manifest Topic,
                                          Manifest Person,
                                          Manifest Clusivity,
                                          Manifest Honorific,
                                          Manifest Polarity,
                                          Manifest Tense,
                                          Manifest Aspect,
                                          Manifest Mood,
                                          Manifest Voice,
                                          Manifest Evidentiality,
                                          Manifest Transitivity,
                                          Manifest Volition)" [ALWAYS] forall $dEq :: GHC.Classes.Eq
honemeData.Morpheme
dEq1 :: GHC.Classes.Eq
nflectionData.Manifest
nflectionData.Gender,
nflectionData.Manifest
nflectionData.Animacy,
nflectionData.Manifest
nflectionData.Case,
nflectionData.Manifest
nflectionData.Number,
nflectionData.Manifest
nflectionData.Definiteness,
nflectionData.Manifest
nflectionData.Specificity,
nflectionData.Manifest
nflectionData.Topic,
nflectionData.Manifest
nflectionData.Person,
nflectionData.Manifest
nflectionData.Clusivity,
nflectionData.Manifest
nflectionData.Honorific,
nflectionData.Manifest
nflectionData.Polarity,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                InflectionData.Manifest
nflectionData.Tense,
nflectionData.Manifest
nflectionData.Aspect,
nflectionData.Manifest
nflectionData.Mood,
nflectionData.Manifest
nflectionData.Voice,
nflectionData.Manifest
nflectionData.Evidentiality,
nflectionData.Manifest
nflectionData.Transitivity,
nflectionData.Manifest
nflectionData.Volition)
  GHC.Classes.$fEq(,) @ PhonemeData.Morpheme
                      @ (InflectionData.Manifest InflectionData.Gender,
                         InflectionData.Manifest InflectionData.Animacy,
                         InflectionData.Manifest InflectionData.Case,
                         InflectionData.Manifest InflectionData.Number,
                         InflectionData.Manifest InflectionData.Definiteness,
                         InflectionData.Manifest InflectionData.Specificity,
                         InflectionData.Manifest InflectionData.Topic,
                         InflectionData.Manifest InflectionData.Person,
                         InflectionData.Manifest InflectionData.Clusivity,
                         InflectionData.Manifest InflectionData.Honorific,
                         InflectionData.Manifest InflectionData.Polarity,
                         InflectionData.Manifest InflectionData.Tense,
                         InflectionData.Manifest InflectionData.Aspect,
                         InflectionData.Manifest InflectionData.Mood,
                         InflectionData.Manifest InflectionData.Voice,
                         InflectionData.Manifest InflectionData.Evidentiality,
                         InflectionData.Manifest InflectionData.Transitivity,
                         InflectionData.Manifest InflectionData.Volition)
                      $dEq
                      $dEq1
  = InflectionData.$fEqManifestSystem_$s$fEq(,)
"SPEC/InflectionData $fEq(,,) @ LexCat @ ManifestType @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                                       GrammarData.LexCat
                                                                             $dEq1 :: GHC.Classes.Eq
                                                                                        InflectionData.ManifestType
                                                                             $dEq2 :: GHC.Classes.Eq
                                                                                        GHC.Types.Int
  GHC.Classes.$fEq(,,) @ GrammarData.LexCat
                       @ InflectionData.ManifestType
                       @ GHC.Types.Int
                       $dEq
                       $dEq1
                       $dEq2
  = InflectionData.$fEqManifest_$s$fEq(,,)
"SPEC/InflectionData $fEq(,,)_$c/= @ LexCat @ ManifestType @ Int" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                                            GrammarData.LexCat
                                                                                  $dEq1 :: GHC.Classes.Eq
                                                                                             InflectionData.ManifestType
                                                                                  $dEq2 :: GHC.Classes.Eq
                                                                                             GHC.Types.Int
  GHC.Classes.$fEq(,,)_$c/= @ GrammarData.LexCat
                            @ InflectionData.ManifestType
                            @ GHC.Types.Int
                            $dEq
                            $dEq1
                            $dEq2
  = InflectionData.$fEqManifest_$s$fEq(,,)_$c/=
"SPEC/InflectionData $fShow(,)_$cshowList @ Morpheme @ (Manifest
                                                         Gender,
                                                       Manifest Animacy,
                                                       Manifest Case,
                                                       Manifest Number,
                                                       Manifest Definiteness,
                                                       Manifest Specificity,
                                                       Manifest Topic,
                                                       Manifest Person,
                                                       Manifest Clusivity,
                                                       Manifest Honorific,
                                                       Manifest Polarity,
                                                       Manifest Tense,
                                                       Manifest Aspect,
                                                       Manifest Mood,
                                                       Manifest Voice,
                                                       Manifest Evidentiality,
                                                       Manifest Transitivity,
                                                       Manifest Volition)" [ALWAYS] forall $dShow :: GHC.Show.Show
honemeData.Morpheme
dShow1 :: GHC.Show.Show
nflectionData.Manifest
nflectionData.Gender,
nflectionData.Manifest
nflectionData.Animacy,
nflectionData.Manifest
nflectionData.Case,
nflectionData.Manifest
nflectionData.Number,
nflectionData.Manifest
nflectionData.Definiteness,
nflectionData.Manifest
nflectionData.Specificity,
nflectionData.Manifest
nflectionData.Topic,
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       InflectionData.Person,
nflectionData.Manifest
nflectionData.Clusivity,
nflectionData.Manifest
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       InflectionData.Honorific,
nflectionData.Manifest
nflectionData.Polarity,
nflectionData.Manifest
nflectionData.Tense,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     InflectionData.Manifest
nflectionData.Aspect,
nflectionData.Manifest
nflectionData.Mood,
nflectionData.Manifest
nflectionData.Voice,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     InflectionData.Manifest
nflectionData.Evidentiality,
nflectionData.Manifest
nflectionData.Transitivity,
nflectionData.Manifest
nflectionData.Volition)
  GHC.Show.$fShow(,)_$cshowList @ PhonemeData.Morpheme
                                @ (InflectionData.Manifest InflectionData.Gender,
                                   InflectionData.Manifest InflectionData.Animacy,
                                   InflectionData.Manifest InflectionData.Case,
                                   InflectionData.Manifest InflectionData.Number,
                                   InflectionData.Manifest InflectionData.Definiteness,
                                   InflectionData.Manifest InflectionData.Specificity,
                                   InflectionData.Manifest InflectionData.Topic,
                                   InflectionData.Manifest InflectionData.Person,
                                   InflectionData.Manifest InflectionData.Clusivity,
                                   InflectionData.Manifest InflectionData.Honorific,
                                   InflectionData.Manifest InflectionData.Polarity,
                                   InflectionData.Manifest InflectionData.Tense,
                                   InflectionData.Manifest InflectionData.Aspect,
                                   InflectionData.Manifest InflectionData.Mood,
                                   InflectionData.Manifest InflectionData.Voice,
                                   InflectionData.Manifest InflectionData.Evidentiality,
                                   InflectionData.Manifest InflectionData.Transitivity,
                                   InflectionData.Manifest InflectionData.Volition)
                                $dShow
                                $dShow1
  = InflectionData.$fShowManifestSystem_$s$fShow(,)_$cshowList
"SPEC/InflectionData readListDefault @ Agreement" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                              InflectionData.Agreement
  GHC.Read.readListDefault @ InflectionData.Agreement $dRead
  = InflectionData.$fReadAgreement_$sreadListDefault
"SPEC/InflectionData readListDefault @ AgreementSystem" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                                    InflectionData.AgreementSystem
  GHC.Read.readListDefault @ InflectionData.AgreementSystem $dRead
  = InflectionData.$fReadAgreementSystem_$sreadListDefault
"SPEC/InflectionData readListDefault @ InflectionSystem" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                                     InflectionData.InflectionSystem
  GHC.Read.readListDefault @ InflectionData.InflectionSystem $dRead
  = InflectionData.$fReadInflectionSystem_$sreadListDefault
"SPEC/InflectionData readListDefault @ ManifestType" [ALWAYS] forall $dRead :: GHC.Read.Read
                                                                                 InflectionData.ManifestType
  GHC.Read.readListDefault @ InflectionData.ManifestType $dRead
  = InflectionData.$fReadManifestType_$sreadListDefault
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

