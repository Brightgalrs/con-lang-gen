
==================== FINAL INTERFACE ====================
2016-11-06 11:47:17.369934 UTC

interface conla_1eA9qWUPH9nBowcXqqaV8r:PhonemeGen 7103
  interface hash: 8992350ae39c7d91406d9a1290c85a1e
  ABI hash: 882a8962f7e5d7a3a88d6f568f3c585f
  export-list hash: 9e8e7402e02e274551e75a2a86f34bc1
  orphan hash: cbedb7b7b4ab7c82f0bb4131e7e5ddea
  flag hash: 962af636f8e927040c7daa9c21457292
  sig of: Nothing
  used TH splices: False
  where
exports:
  PhonemeGen.makeBacknesses
  PhonemeGen.makeConsonants
  PhonemeGen.makeDiphInventory
  PhonemeGen.makeHeights
  PhonemeGen.makeLengths
  PhonemeGen.makeManners
  PhonemeGen.makePhonations
  PhonemeGen.makePlaces
  PhonemeGen.makeRoundedneses
  PhonemeGen.makeTones
  PhonemeGen.makeVowels
module dependencies: PhonemeData
package dependencies: MonadPrompt-1.0.0.5@Monad_5vpMHuuRBzi4bKjpRN3A9L
                      MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      erf-2.0.0.0@erf_6l78BnvLL4b2mWYp3HJJxX
                      flexible-defaults-0.0.1.2@flexi_70LqvhG3vbS8bRvV8pHtMk
                      ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      math-functions-0.1.7.0@mathf_BN6S7j0ar3LC4TsnYu0us5
                      mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI
                      monad-loops-0.4.3@monad_LQiHRUYhFhYBU7nOOWDOrb
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk
                      old-locale-1.0.0.7@oldlo_7h2Gx6mVPJ5Gheca8j9Mpe
                      old-time-1.1.0.3@oldti_JVjJvknZJ0JKghfag2Jw2L
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L
                      random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      random-shuffle-0.0.4@rando_9kOz9tEn1526ShtWz8x59X
                      random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr
                      rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG
                      stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE template-haskell-2.10.0.0
                      th-extras-0.0.0.4@thext_LRY1RUMy7ShLl2tqhMyHdO
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: MonadRandom-0.4.2.3@Monad_I7tEJH7vOtsKQS7CpG48fz:Control.Monad.Random
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         mersenne-random-pure64-0.2.0.5@merse_42koSxEhmjwBS69WXi19xI:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.IO
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.MWC
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.PureMT
         random-source-0.3.0.6@rando_2sxt9MoqACW6I0STyXc5JW:Data.Random.Source.StdGen
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances
         stateref-0.3@state_KptOBHsY85L8YzpDAos2Hi:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         syb-0.6@syb_4kccWaTe3QZLxAMQYKgEyE:Data.Generics.Instances
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         mwc-random-0.13.4.0@mwcra_0lrQ1SkkNA85sa8eZ98xQk:System.Random.MWC
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Functor 5c701b0af1708f0192a25dfe14ce6274
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Traversable 7576318f4ef8587ad947f87012b65abf
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  PhonemeData 408b6488aa28ce44ef05793241013f6f
  exports: c711b36c9b7415c6d00ea9681146dbcb
  AFFRICATE c0633accced1e40697782c5c04b069ce
  ALVEOLAR 6fe183e3c8864ca442f7934e503d4650
  ALVEOLOPALATAL daaffb93a2932477e0f61cae6455dfcd
  APPROXIMANT afa9ca34009df8bf926af4481cb93350
  ASPIRATED b450b7c37ee4c8ef687d93633b315711
  BACK 2ec193314c96eb813ec77befac27f281
  BILABIAL 3ab6fb02456e7fcc0dca4f2242171191
  BOTTOMT 5c8c3bfeea1efd20d0e241577aeaed3c
  BREATHY 8d667724cf65c3e5a0cd73cb0397fa29
  Backness 8fd035312b9b1aba200f0ff8b45ff72f
  CENTRAL 42c0ac2b606a0dce589d130770507529
  CLOSE 22a96e2ec8a1cab7a2f11a25f17987dc
  CLOSEMID 28a8baa1d812c2959004ad2d5860cb36
  CORONAL cc7698dba037e39c815c055830684fab
  CREAKY cb0270b18ea7e542b72282922e925056
  Consonant e834121481c88ee1a99bb2d9c0c327a2
  DEFAULT b271861fd1783576b8280fda084f6056
  DENTAL fe60451e7fc177f8625db85852eb0594
  DENTIALVEOLAR e87e90600a110bb2397ee6da2ffbf497
  DIPT b669c8a9f42776ed9f48cdf31ecba3ff
  DORSAL 1715325532b0ab74efd7a9242241abba
  Diphthong de76956b0dda8aec4042cce68ab3cbb6
  EPIGLOTTAL 1a9f8059dab5e25b84a38539acc282e0
  EPIPHARYNGEAL 6267ba3ac09d030e3a193c53a5993ff7
  FALLT bf6493f564c877af8436448a72bf1e37
  FLAP 3fdcd00eea839fd7b6da4b6acdc50091
  FRICATIVE 55d73c4ea823ed2361247a0286d3ae01
  FRONT e0d2a42adbbfcfd87ac73f47de30a67d
  GLOTTAL de51a7f06d006897d0ca0d7b5fbd7880
  HFALLT dc0ffd2bd3b9494d348f048b9c591d0e
  HIGHT 7e89a0437c122c578ba5ac84b708192c
  HRISET 17f437c4fdfc44f5b496ba136f41caee
  Height bb7ef9ff04f02fbe9e908095d7879647
  LABIAL c3a78c73d4e8cf0a03b0594238bdd0ea
  LABIODENTAL 2912ab0d7ecd49578e43134b3ad7a5bf
  LAFFRICATE 6f5bc94cce450cc0d219b9e7f4bcbde9
  LAPPROXIMANT 51ca15e8d8190b49c520d84671352b20
  LARYNGEAL 9c9a9c12eed09cfca90c9e2b46f5c65e
  LFALLT 370593f09c7f1e4e0722ba38d021e3f9
  LFLAP b1d07d8ecfdefe7336a346f04a1bc9f3
  LFRICATIVE 8b71d52af44fcf2b2a9ec5d3a31321d4
  LONG 6c15e86e7ce9a3cd079cd9b36f04d7af
  LOWT e2c96f8c8a0008a363a3296afe0758d8
  LRISET 59e93717df80eb5418d9965ef4df0bcd
  Length 4b86df05ae3dae785a151fc2e2a4d662
  MID 667a6c2f4d919e1e38ed9c4ff4b3260a
  MIDT 268aa1e9dd8af14d1b6d8ef49d5dc0dd
  MODAL a60f576982bf888dffe19414dff892e8
  Manner cdf7cd4260ea9474daf2650d49d3b524
  NASAL 426532af6235ef2717bfa577e4906681
  NEARBACK 2f38802f6c145c99cfa5586df929a2ee
  NEARCLOSE d7648572c57097cf4678314deb3fb67a
  NEARFRONT 9d4ac6e377dd5f683a1fffdb5bef1503
  NEAROPEN 491a5f682434521ae4a79e53765d96bf
  NONET b3be8c8512b975551c05f5baffb2e3b9
  NORMAL 0cce345bf4361ad51e3d65565a5c7d8e
  OPEN 648d92e73f3591a0c10aa22bf73af8a2
  OPENMID 1a820ba4ee453b6df8e4a6000474d157
  PALATAL 1158b737ddb9a1219e5b2c2dc2261d56
  PEAKT 2310bcd4e4515266cc481df033ba5148
  PHARYNGEAL 9a742db34256d27cb1668ee7109a7b2b
  POSTALVEOLAR fb373bc5ad900ec4e364a39937ff2d50
  Phonation 2538822911657f5bc7898beed9a7f1fa
  Phoneme 78c280a9bf84c920fdcdc1bfa9515e2f
  Place a616e74c300a23926e887c7817b7b7ad
  RETROFLEX d76654bb9469506b723a22ed8a2b942b
  RISET 425c8b99bf07c70e4f648034b388578e
  ROUNDED 382d348536829d0483430e784688d11a
  Roundedness 3d23d3477a2c2b7874207db0a6b52ca6
  SAFFRICATE b3daffb192c7e4171e761f236a414d52
  SHORT 8975b9f99f59a81283ac8b701c7be2d0
  SILIBANT cd19d84dfc64144f248cad9dfb2b0243
  SLACK 38360f4734186e8a71cd1eb70076b104
  STIFF 9532155286b949a79e44c716094fd6ed
  STOP f7279e969883f96544c7de4d53999e6d
  TOPT 5c5fc11cf7ab85cd94630c67df11043f
  TRILL 2fca8896800c7846ccd54f7e650387fc
  Tone c9348a5b3e7ca841d0de6bc684e0cd9f
  UNROUNDED a85394a8cff5ac983dc69f1a095a4b21
  UVULAR 1a9c449c6d7416a18ab62d11aa6d8e38
  VELAR 2f6ec346e194f837cae24e473f67f200
  VOICELESS 04648cc19c7e44a5ad8aa1e9bcc5d028
  Vowel 0c80a941fa0fc13c4b1061bd7565d7d6
  csymbol be9e716b1baf264bba90072e249f1793
  vsymbol f5a8735f8217d4ab5b161b539e08e3e8
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  random-extras-0.19@rando_11jAc932BDRD7ydjCrRr4L:Data.Random.Extras 5dc1684f88e3f2655bfb5d7aca60bf5c
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random 355d6844bb1b3189cb19ec0007f6f130
import  -/  random-fu-0.2.7.0@rando_HO0DW1nA2fDCxZJ62mvJHr:Data.Random.Distribution.Uniform ce34c1edd0e59e868fcf9e0bf914c4ef
import  -/  rvar-0.2.0.3@rvar_HDSuhGFxwNTDX4EfF6w8WG:Data.RVar 9b7fbdb5f1778e76b8a65f45a17cccb1
a4c63f58e0da2f018f68f589b6f61045
  $s$fEq(,) :: GHC.Classes.Eq (PhonemeData.Place, PhonemeData.Manner)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (PhonemeData.Place, PhonemeData.Manner)
                  (GHC.Classes.$fEq(,)_$c==
                     @ PhonemeData.Place
                     @ PhonemeData.Manner
                     PhonemeData.$fEqPlace
                     PhonemeData.$fEqManner)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ PhonemeData.Place
                     @ PhonemeData.Manner
                     PhonemeData.$fEqPlace
                     PhonemeData.$fEqManner) -}
54c2a0e252996a68437a8f2a50b0649b
  makeBacknesses :: Data.RVar.RVar [PhonemeData.Backness]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses1) -}
c4635a8e7cad7d1850c6a4d1dcc587e7
  makeBacknesses1 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses13
                   PhonemeGen.makeBacknesses2) -}
337cbb3b6e80888d83550b48e59bd55f
  makeBacknesses10 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses11) -}
95a9067148ec63c230a65b0a83add0e3
  makeBacknesses11 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   PhonemeGen.makeBacknesses9) -}
80e8c09274221b99b5d07e95c8bb71e0
  makeBacknesses12 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses9) -}
7e998987aca61d2b42a8dd955a004141
  makeBacknesses13 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   (GHC.Types.[] @ PhonemeData.Backness)) -}
b2f00554f0737bbb744dd110287a98ab
  makeBacknesses2 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses12
                   PhonemeGen.makeBacknesses3) -}
1f379ec4cb786d1abd5dc3e0aad8b048
  makeBacknesses3 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses10
                   PhonemeGen.makeBacknesses4) -}
dabd0c06c4a0dc2b69202b8964fd5d8c
  makeBacknesses4 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses5
                   (GHC.Types.[] @ [PhonemeData.Backness])) -}
02cf4be0f4982ff3fa4ead5b43f6725f
  makeBacknesses5 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses6) -}
f6ae6c0e40fce7edf45795a5e8c0238d
  makeBacknesses6 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.NEARFRONT
                   PhonemeGen.makeBacknesses7) -}
962790a732e2b7b13bc581a20aacf030
  makeBacknesses7 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   PhonemeGen.makeBacknesses8) -}
fedae3510eb8eb693a2a209fa74058b3
  makeBacknesses8 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.NEARBACK
                   PhonemeGen.makeBacknesses9) -}
6455a6a09365221f549f79c6b2ff8f34
  makeBacknesses9 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.BACK
                   (GHC.Types.[] @ PhonemeData.Backness)) -}
bfab8913cddb12a0bfdee23e288882d0
  makeConsonants ::
    [PhonemeData.Place]
    -> [PhonemeData.Manner]
    -> [PhonemeData.Phonation]
    -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
514a0aa85ed46bc7755ff9e2e917281b
  makeDiphInventory ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme] -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U> -}
fad23195cb30ae9df25fa2048693479b
  makeHeights :: Data.RVar.RVar [PhonemeData.Height]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights1) -}
bedfcd3cec3e012aa8475dff8c84be39
  makeHeights1 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights20
                   PhonemeGen.makeHeights2) -}
04768130af631157af7984313ad6aaf7
  makeHeights10 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPENMID
                   PhonemeGen.makeHeights11) -}
a373953c5354ab8a4af5c7c5d6f199a3
  makeHeights11 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEAROPEN
                   PhonemeGen.makeHeights12) -}
d8cc565cbd9202cff95294212e220801
  makeHeights12 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPEN
                   (GHC.Types.[] @ PhonemeData.Height)) -}
b042e86968160079891c87f9f664196f
  makeHeights13 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights14) -}
917984b2f5c490194ec0276095978a97
  makeHeights14 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEARCLOSE
                   PhonemeGen.makeHeights15) -}
dcc6b69feeb09e225e66f843166e8139
  makeHeights15 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights10) -}
0015200d7e6eae500a6c3afa7c7dee88
  makeHeights16 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights17) -}
a5d3d0d1856f45e263a1c89fe60b95c8
  makeHeights17 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights18) -}
3811121116b3b03e8488a8af0f568910
  makeHeights18 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPENMID
                   PhonemeGen.makeHeights12) -}
cb63b2c29f8ba45d32ef7ca1f690bb48
  makeHeights19 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights12) -}
aac0562a7ea8654347adf6b25732f573
  makeHeights2 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights19
                   PhonemeGen.makeHeights3) -}
0a040d5cf4ab7f7dfe6bb9851ddbdb46
  makeHeights20 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.MID
                   (GHC.Types.[] @ PhonemeData.Height)) -}
c2df9ccdfa0d26ac9bc38c2eb00bbc3a
  makeHeights3 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights16
                   PhonemeGen.makeHeights4) -}
8846c468a97171ab6f484cba9805986c
  makeHeights4 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights13
                   PhonemeGen.makeHeights5) -}
d9fc45209ea68ab9771421185fd7ab3c
  makeHeights5 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights6
                   (GHC.Types.[] @ [PhonemeData.Height])) -}
8bd6abb06d4347b3afce63f91b52eb1b
  makeHeights6 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights7) -}
75ea0632f20547942c0ca7aee26a64f1
  makeHeights7 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEARCLOSE
                   PhonemeGen.makeHeights8) -}
5d8d3fefcf015a967d15a299f1ca326e
  makeHeights8 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights9) -}
618998f5632b438d819bbda87df5a3af
  makeHeights9 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.MID
                   PhonemeGen.makeHeights10) -}
473a00355cf655f574d0007824f5d916
  makeLengths :: Data.RVar.RVar [PhonemeData.Length]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths1) -}
e713682eb5d6f98acd850eaecada9424
  makeLengths1 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths9
                   PhonemeGen.makeLengths2) -}
9eee65d54b35e72c6b361bd1ba784774
  makeLengths2 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths6
                   PhonemeGen.makeLengths3) -}
0aee63cb12496a9b512a7537527f479c
  makeLengths3 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths8
                   PhonemeGen.makeLengths4) -}
304deadbc3e3c85d59b2d6a505f2ebd3
  makeLengths4 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths5
                   (GHC.Types.[] @ [PhonemeData.Length])) -}
9e1bd06c0e7c3c57b3d47fab3080c867
  makeLengths5 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.SHORT
                   PhonemeGen.makeLengths6) -}
ba735df66e2ddad99d56bb3078ea884c
  makeLengths6 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.NORMAL
                   PhonemeGen.makeLengths7) -}
5a235148aaae3cef677cc9ea02e18f09
  makeLengths7 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.LONG
                   (GHC.Types.[] @ PhonemeData.Length)) -}
003ad43b58110a5b840a9967d7b29229
  makeLengths8 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.SHORT
                   PhonemeGen.makeLengths9) -}
695bb0d9fa6b9d9a2165e75139151208
  makeLengths9 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.NORMAL
                   (GHC.Types.[] @ PhonemeData.Length)) -}
7b8ed94d910f5d3885c69cefe91df523
  makeManners :: Data.RVar.RVar [PhonemeData.Manner]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                PhonemeGen.makeManners1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                               <Control.Monad.Prompt.Lift
                                  Data.Random.Source.Internal.Prim.Prim
                                  Data.Functor.Identity.Identity>_R
                               <[PhonemeData.Manner]>_R))
                     (Trans
                          (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                    <Data.Random.Source.Internal.Prim.Prim>_R
                                    <Data.Functor.Identity.Identity>_R))
                          (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N)) -}
4c5e281cbacf1d582b1e61da9721561c
  makeManners1 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Manner] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners77
                   PhonemeGen.makeManners2
                   @ b1
                   (\ x :: [[PhonemeData.Manner]] ->
                    case PhonemeGen.makeManners_go x of vx { DEFAULT -> eta vx })
                   eta1) -}
7cd3e6061cd00c5fcc14ec56f0cdf25d
  makeManners10 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners11
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
e7cb8680bef25f5dd5f72d13bc128ac6
  makeManners11 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.TRILL
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
16ab5b5f854fa8f4990a037e306c402e
  makeManners12 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Manner] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners_eta
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Manner] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
4a2d1bca1fcdff1d7ab34f2fda08ec83
  makeManners13 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners14) -}
39671b0ee8dd8a56eb1e7738beafe08b
  makeManners14 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners15
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
91ce82070f178591f4d0a8cf078e2668
  makeManners15 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Manner] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners23
                   PhonemeGen.makeManners16
                   @ b1
                   (\ x :: [[PhonemeData.Manner]] ->
                    case PhonemeGen.makeManners_go1 x of vx { DEFAULT -> eta vx })
                   eta1) -}
563cb842b5d466605f0b66395961aec0
  makeManners16 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners17) -}
0627786cce9cd0cb458c9a485569d99d
  makeManners17 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners18
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
ef6d11ff707a249630a1547bee3f7523
  makeManners18 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners19) -}
7a9eb6e555374949315d287cdb768c45
  makeManners19 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners20) -}
0848ec08941dcbcb9427e5093d7e5c1b
  makeManners2 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners76
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners3) -}
bc6771cf3285d7c46390d68bb17c4c42
  makeManners20 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners21
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
ce92e18784a2e79657622944b3fdaf9d
  makeManners21 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LAPPROXIMANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
d140ac5d3d629a261fd7994591221d40
  makeManners22 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makeManners_eta1) -}
51696e708c25a358acfdc42408811e7e
  makeManners23 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
9e087427f9a95b3ef378f13c9d55c0b7
  makeManners24 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 (GHC.Types.[] @ PhonemeData.Manner)) -}
b61ef28483212b272807e9bf34a156ba
  makeManners25 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Manner] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners_eta2
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Manner] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
f44f0c688169cab997ea83a171170844
  makeManners26 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners27) -}
4038a593d62413ddc1ce8353811ec117
  makeManners27 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners28
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
d588b76d5ee77d81071e32d60534e41c
  makeManners28 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Manner] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners59
                   PhonemeGen.makeManners29
                   @ b1
                   (\ x :: [[PhonemeData.Manner]] ->
                    case PhonemeGen.makeManners_go2 x of vx { DEFAULT -> eta vx })
                   eta1) -}
38dec6656921ea367af6a70ef05b15fa
  makeManners29 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners58
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners30) -}
76a04de62c380505b8926475d5352a83
  makeManners3 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners72
                   PhonemeGen.makeManners4) -}
fa473582704cdd80c9314853a73b8c59
  makeManners30 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners41
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners31) -}
ed19452c9fe98820f6b1a071367dfec5
  makeManners31 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners37
                   PhonemeGen.makeManners32) -}
2399aab43122ca571cf9d576a19aa65a
  makeManners32 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners33
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
3e4eba48786c9fcf9b471553887d0d34
  makeManners33 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners34) -}
f8ba5e7aac2178088d25439700345d08
  makeManners34 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners35) -}
b251c174c03644a38f02edea1825fec1
  makeManners35 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners36
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
bda695d64c91826333b66cd3e3318fd0
  makeManners36 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LFRICATIVE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
fb9215c02d5d8db8cde6103fd84a7ada
  makeManners37 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners38) -}
35251b9b664290efdc8a6122ba86d640
  makeManners38 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners39) -}
c15cef147b1e451665a933c5af9c711e
  makeManners39 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners40
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
c9f30454d1eb855cd2b7eb4ce7bb50e4
  makeManners4 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners60
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners5) -}
10a34b6dd9b8a52d45854d18cf996cfc
  makeManners40 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.SILIBANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
e72fc0b38ce47209166e31ed7ac1906c
  makeManners41 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Manner] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners_eta3
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Manner] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
507bbb8e3c2fc7275f9c321f97f6225f
  makeManners42 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners43) -}
3110783b5ce7f22971c183a35286478c
  makeManners43 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners44
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
b909a7d19ae41b9256158d9283e18776
  makeManners44 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Manner] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners57
                   PhonemeGen.makeManners45
                   @ b1
                   (\ x :: [[PhonemeData.Manner]] ->
                    case PhonemeGen.makeManners_go3 x of vx { DEFAULT -> eta vx })
                   eta1) -}
f624a903413ee10d2c89e6969a5ae983
  makeManners45 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners56
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners46) -}
32a04ff0c4d8c13e72556e149fb4dd98
  makeManners46 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners52
                   PhonemeGen.makeManners47) -}
342ebe19a19558a11c382c46524305ff
  makeManners47 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners48
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
52624afdc5d6d323a74daf8e598f8419
  makeManners48 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners49) -}
6fc92ccba6dab02acb1b664b605aad29
  makeManners49 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners50) -}
f30ba85c7b55cf030a2f791f299f429c
  makeManners5 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners25
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners6) -}
67441905f5e5f6451e64dfccc0686eab
  makeManners50 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners51
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
7d2429f3350fab2bf7f998a289762397
  makeManners51 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LAFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
fbcd31c81dc2936148833f6d52ab2bde
  makeManners52 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners53) -}
928cc11a60b488192765225bcf39472b
  makeManners53 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners54) -}
b8aa0f2579696e39b496a6aeae01174f
  makeManners54 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners55
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
2a031165398f31c74315e6d9633dd470
  makeManners55 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.SAFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
7447446fcc475bb2726da3e7ad4a64f0
  makeManners56 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makeManners_eta4) -}
f8d289167c83af151367b70a7fc4cc63
  makeManners57 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
435a0e23d6f9f72593ac239ad64e0cac
  makeManners58 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makeManners_eta5) -}
2966aec7e9c2cc603e68c2d622b3c9ba
  makeManners59 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
2a74bb4e6d07e5a4778a119b804790f2
  makeManners6 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners12
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners7) -}
9fbea2e97c40dcc219bb477604a59899
  makeManners60 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Manner] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners_eta6
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Manner] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
d1a0f8b03a82db7d66b1cb94da7b90b3
  makeManners61 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners62) -}
dbaaf6e68f268514ae28acb4148a6c80
  makeManners62 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners63
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
e0492344d6f79d4de064abeba5e8f5c4
  makeManners63 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Manner] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makeManners71
                   PhonemeGen.makeManners64
                   @ b1
                   (\ x :: [[PhonemeData.Manner]] ->
                    case PhonemeGen.makeManners_go4 x of vx { DEFAULT -> eta vx })
                   eta1) -}
e08fe953683da6de3efeaca49b3df632
  makeManners64 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners70
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners65) -}
ec5811b1edd6625822f4de3766dd0a21
  makeManners65 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners66
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
c114dec688a4039006f192d9a5e03052
  makeManners66 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners67) -}
3cea39572c5cad2b078bf9856a01c7c8
  makeManners67 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners68) -}
7e39bc438a48bfa2cf50c9251a738f5f
  makeManners68 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners69
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
f30188ef3af422731ef76e741f9ae9d3
  makeManners69 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LFLAP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
ea0f40bff70439337f175129243baf63
  makeManners7 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners8
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
a0a6fe0715f537ef890e8e3d37ac8ea8
  makeManners70 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makeManners_eta7) -}
19302f16849de5a31ffb2659b79c74f0
  makeManners71 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
b4ef8a1f3fc8d627823f1fc3016f36ed
  makeManners72 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners73) -}
52b5d761572d82c6da876f76d72b8db1
  makeManners73 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners74) -}
838055b812727363eab6c1ad0933a3d7
  makeManners74 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners75
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
bd1d50ac1bc0720fb8c4b4bba9a4c612
  makeManners75 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.NASAL
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
9e9d760e4fa6f50bb408f9e4854033c0
  makeManners76 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Manner] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makeManners_eta8) -}
ee946deddbd71ba4df6c4fbb8caf3ded
  makeManners77 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
bf30ff10e5f98e8ec5e4fefcdf625b82
  makeManners8 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners9) -}
e96287c5536424ce9d0dc326a1c65d20
  makeManners9 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners10) -}
6e2c78386dc3dfe998044ec9eaead3a1
  makeManners_eta ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners13) -}
d888970202a492a45cd192083ccd96f3
  makeManners_eta1 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.APPROXIMANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
cc7ee621576dc946839b659f392d8bfd
  makeManners_eta2 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners26) -}
1c78d9c0ff8eb821f2b8838801ee1be5
  makeManners_eta3 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners42) -}
047f8cf3fc5b96e22a9b8951c1d60d30
  makeManners_eta4 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.AFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
f0a593fad3594dbded7d57f56a457c74
  makeManners_eta5 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.FRICATIVE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
6d5abddb35f614366a1a80b331bb1b9f
  makeManners_eta6 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners61) -}
6a4b0983680211f748eaf0d697544aaf
  makeManners_eta7 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.FLAP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
e1314cd30be2cdad7893979b6ad62a10
  makeManners_eta8 :: [PhonemeData.Manner]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.STOP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
5518768fe1fbd83abead282f23823563
  makeManners_go :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
83bb312c9cb2654f66c21222b285200b
  makeManners_go1 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
9915fc21b5daae2f6de0d23964f4f1bd
  makeManners_go2 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
76c66321bb56acf64b720b5c1cf616d9
  makeManners_go3 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
ff5c473cc7e7f6c2b0fd10a58eedb3a1
  makeManners_go4 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
8c737662983e4167b3d17834b7c82429
  makePhonations :: Data.RVar.RVar [PhonemeData.Phonation]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations1) -}
ccbe7485ecab05437fde292c2232a35a
  makePhonations1 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations17
                   PhonemeGen.makePhonations2) -}
313b09fcac75b0786503df83a934014e
  makePhonations10 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.SLACK
                   PhonemeGen.makePhonations11) -}
aa3e70ef71eca95e00ac9253a2f2dc74
  makePhonations11 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations12) -}
6c1595b60b63f4d04254789d1859d804
  makePhonations12 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.STIFF
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
7b7ec3afebc3029bf62bc2b0e85831d1
  makePhonations13 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.BREATHY
                   PhonemeGen.makePhonations14) -}
7939e60953905be9db30fe098c2d5b18
  makePhonations14 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations15) -}
7ff68fc9a922e639b61d58e146ea90c2
  makePhonations15 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.CREAKY
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
ba3547099a5cec567d161b1ccd0ecb50
  makePhonations16 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.VOICELESS
                   PhonemeGen.makePhonations17) -}
d54588a623bf148bf56b0172b512e5c6
  makePhonations17 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
76e775d83fab135047b4b1f22ae13d5c
  makePhonations2 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations16
                   PhonemeGen.makePhonations3) -}
83a73edf882d04051ce63fe3aaa8056c
  makePhonations3 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations13
                   PhonemeGen.makePhonations4) -}
a1724601767b39d1b55d31734665a078
  makePhonations4 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations10
                   PhonemeGen.makePhonations5) -}
3247ec68f9bd3101c78cab6f5c38e078
  makePhonations5 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations9
                   PhonemeGen.makePhonations6) -}
d301c51c23786d1a1b746f0f4f667494
  makePhonations6 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations7
                   (GHC.Types.[] @ [PhonemeData.Phonation])) -}
17a84781bbeab0e292548ba7d6ef90f8
  makePhonations7 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations8) -}
cebdb8df85cf6a775570c2b1f3fc645a
  makePhonations8 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.ASPIRATED
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
6612fa310c04f3770395bf542008c6ce
  makePhonations9 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.VOICELESS
                   PhonemeGen.makePhonations7) -}
3daf934c7a3ce5f9e9c7e97222bf52d9
  makePlaces :: Data.RVar.RVar [PhonemeData.Place]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                PhonemeGen.makePlaces1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                               <Control.Monad.Prompt.Lift
                                  Data.Random.Source.Internal.Prim.Prim
                                  Data.Functor.Identity.Identity>_R
                               <[PhonemeData.Place]>_R))
                     (Trans
                          (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                    <Data.Random.Source.Internal.Prim.Prim>_R
                                    <Data.Functor.Identity.Identity>_R))
                          (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N)) -}
88ac47f0d0e91c1d2a1bb689bfad9f93
  makePlaces1 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Place] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces62
                   PhonemeGen.makePlaces2
                   @ b1
                   (\ x :: [[PhonemeData.Place]] ->
                    case PhonemeGen.makePlaces_go x of vx { DEFAULT -> eta vx })
                   eta1) -}
5436c6ead99b7523512bdb2e693cbc4f
  makePlaces10 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Place] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces20
                   PhonemeGen.makePlaces11
                   @ b1
                   (\ x :: [[PhonemeData.Place]] ->
                    case PhonemeGen.makePlaces_go1 x of vx { DEFAULT -> eta vx })
                   eta1) -}
2f5ee48519a1883ca711b2b2b9ab066c
  makePlaces11 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces14
                   PhonemeGen.makePlaces12) -}
1ee482e78870666328a04fb0ddd026c9
  makePlaces12 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces13
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
110715fbefc767a4da2751fa0b06e86e
  makePlaces13 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta1) -}
1f0c67288f6a707d8654cda4e55d4c53
  makePlaces14 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces15) -}
0a4eb667213c8281c35c853f41481f51
  makePlaces15 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces19
                   PhonemeGen.makePlaces16) -}
2350db2fb709a3437776fced9e58c6c2
  makePlaces16 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces17
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
bffe72032fff8dfadbcc0d25bb6d12c1
  makePlaces17 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.PHARYNGEAL
                   PhonemeGen.makePlaces18) -}
90a94057002b1babe6b68b3d808c9f71
  makePlaces18 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.EPIGLOTTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
026d7dbf7caac46326d5c005d43cc8ca
  makePlaces19 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.EPIPHARYNGEAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
06e870d9da65f3d0ae6ea56a88fd020f
  makePlaces2 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces55
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces3) -}
571fd05e62ba7e9495848d60f395868b
  makePlaces20 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
b5beef412092be1d5901a6b3c4f1f10f
  makePlaces21 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta2) -}
4907856b8d7fbb01677ddaf64468fd5d
  makePlaces22 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 (GHC.Types.[] @ PhonemeData.Place)) -}
2dcf9430c404e89e933cefe65479668d
  makePlaces23 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Place] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces_eta3
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Place] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
a62a8ae4fe59c03fa31ff7456409bfa0
  makePlaces24 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces38
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces25) -}
ea48447ca058081e18967bad393e1289
  makePlaces25 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces26
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
fb264e927ffdb3237933aa7393b101ef
  makePlaces26 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Place] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 let {
                   eta2 :: [[PhonemeData.Place]] -> b1
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ x :: [[PhonemeData.Place]] ->
                     case PhonemeGen.makePlaces_go2 x of vx { DEFAULT -> eta vx }
                 } in
                 PhonemeGen.makePlaces_m1
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <GHC.Types.Int>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <GHC.Types.Int>_R))
                   @ b1
                   (\ x :: GHC.Types.Int ->
                    case x of x1 { GHC.Types.I# ipv ->
                    PhonemeGen.makePlaces37
                      PhonemeGen.makePlaces27
                      @ b1
                      (\ x2 :: [[PhonemeData.Place]] ->
                       case x2 of x3 { DEFAULT ->
                       case (Data.Random.Extras.sampleSeq
                               @ [PhonemeData.Place]
                               x1
                               (Data.Sequence.fromList1
                                  @ [PhonemeData.Place]
                                  x3
                                    `cast`
                                  ([Sym (Data.Sequence.NTCo:Elem[0] <[PhonemeData.Place]>_R)])_R)
                                 `cast`
                               (Sym (Data.Sequence.NTCo:Seq[0] <[PhonemeData.Place]>_R)))
                              `cast`
                            (Trans
                                 (Trans
                                      (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                      (Control.Monad.Prompt.NTCo:PromptT[0]
                                           <Data.Random.Source.Internal.Prim.Prim>_R
                                           <Data.Functor.Identity.Identity>_R) <[[PhonemeData.Place]]>_N)
                                 (Control.Monad.Prompt.NTCo:Prompt[0]
                                      <Control.Monad.Prompt.Lift
                                         Data.Random.Source.Internal.Prim.Prim
                                         Data.Functor.Identity.Identity>_R
                                      <[[PhonemeData.Place]]>_R)) of nt { DEFAULT ->
                       nt @ b1 eta2 eta1 } })
                      eta1 })
                   eta1) -}
65c11eded13947de0dbca63f464496dd
  makePlaces27 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces32
                   PhonemeGen.makePlaces28) -}
dd9b6f2c9606ba9ddae5b83eb25dea6d
  makePlaces28 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces31
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces29) -}
e95734b6261676d0327802b2a9aca039
  makePlaces29 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces30
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
ae2b5894403edb6c2a9bd7c2de112d36
  makePlaces3 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces39
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces4) -}
5b41d953722aa8bb9de504269c4b9b82
  makePlaces30 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta4) -}
a299db5d17031cd7c5751fe594d45f47
  makePlaces31 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta5) -}
91f340b72b1a5bf0a8a3dd81eec70761
  makePlaces32 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces33) -}
9020fa1848bcd1280c3137372a6a3096
  makePlaces33 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces36
                   PhonemeGen.makePlaces34) -}
f65cc86dc97613103c5c9c8668bf6dd3
  makePlaces34 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces35
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
0ad9998e9d7747ce15a65ff54935284b
  makePlaces35 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.ALVEOLOPALATAL
                   PhonemeGen.makePlaces36) -}
9734d778915405736d1faa36d553298a
  makePlaces36 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.PALATAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
904a27a14a3927ab528c8a0f063decaa
  makePlaces37 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
0ea2b34159ca88aee97e0bd7eb0c6dd9
  makePlaces38 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta6) -}
615ed5c61d0ec9f6afaf1092d2af27aa
  makePlaces39 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Place] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces_eta7
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Place] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
2c849952df3ea0b4b98c518712f6f533
  makePlaces4 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces23
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces5) -}
41fbedc9847e4ab1c39114f2ae359773
  makePlaces40 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces54
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces41) -}
c988429cd7dcb1e3b104463159ad116f
  makePlaces41 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces42
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
9fbdb18e851a846fb4b24a17e6a45af7
  makePlaces42 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   eta :: [PhonemeData.Place] -> b1
                   eta1 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces53
                   PhonemeGen.makePlaces43
                   @ b1
                   (\ x :: [[PhonemeData.Place]] ->
                    case PhonemeGen.makePlaces_go3 x of vx { DEFAULT -> eta vx })
                   eta1) -}
caee3604f5b75a67431d63baa8fdf532
  makePlaces43 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces46
                   PhonemeGen.makePlaces44) -}
a3dbbe2d68eee4266a667e6811d6bf97
  makePlaces44 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces45
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
fd5d1f70f0076b5a92a47b9b813968d0
  makePlaces45 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta8) -}
728baa52b0d14502d722531b56be30b7
  makePlaces46 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces47) -}
a89934677ed940ac5f7a22cf7f496212
  makePlaces47 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces52
                   PhonemeGen.makePlaces48) -}
554baf738ec9a0b5b86348261440889d
  makePlaces48 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces49
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
bcfa7a148068803dfe3a0bfbbf18c459
  makePlaces49 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DENTAL
                   PhonemeGen.makePlaces50) -}
58d709ab04803b82a4d5da670f160a56
  makePlaces5 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces6
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
f7840cb21a68b7023e48786b434cb6cc
  makePlaces50 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.ALVEOLAR
                   PhonemeGen.makePlaces51) -}
d740ac250d368c290a463a380986df25
  makePlaces51 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.POSTALVEOLAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
63e17a9b0f343a7365ffff9b5466de50
  makePlaces52 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DENTIALVEOLAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
287e66f3ea02c9968c41b076bcf95867
  makePlaces53 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
7486f0fc1c822808a2f7749b8b893489
  makePlaces54 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta9) -}
3ab6d53065d1acaea2c30ab6a19d1af2
  makePlaces55 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Place] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces_eta10
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Place] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
9962667520522832091a0f037c8d2419
  makePlaces56 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces57) -}
79c6b6887c7f2ac8ff5ff3085c87eb84
  makePlaces57 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces61
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces58) -}
659d7e3b0810c4301a1f8fbfb236762b
  makePlaces58 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces59
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
9f1160b22808e86581a6cc8562f23f3c
  makePlaces59 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta11) -}
71ba3efacacdf9b598c5c3c5f5e3b252
  makePlaces6 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   eta2 :: [PhonemeData.Place] -> b1
                   eta3 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b1) -> b1 ->
                 PhonemeGen.makePlaces_eta
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.NTCo:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.NTCo:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ x :: Data.RVar.RVarT
                             Data.Functor.Identity.Identity [PhonemeData.Place] ->
                    case x `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.NTCo:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.NTCo:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.NTCo:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta2 eta3 })
                   eta3) -}
1eed17885dd16b89dd9a1c25903400dd
  makePlaces60 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LABIODENTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
10802bdb4d94a7dfc0b47e53c0d32a16
  makePlaces61 ::
    ([PhonemeData.Place] -> b)
    -> (forall a2.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a2
        -> (a2 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   eta1 :: [PhonemeData.Place] -> b
                   eta2 :: forall a6.
                           Control.Monad.Prompt.Lift
                             Data.Random.Source.Internal.Prim.Prim
                             Data.Functor.Identity.Identity
                             a6
                           -> (a6 -> b) -> b ->
                 eta1 PhonemeGen.makePlaces_eta12) -}
cc117bce0391c55026321f5b114843cf
  makePlaces62 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
5fd7cf3dcdd5a377211295314336a58f
  makePlaces7 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces8) -}
ca45e6daf67b46ecd1ccc2f7bc6168bc
  makePlaces8 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces21
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces9) -}
e3da24f2c1f57114b1926152c5ddcf83
  makePlaces9 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces10
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
32a66e7022b68ce02379650c0d340e4f
  makePlaces_eta ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces7) -}
7eb70588c10a25d854401ba3c6f15347
  makePlaces_eta1 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.GLOTTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
45d08c70264a2430b0ee39c5643e1bb1
  makePlaces_eta10 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces56) -}
dc54be26c8da09c48955d0cc3e4ce0d2
  makePlaces_eta11 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.BILABIAL
                   PhonemeGen.makePlaces60) -}
5aca36ff9261686bf308d03f4e08d1d3
  makePlaces_eta12 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LABIAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
39834e0c0dd848f0357cfcf8eee6db7e
  makePlaces_eta2 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LARYNGEAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
3aa327ee5cc7c39ef5f949c69b054a03
  makePlaces_eta3 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces24) -}
46238b53c51499a249aeb773cd8124fc
  makePlaces_eta4 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.UVULAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
d352bc124aa40676f89cbd98873dd131
  makePlaces_eta5 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.VELAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
d28ac053c853ab320f945697005ab3dd
  makePlaces_eta6 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DORSAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
e8163d307cc1dec4f1f07dd0fe59ebb9
  makePlaces_eta7 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces40) -}
6eaabb51ed0b2f24f857dca97394e2d2
  makePlaces_eta8 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.RETROFLEX
                   (GHC.Types.[] @ PhonemeData.Place)) -}
31c31a4bc35b91a1249b3182da904b1c
  makePlaces_eta9 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.CORONAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
c9c510edf0a121daec0b046c928abcf7
  makePlaces_go :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
85643dfbf593cecdfda2fe04e5854358
  makePlaces_go1 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
243fd6d58d5d756d624ba47dab9f6c32
  makePlaces_go2 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
a5f4bc9892e8d0b8acbe78fb0f6739b8
  makePlaces_go3 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
91053cb864305776802177b904d8b789
  makePlaces_m1 ::
    Data.RVar.RVarT Data.Functor.Identity.Identity GHC.Types.Int
  {- Unfolding: (Data.Random.Distribution.Uniform.$w$sintegralUniform'
                   @ Data.Functor.Identity.Identity
                   2
                   3) -}
4ec6683a93c76ee881df609c49dd0c7c
  makeRoundedneses :: Data.RVar.RVar [PhonemeData.Roundedness]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses1) -}
9779fd34c0a47af1477eed52bac1b5b2
  makeRoundedneses1 :: [[PhonemeData.Roundedness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses5
                   PhonemeGen.makeRoundedneses2) -}
6465ee8ada7e7e26afbc27cbf06b39ea
  makeRoundedneses2 :: [[PhonemeData.Roundedness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses3
                   (GHC.Types.[] @ [PhonemeData.Roundedness])) -}
8d8d7a074004d922d94051948e579232
  makeRoundedneses3 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.UNROUNDED
                   PhonemeGen.makeRoundedneses4) -}
6e77b764a2fa68c2cc2dde8991fe9c1b
  makeRoundedneses4 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.ROUNDED
                   (GHC.Types.[] @ PhonemeData.Roundedness)) -}
62112dc09dcc3640f4aab481022f0709
  makeRoundedneses5 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.DEFAULT
                   (GHC.Types.[] @ PhonemeData.Roundedness)) -}
acc5daf594c5011b6f5d94b2db74629b
  makeTones :: Data.RVar.RVar [PhonemeData.Tone]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones1) -}
5b9402a7fa76ce2ebc17b1b7049ad0e9
  makeTones1 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones22
                   PhonemeGen.makeTones2) -}
a517afb176a1c2a887b0a3a9bd7ac1bf
  makeTones10 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones43
                   PhonemeGen.makeTones11) -}
1bb23b85be4dff7222797d3f74a52a14
  makeTones11 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones39
                   PhonemeGen.makeTones12) -}
6e214c79555d176effee04e939807413
  makeTones12 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones34
                   PhonemeGen.makeTones13) -}
c6e38649fa62d9eaa34e1bdd1b7ca83d
  makeTones13 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones29
                   PhonemeGen.makeTones14) -}
4e369535e2a9996444bc5e20d333b9a0
  makeTones14 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones23
                   PhonemeGen.makeTones15) -}
47b486715cbf36b9f8956ddcd37c803f
  makeTones15 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones16
                   (GHC.Types.[] @ [PhonemeData.Tone])) -}
b0a26b425a1cbf3169f3e0c1ea0c4449
  makeTones16 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones17) -}
750c6591d71819f9ab740f1227b27aea
  makeTones17 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones18) -}
f82c0312fc012b6b2bbdabfb13c5fe16
  makeTones18 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones19) -}
64249ec4397e06e50b9d84b689a98194
  makeTones19 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.TOPT
                   PhonemeGen.makeTones20) -}
4123a3deb7bbc73313768948a9873d95
  makeTones2 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones63
                   PhonemeGen.makeTones3) -}
6e6a1577e7edb563e1b94df24b68d905
  makeTones20 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones21) -}
644430ec14822f25c60745adc9103f4c
  makeTones21 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones22) -}
8ed6f7a517952ef8063fbe9dcef7fcec
  makeTones22 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.NONET
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
2c6141dd966d6b3626cc12f352ce29aa
  makeTones23 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones24) -}
16e130f26d0fbbaf67bf5cae6c67b852
  makeTones24 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones25) -}
3b02acf58b98ee693fa1b0d6752c19ab
  makeTones25 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones26) -}
ee3f02b74a9c786919149a1f78b2813f
  makeTones26 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.TOPT
                   PhonemeGen.makeTones27) -}
5992ea51607809601b9993c3e703297e
  makeTones27 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones28) -}
288cca6d583a1c654ee5d3d3f91acd50
  makeTones28 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
d464f57e094375b7290d4ae48500f886
  makeTones29 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones30) -}
bf4dd1f9b90646447b9dc2f0e24b70ab
  makeTones3 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones61
                   PhonemeGen.makeTones4) -}
7f20e594c1d86cf7a566e0a43ebe0a12
  makeTones30 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones31) -}
734c1b8d7b00e1c81590ebcc24c3b674
  makeTones31 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones32) -}
d0f807b090baa874ea9cf522e007425f
  makeTones32 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones33) -}
5350ca9223bbc1b39debb6aab1bc4211
  makeTones33 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones22) -}
799d1783af3b7ee49a99f7b4e433d0fa
  makeTones34 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones35) -}
fcc8b83a4c2354d2f5120c63eef3d0b7
  makeTones35 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones36) -}
89a4a18ff89b25ac15a74a2f7fdd49d7
  makeTones36 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones37) -}
687ecfd1176367a2d5080e832b217ebf
  makeTones37 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones38) -}
7d0a29d2f46112e2e1917a43bfe04852
  makeTones38 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
6990c198703c7cf3be5538cb807f260d
  makeTones39 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones40) -}
e56afeb3309989fb4fea4616adec727a
  makeTones4 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones60
                   PhonemeGen.makeTones5) -}
2c5e56f05d4f20be0409791f953b43fa
  makeTones40 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LFALLT
                   PhonemeGen.makeTones41) -}
1670318431d16979cf6ff73c206810bc
  makeTones41 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HRISET
                   PhonemeGen.makeTones42) -}
99e92b8bad56abb76e3508cf8527c839
  makeTones42 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones22) -}
1a5cebcb366322f329b4092082bbfa5b
  makeTones43 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones44) -}
867d9549d0ad88f53d17694603bc93b8
  makeTones44 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LFALLT
                   PhonemeGen.makeTones45) -}
3776513a6a8c14e0dfbdea1d81d6614b
  makeTones45 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HRISET
                   PhonemeGen.makeTones46) -}
974e3ddb9328cd876d149b683b8e348b
  makeTones46 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
b520864208918d485255bb57db983ec7
  makeTones47 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones48) -}
3f23bf5fc9f2abefec5ac30ad0564da7
  makeTones48 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones49) -}
8031e9f9fc2694563b23209547975679
  makeTones49 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones21) -}
956e8cd0da72d01cc725a140789ce771
  makeTones5 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones59
                   PhonemeGen.makeTones6) -}
ca718303cbdbd2e89fc0dd3acfebc8a4
  makeTones50 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones51) -}
6b87f69742a0874a1783ff9602b1da95
  makeTones51 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones52) -}
2c2a881c9be0b9a6b382633bf336f6e2
  makeTones52 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones28) -}
492ad786180ead1192d6d6575acf33b8
  makeTones53 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones54) -}
70e1412f07005cb66ba6cf7ce857d41b
  makeTones54 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones55) -}
c8feac89c19b791dcf14939bc275384d
  makeTones55 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones22) -}
9c6f3ad5e7d8a931ba0881d2b3d14013
  makeTones56 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones57) -}
295573f2d6e657ec5544ec05585039b5
  makeTones57 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones58) -}
7b85f0da7186873ff0b63697a9e462e3
  makeTones58 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
751a5f76f328824e9e97c6b7690ed3d0
  makeTones59 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones55) -}
e7d210e500f7ef008665604f549e2944
  makeTones6 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones56
                   PhonemeGen.makeTones7) -}
2eeb326b81c30ab93cdd7aea6e1905d0
  makeTones60 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones21) -}
a99773ba7578ebb2f8bc1f9d2b7645e8
  makeTones61 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones62) -}
9b5720abd375da5f0351353778a024fe
  makeTones62 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.PEAKT
                   PhonemeGen.makeTones22) -}
aadf81fcd32a5331440012f11df73df0
  makeTones63 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones21) -}
3a2c23c24eb3389bf12e451b87e48356
  makeTones7 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones53
                   PhonemeGen.makeTones8) -}
5ef78d38d2bb9b586c69d9b87f04cd2e
  makeTones8 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones50
                   PhonemeGen.makeTones9) -}
7416005e5cb7125380f774a09bf6c79b
  makeTones9 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones47
                   PhonemeGen.makeTones10) -}
a32ecad9637ece140afc016f54bd4234
  makeVowels ::
    [PhonemeData.Height]
    -> [PhonemeData.Backness]
    -> [PhonemeData.Roundedness]
    -> [PhonemeData.Length]
    -> [PhonemeData.Tone]
    -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 5, Strictness: <L,1*U><L,U><L,U><L,U><L,U>,
     Unfolding: (\ heights :: [PhonemeData.Height]
                   backs :: [PhonemeData.Backness]
                   rounds :: [PhonemeData.Roundedness]
                   lengths :: [PhonemeData.Length]
                   tones :: [PhonemeData.Tone] ->
                 let {
                   eta :: [PhonemeData.Phoneme]
                   = letrec {
                       go2 :: [PhonemeData.Height] -> [PhonemeData.Phoneme]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ ds :: [PhonemeData.Height] ->
                         case ds of wild {
                           [] -> GHC.Types.[] @ PhonemeData.Phoneme
                           : y ys
                           -> let {
                                ys1 :: [PhonemeData.Phoneme] = go2 ys
                              } in
                              letrec {
                                go3 :: [PhonemeData.Backness] -> [PhonemeData.Phoneme]
                                  {- Arity: 1, Strictness: <S,1*U> -}
                                = \ ds1 :: [PhonemeData.Backness] ->
                                  case ds1 of wild1 {
                                    [] -> ys1
                                    : y1 ys2
                                    -> let {
                                         z :: [PhonemeData.Phoneme] = go3 ys2
                                       } in
                                       letrec {
                                         go4 :: [PhonemeData.Roundedness] -> [PhonemeData.Phoneme]
                                           {- Arity: 1, Strictness: <S,1*U> -}
                                         = \ ds2 :: [PhonemeData.Roundedness] ->
                                           case ds2 of wild2 {
                                             [] -> z
                                             : y2 ys3
                                             -> let {
                                                  z1 :: [PhonemeData.Phoneme] = go4 ys3
                                                } in
                                                letrec {
                                                  go5 :: [PhonemeData.Length]
                                                         -> [PhonemeData.Phoneme]
                                                    {- Arity: 1, Strictness: <S,1*U> -}
                                                  = \ ds3 :: [PhonemeData.Length] ->
                                                    case ds3 of wild3 {
                                                      [] -> z1
                                                      : y3 ys4
                                                      -> let {
                                                           z2 :: [PhonemeData.Phoneme] = go5 ys4
                                                         } in
                                                         letrec {
                                                           go6 :: [PhonemeData.Tone]
                                                                  -> [PhonemeData.Phoneme]
                                                             {- Arity: 1, Strictness: <S,1*U> -}
                                                           = \ ds4 :: [PhonemeData.Tone] ->
                                                             case ds4 of wild4 {
                                                               [] -> z2
                                                               : y4 ys5
                                                               -> GHC.Types.:
                                                                    @ PhonemeData.Phoneme
                                                                    (PhonemeData.Vowel
                                                                       y
                                                                       y1
                                                                       y2
                                                                       y3
                                                                       y4
                                                                       (PhonemeGen.retrieveVSymbol
                                                                          y
                                                                          y1
                                                                          y2
                                                                          y3
                                                                          y4))
                                                                    (go6 ys5) }
                                                         } in
                                                         go6 tones }
                                                } in
                                                go5 lengths }
                                       } in
                                       go4 rounds }
                              } in
                              go3 backs }
                     } in
                     go2 heights
                 } in
                 (\ @ b
                    eta1 :: [PhonemeData.Phoneme] -> b
                    eta2 :: forall a6.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a6
                            -> (a6 -> b) -> b ->
                  Data.RVar.$fApplicativeRVarT3
                    @ Data.Functor.Identity.Identity
                    @ [PhonemeData.Phoneme]
                    eta
                    @ b
                    eta1
                    eta2)
                   `cast`
                 (Trans
                      (Sym (Control.Monad.Prompt.NTCo:Prompt[0]
                                <Control.Monad.Prompt.Lift
                                   Data.Random.Source.Internal.Prim.Prim
                                   Data.Functor.Identity.Identity>_R
                                <[PhonemeData.Phoneme]>_R))
                      (Trans
                           (Sym (Control.Monad.Prompt.NTCo:PromptT[0]
                                     <Data.Random.Source.Internal.Prim.Prim>_R
                                     <Data.Functor.Identity.Identity>_R))
                           (Sym (Data.RVar.NTCo:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Phoneme]>_N))) -}
e545917152b76fb6babcb1e2875b2034
  retrieveVSymbol ::
    PhonemeData.Height
    -> PhonemeData.Backness
    -> PhonemeData.Roundedness
    -> PhonemeData.Length
    -> PhonemeData.Tone
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U> -}
"SPEC/PhonemeGen $fEq(,) @ Place @ Manner" [ALWAYS] forall $dEq :: GHC.Classes.Eq
                                                                     PhonemeData.Place
                                                           $dEq1 :: GHC.Classes.Eq
                                                                      PhonemeData.Manner
  GHC.Classes.$fEq(,) @ PhonemeData.Place
                      @ PhonemeData.Manner
                      $dEq
                      $dEq1
  = PhonemeGen.$s$fEq(,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

