
==================== FINAL INTERFACE ====================
2016-12-21 17:41:36.071125 UTC

interface con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39:Gen.Grammar 8001
  interface hash: b8094a6f5b290a3a32ac0bd4a4185108
  ABI hash: 261cfcbc2cbe1d586df53e3fe5c5cf75
  export-list hash: b78b1621a5f74acfae880aca33dd4ad0
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: fbb7bb6b86ae8faca780181c3078ce45
  sig of: Nothing
  used TH splices: False
  where
exports:
  Gen.Grammar.makeGrammar
module dependencies: Data.Grammar Data.Inflection Data.Other
                     Data.Phoneme
package dependencies: MonadPrompt-1.0.0.5@MonadPrompt-1.0.0.5-DSJ4febv4ITH7w1gOjdDZE
                      MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      erf-2.0.0.0@erf-2.0.0.0-9HTdBV7htNjASgIJAT55AC
                      flexible-defaults-0.0.1.2@flexible-defaults-0.0.1.2-1H2pkAjuTF1KghZBVsL2zl
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      math-functions-0.2.1.0@math-functions-0.2.1.0-JE0wcV77zWeIiF13ulGtAh
                      mersenne-random-pure64-0.2.0.5@mersenne-random-pure64-0.2.0.5-F5a2mcFFCTQJXAM4TYDSBs
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-LMmPnBqFcyXKNTZwO31mEb
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-extras-0.19@random-extras-0.19-CVrKkFX7Wr28Gjqnh35lrd
                      random-fu-0.2.7.0@random-fu-0.2.7.0-CQ0Lr6a3wRjKfR0NneZKnx
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8
                      rvar-0.2.0.3@rvar-0.2.0.3-830TjBaI3UX5PWiddvPaWF
                      stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      syb-0.6@syb-0.6-C65vWCsht6A8uLstpQIXyj template-haskell-2.11.0.0
                      th-extras-0.0.0.4@th-extras-0.0.0.4-65k7Dg54W2KxpzDoCAUbA
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39:Data.Inflection
         mersenne-random-pure64-0.2.0.5@mersenne-random-pure64-0.2.0.5-F5a2mcFFCTQJXAM4TYDSBs:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.IO
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.MWC
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.PureMT
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.StdGen
         stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq:Data.StateRef.Instances
         stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         syb-0.6@syb-0.6-C65vWCsht6A8uLstpQIXyj:Data.Generics.Instances
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         math-functions-0.2.1.0@math-functions-0.2.1.0-JE0wcV77zWeIiF13ulGtAh:Numeric.RootFinding
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-LMmPnBqFcyXKNTZwO31mEb:System.Random.MWC
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  Data.Grammar e3bdf85eebd04aee9ead3a06df4aad28
  exports: 0062e624f7e52b2eec78ca7e68e0f617
  CompFinal 4cf50c45067614dbe810800371910c54
  CompInitial dbf7eff80c59ffa9d6f8f0ad61fed4b4
  Grammar cd4b04e0a0814c95a5c272a9bf89080f
  Grammar 68da53a8367c3a884597fdcc112c08c3
  NoAffixHop d680fdd3178a55d293a785870d7d9e97
  NoItoCMove f5fb6b7e3c790f3974ca998bc691f7e4
  NoNullSub c1bac951278f11466f6d2d7a15ed2fbe
  NoNullTop 11dd10f19754694116b7c03e3b2a99eb
  NoQuesInv efeb33d3c76cba1b6942ad00bb0f506c
  NoTopMark 7b9d043b64d8d86f106d38a20fe70f39
  NoVtoIMove ef956689d9bedff617bedd69e0128778
  NoWHMove 59c40d00a4e3f693a50a80c84877eb43
  ObjFinal e8e697626807d5e14b20e9c3d0c8dbe2
  ObjInitial 117be17860a0eacdfd564f7b5733c45d
  OblAffixHop ce4831a583c5c129ca2d71b63fc0f00e
  OblItoCMove 595bf5ad375055ba6dd13be3f664cbee
  OblQuesInv 2ed2df11b7d924d5dcf9895d83538004
  OblTopMark 0a9f45a1b010feeee685aabf6fb78479
  OblTopic dba6a8c66a7dba9dd2dd905bcbbd77ad
  OblVtoIMove ff2c6bb9a8168626da69f63a662ccd9a
  OblWHMove 4fd96600e50bde0d0aa8fd90a9b0f7e0
  OptNullSub d8c61a7ad973787261c5e096ca7bd06c
  OptNullTop c4f5fcf7f03b67f2028516157becf3e1
  OptTopic a3224037cee23f0fdb64f320324df254
  PiedPipe 621eaecaaaab83cdfb04979962e95910
  PrepStrand efd8d4acbba15f5b15c3bde26b193708
  SubFinal 15e4a8491b70e36e928d9f6c94bf18ad
  SubInitial 65abc5a07f19660bb7ac6866c4d77497
import  -/  random-extras-0.19@random-extras-0.19-CVrKkFX7Wr28Gjqnh35lrd:Data.Random.Extras 29c24169732e6d9b861a3e34bb12d853
import  -/  random-fu-0.2.7.0@random-fu-0.2.7.0-CQ0Lr6a3wRjKfR0NneZKnx:Data.Random 8883d063189e353ce779cba72d37ba19
import  -/  rvar-0.2.0.3@rvar-0.2.0.3-830TjBaI3UX5PWiddvPaWF:Data.RVar af4b152c68035decd69925a9162e78b3
57ec1b57bfc7db20f4487e3a9f523cab
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Gen.Grammar.$trModule2
                   Gen.Grammar.$trModule1) -}
5365beb9c25c864ad6bc18526a41af82
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Gen.Grammar"#) -}
f7c94d2a1260519d453a5cec6edcd57b
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39"#) -}
b491dacb18f4cf216404616929bbfb76
  makeGrammar :: Data.RVar.RVar Data.Grammar.Grammar
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                Gen.Grammar.makeGrammar1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Prompt.N:Prompt[0]
                               <Control.Monad.Prompt.Lift
                                  Data.Random.Source.Internal.Prim.Prim
                                  Data.Functor.Identity.Identity>_R
                               <Data.Grammar.Grammar>_R))
                     (Trans
                          (Sym (Control.Monad.Prompt.N:PromptT[0]
                                    <Data.Random.Source.Internal.Prim.Prim>_R
                                    <Data.Functor.Identity.Identity>_R))
                          (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <Data.Grammar.Grammar>_N)) -}
3abeaa1dbb9295c397c1dab80981b520
  makeGrammar1 ::
    (Data.Grammar.Grammar -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   (eta :: Data.Grammar.Grammar -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 Gen.Grammar.makeGrammar35
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.Grammar.SubjectInitial>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.Grammar.SubjectInitial>_R))
                   @ b1
                   (\ (x :: Data.Grammar.SubjectInitial) ->
                    case x of x1 { DEFAULT ->
                    Gen.Grammar.makeGrammar32
                      `cast`
                    (Trans
                         (Trans
                              (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                              (Control.Monad.Prompt.N:PromptT[0]
                                   <Data.Random.Source.Internal.Prim.Prim>_R
                                   <Data.Functor.Identity.Identity>_R) <Data.Grammar.ObjectFinal>_N)
                         (Control.Monad.Prompt.N:Prompt[0]
                              <Control.Monad.Prompt.Lift
                                 Data.Random.Source.Internal.Prim.Prim
                                 Data.Functor.Identity.Identity>_R
                              <Data.Grammar.ObjectFinal>_R))
                      @ b1
                      (\ (x2 :: Data.Grammar.ObjectFinal) ->
                       case x2 of x3 { DEFAULT ->
                       Gen.Grammar.makeGrammar29
                         `cast`
                       (Trans
                            (Trans
                                 (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                 (Control.Monad.Prompt.N:PromptT[0]
                                      <Data.Random.Source.Internal.Prim.Prim>_R
                                      <Data.Functor.Identity.Identity>_R) <Data.Grammar.ComplementizerInitial>_N)
                            (Control.Monad.Prompt.N:Prompt[0]
                                 <Control.Monad.Prompt.Lift
                                    Data.Random.Source.Internal.Prim.Prim
                                    Data.Functor.Identity.Identity>_R
                                 <Data.Grammar.ComplementizerInitial>_R))
                         @ b1
                         (\ (x4 :: Data.Grammar.ComplementizerInitial) ->
                          case x4 of x5 { DEFAULT ->
                          Gen.Grammar.makeGrammar22
                            `cast`
                          (Trans
                               (Trans
                                    (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                    (Control.Monad.Prompt.N:PromptT[0]
                                         <Data.Random.Source.Internal.Prim.Prim>_R
                                         <Data.Functor.Identity.Identity>_R) <(Data.Grammar.VtoIMovement,
                                                                               Data.Grammar.AffixHopping)>_N)
                               (Control.Monad.Prompt.N:Prompt[0]
                                    <Control.Monad.Prompt.Lift
                                       Data.Random.Source.Internal.Prim.Prim
                                       Data.Functor.Identity.Identity>_R
                                    <(Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)>_R))
                            @ b1
                            (\ (x6 :: (Data.Grammar.VtoIMovement,
                                       Data.Grammar.AffixHopping)) ->
                             case x6 of x7 { (,) ipv ipv1 ->
                             Gen.Grammar.makeGrammar17
                               `cast`
                             (Trans
                                  (Trans
                                       (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                       (Control.Monad.Prompt.N:PromptT[0]
                                            <Data.Random.Source.Internal.Prim.Prim>_R
                                            <Data.Functor.Identity.Identity>_R) <(Data.Grammar.ObligatoryTopic,
                                                                                  Data.Grammar.NullSubject,
                                                                                  Data.Grammar.NullTopic)>_N)
                                  (Control.Monad.Prompt.N:Prompt[0]
                                       <Control.Monad.Prompt.Lift
                                          Data.Random.Source.Internal.Prim.Prim
                                          Data.Functor.Identity.Identity>_R
                                       <(Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
                                         Data.Grammar.NullTopic)>_R))
                               @ b1
                               (\ (x8 :: (Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
                                          Data.Grammar.NullTopic)) ->
                                case x8 of x9 { (,,) ipv2 ipv3 ipv4 ->
                                Gen.Grammar.makeGrammar14
                                  `cast`
                                (Trans
                                     (Trans
                                          (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                          (Control.Monad.Prompt.N:PromptT[0]
                                               <Data.Random.Source.Internal.Prim.Prim>_R
                                               <Data.Functor.Identity.Identity>_R) <Data.Grammar.TopicMarking>_N)
                                     (Control.Monad.Prompt.N:Prompt[0]
                                          <Control.Monad.Prompt.Lift
                                             Data.Random.Source.Internal.Prim.Prim
                                             Data.Functor.Identity.Identity>_R
                                          <Data.Grammar.TopicMarking>_R))
                                  @ b1
                                  (\ (x10 :: Data.Grammar.TopicMarking) ->
                                   case x10 of x11 { DEFAULT ->
                                   Gen.Grammar.makeGrammar11
                                     `cast`
                                   (Trans
                                        (Trans
                                             (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                             (Control.Monad.Prompt.N:PromptT[0]
                                                  <Data.Random.Source.Internal.Prim.Prim>_R
                                                  <Data.Functor.Identity.Identity>_R) <Data.Grammar.ItoCMovement>_N)
                                        (Control.Monad.Prompt.N:Prompt[0]
                                             <Control.Monad.Prompt.Lift
                                                Data.Random.Source.Internal.Prim.Prim
                                                Data.Functor.Identity.Identity>_R
                                             <Data.Grammar.ItoCMovement>_R))
                                     @ b1
                                     (\ (x12 :: Data.Grammar.ItoCMovement) ->
                                      case x12 of x13 { DEFAULT ->
                                      Gen.Grammar.makeGrammar8
                                        `cast`
                                      (Trans
                                           (Trans
                                                (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                                (Control.Monad.Prompt.N:PromptT[0]
                                                     <Data.Random.Source.Internal.Prim.Prim>_R
                                                     <Data.Functor.Identity.Identity>_R) <Data.Grammar.WHMovementObligatory>_N)
                                           (Control.Monad.Prompt.N:Prompt[0]
                                                <Control.Monad.Prompt.Lift
                                                   Data.Random.Source.Internal.Prim.Prim
                                                   Data.Functor.Identity.Identity>_R
                                                <Data.Grammar.WHMovementObligatory>_R))
                                        @ b1
                                        (\ (x14 :: Data.Grammar.WHMovementObligatory) ->
                                         case x14 of x15 { DEFAULT ->
                                         Gen.Grammar.makeGrammar5
                                           `cast`
                                         (Trans
                                              (Trans
                                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                                   (Control.Monad.Prompt.N:PromptT[0]
                                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                                        <Data.Functor.Identity.Identity>_R) <Data.Grammar.PiedPiping>_N)
                                              (Control.Monad.Prompt.N:Prompt[0]
                                                   <Control.Monad.Prompt.Lift
                                                      Data.Random.Source.Internal.Prim.Prim
                                                      Data.Functor.Identity.Identity>_R
                                                   <Data.Grammar.PiedPiping>_R))
                                           @ b1
                                           (\ (x16 :: Data.Grammar.PiedPiping) ->
                                            case x16 of x17 { DEFAULT ->
                                            Gen.Grammar.makeGrammar2
                                              `cast`
                                            (Trans
                                                 (Trans
                                                      (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                                      (Control.Monad.Prompt.N:PromptT[0]
                                                           <Data.Random.Source.Internal.Prim.Prim>_R
                                                           <Data.Functor.Identity.Identity>_R) <Data.Grammar.QuestionInversion>_N)
                                                 (Control.Monad.Prompt.N:Prompt[0]
                                                      <Control.Monad.Prompt.Lift
                                                         Data.Random.Source.Internal.Prim.Prim
                                                         Data.Functor.Identity.Identity>_R
                                                      <Data.Grammar.QuestionInversion>_R))
                                              @ b1
                                              (\ (x18 :: Data.Grammar.QuestionInversion) ->
                                               case x18 of x19 { DEFAULT ->
                                               eta
                                                 (Data.Grammar.Grammar
                                                    x1
                                                    x3
                                                    x5
                                                    ipv
                                                    ipv1
                                                    ipv3
                                                    ipv2
                                                    ipv4
                                                    x11
                                                    x13
                                                    x15
                                                    x17
                                                    x19) })
                                              eta1 })
                                           eta1 })
                                        eta1 })
                                     eta1 })
                                  eta1 })
                               eta1 })
                            eta1 })
                         eta1 })
                      eta1 })
                   eta1) -}
e01364f1c1137f08b1e17f5c60c8411a
  makeGrammar10 :: [Data.Grammar.WHMovementObligatory]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.WHMovementObligatory
                   Data.Grammar.OblWHMove
                   (GHC.Types.[] @ Data.Grammar.WHMovementObligatory)) -}
197c0653012d2a88b95c9f5d1c8cacbe
  makeGrammar11 :: Data.RVar.RVar Data.Grammar.ItoCMovement
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.ItoCMovement
                   Gen.Grammar.makeGrammar12) -}
982c3d9212ef2313583cc7bce29e1446
  makeGrammar12 :: [Data.Grammar.ItoCMovement]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ItoCMovement
                   Data.Grammar.NoItoCMove
                   Gen.Grammar.makeGrammar13) -}
aeb71056249298a032d3580926b4f811
  makeGrammar13 :: [Data.Grammar.ItoCMovement]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ItoCMovement
                   Data.Grammar.OblItoCMove
                   (GHC.Types.[] @ Data.Grammar.ItoCMovement)) -}
6fc5544ef5d82ee0c59f88804910c17b
  makeGrammar14 :: Data.RVar.RVar Data.Grammar.TopicMarking
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.TopicMarking
                   Gen.Grammar.makeGrammar15) -}
3183c0b5698d34a5edbaf8d2c7e835e7
  makeGrammar15 :: [Data.Grammar.TopicMarking]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.TopicMarking
                   Data.Grammar.NoTopMark
                   Gen.Grammar.makeGrammar16) -}
f05ee387a9a52e249c4b1777f6fa2823
  makeGrammar16 :: [Data.Grammar.TopicMarking]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.TopicMarking
                   Data.Grammar.OblTopMark
                   (GHC.Types.[] @ Data.Grammar.TopicMarking)) -}
775fc15b8713d6ed8053960a4af0cf9b
  makeGrammar17 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
       Data.Grammar.NullTopic)
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
                      Data.Grammar.NullTopic)
                   Gen.Grammar.makeGrammar18) -}
be8e46bfbcf6fb86e18d78b2c5cc4c2e
  makeGrammar18 ::
    [(Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
      Data.Grammar.NullTopic)]
  {- Unfolding: (GHC.Types.:
                   @ (Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
                      Data.Grammar.NullTopic)
                   Gen.Grammar.makeGrammar21
                   Gen.Grammar.makeGrammar19) -}
91bbf8520f930c54f3622417554e1e9a
  makeGrammar19 ::
    [(Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
      Data.Grammar.NullTopic)]
  {- Unfolding: (Gen.Grammar.makeGrammar_go
                   Gen.Grammar.makeGrammar_xs) -}
8bee42bfdbda5788391d62a756ba0402
  makeGrammar2 :: Data.RVar.RVar Data.Grammar.QuestionInversion
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.QuestionInversion
                   Gen.Grammar.makeGrammar3) -}
0daab6dc1d12d08452f46818725b4ffc
  makeGrammar20 :: [Data.Grammar.NullSubject]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.NullSubject
                   Data.Grammar.OptNullSub
                   (GHC.Types.[] @ Data.Grammar.NullSubject)) -}
245adf7e9f716ecfa03eacc9df34b32d
  makeGrammar21 ::
    (Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
     Data.Grammar.NullTopic)
  {- HasNoCafRefs,
     Unfolding: ((Data.Grammar.OblTopic, Data.Grammar.NoNullSub,
                  Data.Grammar.NoNullTop)) -}
587a696d32eed36881f2cd11c0ef0114
  makeGrammar22 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
                   Gen.Grammar.makeGrammar23) -}
09908d49d6953d5f21b4902c3171faad
  makeGrammar23 ::
    [(Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
                   Gen.Grammar.makeGrammar28
                   Gen.Grammar.makeGrammar24) -}
23cf4986fd1efec15578f06f7855a62a
  makeGrammar24 ::
    [(Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
                   Gen.Grammar.makeGrammar27
                   Gen.Grammar.makeGrammar25) -}
da83db11310f42644dd445447f880918
  makeGrammar25 ::
    [(Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
                   Gen.Grammar.makeGrammar26
                   (GHC.Types.[]
                      @ (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping))) -}
f827891e5c0382c6c962f636c18a7ea1
  makeGrammar26 ::
    (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
  {- HasNoCafRefs,
     Unfolding: ((Data.Grammar.NoVtoIMove, Data.Grammar.OblAffixHop)) -}
6515aca45d1b6b1bfc1c1135f919bea6
  makeGrammar27 ::
    (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
  {- HasNoCafRefs,
     Unfolding: ((Data.Grammar.NoVtoIMove, Data.Grammar.NoAffixHop)) -}
4ff54d570fe1c22aa1884e6b5b568ecf
  makeGrammar28 ::
    (Data.Grammar.VtoIMovement, Data.Grammar.AffixHopping)
  {- HasNoCafRefs,
     Unfolding: ((Data.Grammar.OblVtoIMove, Data.Grammar.NoAffixHop)) -}
cdb866f4de4177b682502e6e7f93ab0c
  makeGrammar29 :: Data.RVar.RVar Data.Grammar.ComplementizerInitial
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.ComplementizerInitial
                   Gen.Grammar.makeGrammar30) -}
ed5835a7194dd22c077e09aef47aa6f1
  makeGrammar3 :: [Data.Grammar.QuestionInversion]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.QuestionInversion
                   Data.Grammar.NoQuesInv
                   Gen.Grammar.makeGrammar4) -}
3327fa823e4fd541a1bf148bb09d86f1
  makeGrammar30 :: [Data.Grammar.ComplementizerInitial]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ComplementizerInitial
                   Data.Grammar.CompInitial
                   Gen.Grammar.makeGrammar31) -}
a02ae6b8cb3cecf3faf685f9904baddb
  makeGrammar31 :: [Data.Grammar.ComplementizerInitial]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ComplementizerInitial
                   Data.Grammar.CompFinal
                   (GHC.Types.[] @ Data.Grammar.ComplementizerInitial)) -}
2f4e0a7bfac74663df187b146c07c24b
  makeGrammar32 :: Data.RVar.RVar Data.Grammar.ObjectFinal
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.ObjectFinal
                   Gen.Grammar.makeGrammar33) -}
5fa0c9e44fd046511b3dc194012d2683
  makeGrammar33 :: [Data.Grammar.ObjectFinal]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ObjectFinal
                   Data.Grammar.ObjFinal
                   Gen.Grammar.makeGrammar34) -}
03cfaea6472b93e19ac2a22f00e313db
  makeGrammar34 :: [Data.Grammar.ObjectFinal]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.ObjectFinal
                   Data.Grammar.ObjInitial
                   (GHC.Types.[] @ Data.Grammar.ObjectFinal)) -}
a255fe65a5c5ea68dd1f0849fc9675ab
  makeGrammar35 :: Data.RVar.RVar Data.Grammar.SubjectInitial
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.SubjectInitial
                   Gen.Grammar.makeGrammar36) -}
b974d972a167673b0a37aebfdc27d947
  makeGrammar36 :: [Data.Grammar.SubjectInitial]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.SubjectInitial
                   Data.Grammar.SubInitial
                   Gen.Grammar.makeGrammar37) -}
98d96e026f1c7c764c81f5821c1c5c50
  makeGrammar37 :: [Data.Grammar.SubjectInitial]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.SubjectInitial
                   Data.Grammar.SubFinal
                   (GHC.Types.[] @ Data.Grammar.SubjectInitial)) -}
dae1e77285503f6a73c0c0333504ba4b
  makeGrammar4 :: [Data.Grammar.QuestionInversion]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.QuestionInversion
                   Data.Grammar.OblQuesInv
                   (GHC.Types.[] @ Data.Grammar.QuestionInversion)) -}
5bb1ee91a4b0b2c7ac62425945bb5c16
  makeGrammar5 :: Data.RVar.RVar Data.Grammar.PiedPiping
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.PiedPiping
                   Gen.Grammar.makeGrammar6) -}
ecf965a898f29edcd4ba5d7c6f022d22
  makeGrammar6 :: [Data.Grammar.PiedPiping]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.PiedPiping
                   Data.Grammar.PiedPipe
                   Gen.Grammar.makeGrammar7) -}
d26d33b5ee38b59d21b24c625441e96a
  makeGrammar7 :: [Data.Grammar.PiedPiping]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.PiedPiping
                   Data.Grammar.PrepStrand
                   (GHC.Types.[] @ Data.Grammar.PiedPiping)) -}
14a02c7884b0611ad03f75e895ad28ec
  makeGrammar8 :: Data.RVar.RVar Data.Grammar.WHMovementObligatory
  {- Unfolding: (Data.Random.Extras.choice
                   @ Data.Grammar.WHMovementObligatory
                   Gen.Grammar.makeGrammar9) -}
4e8541af5a0098cbb2f05c18fc21ebcc
  makeGrammar9 :: [Data.Grammar.WHMovementObligatory]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.WHMovementObligatory
                   Data.Grammar.NoWHMove
                   Gen.Grammar.makeGrammar10) -}
f002caa22edc2de18032594c61032e06
  makeGrammar_go ::
    [Data.Grammar.NullSubject]
    -> [(Data.Grammar.ObligatoryTopic, Data.Grammar.NullSubject,
         Data.Grammar.NullTopic)]
  {- Arity: 1, Strictness: <S,1*U> -}
9b46eb1fcd7087b3cbc46fc1385edda2
  makeGrammar_xs :: [Data.Grammar.NullSubject]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Data.Grammar.NullSubject
                   Data.Grammar.NoNullSub
                   Gen.Grammar.makeGrammar20) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

