
==================== FINAL INTERFACE ====================
2016-12-09 19:39:37.950156 UTC

interface con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39:PhonemeGen 8001
  interface hash: f917654cfef0e1da7b7fc28a2d041114
  ABI hash: 9ef4397691f89ead4de0bc767e9934c4
  export-list hash: 3942bec7681d5e50116e27ae55536a75
  orphan hash: a6bc9f31d24cb90de952c046c09bf059
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  PhonemeGen.makeBacknesses
  PhonemeGen.makeConsonants
  PhonemeGen.makeDiphInventory
  PhonemeGen.makeHeights
  PhonemeGen.makeLengths
  PhonemeGen.makeManners
  PhonemeGen.makePhonations
  PhonemeGen.makePlaces
  PhonemeGen.makeRoundedneses
  PhonemeGen.makeTones
  PhonemeGen.makeVowels
module dependencies: PhonemeData
package dependencies: MonadPrompt-1.0.0.5@MonadPrompt-1.0.0.5-DSJ4febv4ITH7w1gOjdDZE
                      MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov
                      array-0.5.1.1@array-0.5.1.1 base-4.9.0.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      erf-2.0.0.0@erf-2.0.0.0-9HTdBV7htNjASgIJAT55AC
                      flexible-defaults-0.0.1.2@flexible-defaults-0.0.1.2-1H2pkAjuTF1KghZBVsL2zl
                      ghc-boot-th-8.0.1@ghc-boot-th-8.0.1 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      math-functions-0.2.1.0@math-functions-0.2.1.0-JE0wcV77zWeIiF13ulGtAh
                      mersenne-random-pure64-0.2.0.5@mersenne-random-pure64-0.2.0.5-F5a2mcFFCTQJXAM4TYDSBs
                      monad-loops-0.4.3@monad-loops-0.4.3-1xZFtRVMQPC4X8bjTBWqNi
                      mtl-2.2.1@mtl-2.2.1-6qsR1PHUy5lL47Hpoa4jCM
                      mwc-random-0.13.5.0@mwc-random-0.13.5.0-LMmPnBqFcyXKNTZwO31mEb
                      old-locale-1.0.0.7@old-locale-1.0.0.7-6glXNhHF891B41ZfuI8hU8
                      old-time-1.1.0.3@old-time-1.1.0.3-IcvdkJUsE9M8t3io8peAEp
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa
                      random-1.1@random-1.1-54KmMHXjttlERYcr1mvsAe
                      random-extras-0.19@random-extras-0.19-CVrKkFX7Wr28Gjqnh35lrd
                      random-fu-0.2.7.0@random-fu-0.2.7.0-CQ0Lr6a3wRjKfR0NneZKnx
                      random-shuffle-0.0.4@random-shuffle-0.0.4-LfeDYNPfwrQ2o9p6tw2M9l
                      random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8
                      rvar-0.2.0.3@rvar-0.2.0.3-830TjBaI3UX5PWiddvPaWF
                      stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq
                      stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF
                      syb-0.6@syb-0.6-C65vWCsht6A8uLstpQIXyj template-haskell-2.11.0.0
                      th-extras-0.0.0.4@th-extras-0.0.0.4-65k7Dg54W2KxpzDoCAUbA
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6
orphans: MonadRandom-0.4.2.3@MonadRandom-0.4.2.3-8TfCm6PGvGYB7omozORhov:Control.Monad.Random
         base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         mersenne-random-pure64-0.2.0.5@mersenne-random-pure64-0.2.0.5-F5a2mcFFCTQJXAM4TYDSBs:System.Random.Mersenne.Pure64
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.IO
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.MWC
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.PureMT
         random-source-0.3.0.6@random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8:Data.Random.Source.StdGen
         stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq:Data.StateRef.Instances
         stateref-0.3@stateref-0.3-3PlselgQchu2fixnOT7uWq:Data.StateRef.Instances.STM
         stm-2.4.4.1@stm-2.4.4.1-4z2NRWnB0NIIUvSJsHW0kF:Control.Monad.STM
         syb-0.6@syb-0.6-C65vWCsht6A8uLstpQIXyj:Data.Generics.Instances
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Complex base-4.9.0.0:Data.Either
                         base-4.9.0.0:Data.Functor.Const base-4.9.0.0:Data.Functor.Identity
                         base-4.9.0.0:Data.List.NonEmpty base-4.9.0.0:Data.Monoid
                         base-4.9.0.0:Data.Semigroup base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:Data.Version base-4.9.0.0:Data.Void
                         base-4.9.0.0:GHC.Exts base-4.9.0.0:GHC.Generics
                         base-4.9.0.0:GHC.IO.Exception base-4.9.0.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.1@ghc-boot-th-8.0.1:GHC.LanguageExtensions.Type
                         math-functions-0.2.1.0@math-functions-0.2.1.0-JE0wcV77zWeIiF13ulGtAh:Numeric.RootFinding
                         mwc-random-0.13.5.0@mwc-random-0.13.5.0-LMmPnBqFcyXKNTZwO31mEb:System.Random.MWC
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-Ip44DqhfCp21tTUYbecwa:Control.Monad.Primitive
                         template-haskell-2.11.0.0:Language.Haskell.TH.Syntax
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-BEDZb5o2QOhGbIm6ky7rl6:Data.Vector.Unboxed.Base
import  -/  base-4.9.0.0:Control.Monad 7767aebfd53f0b584cef2fe66ad3986c
import  -/  base-4.9.0.0:Data.Foldable 8aeb682f6c74f97fcf0ace0d608a43ea
import  -/  base-4.9.0.0:Data.Functor 6fc476505db88d678632a4a838125f13
import  -/  base-4.9.0.0:Data.List 49b86831b79b49ce5d4d9416ecba61df
import  -/  base-4.9.0.0:Data.Traversable 7ce5b7ee67475ac3d03ae825b86efd9f
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.List 13d2451194c1c6e53b4f4f07947736dd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  PhonemeData c5c8f3da2226ff98b75ea8cff0a9f4e3
  exports: c443d5b5be953d18447401b2674c832d
  AFFRICATE 5ca186774ccd5d36b3b63dd085d1bcec
  ALVEOLAR ef721b6f310d3853bfbc0970496272f1
  ALVEOLOPALATAL 72ff753dc60ecf0dc54668a4f0122f3b
  APPROXIMANT 0c9cf873aa49341a9f3bbbae0be331e9
  ASPIRATED 0670485a031e484eb95a674ed59d0a7a
  BACK b632c9ac6a998242341c8dda58ec0eb3
  BILABIAL 5c93cd50796772a51f281fa5f6ddb789
  BOTTOMT a2ae3a58e66b139d374648ec1beb019c
  BREATHY 90ab5f98625c6c44494b56f13d42d5ee
  Backness d7d82e642198a794ac3b3638da1bf9f3
  CENTRAL c48febbe2de0f01159888bf0ba56f10d
  CLOSE 9868043b0a50cb6bf957befa7d45fb99
  CLOSEMID 3dd99ce2d51813b5b5b96f7701ad8993
  CORONAL 707e6561314e4d54ca119a77ffdd1549
  CREAKY ff39d73cb9fe3361b406a0e8d5b3023c
  Consonant 75e0f2dc077c8b434bdd2ab120b56e11
  DEFAULT 4109f078012be9c637b04337f449535c
  DENTAL b66873894fe74511a0eeaf94b0272b1c
  DENTIALVEOLAR 21011d6e727f4670b344e530f4780fed
  DIPT 57f07392d3c0d2730cb04980bd996a47
  DORSAL 7cb308234daad9868fa4ccf8d7c2f104
  Diphthong 68a5aed36465de1b7a464b5c9037a12e
  EPIGLOTTAL 39e139c61973245d34510be1a299bbfe
  EPIPHARYNGEAL 418e38426949f0a4b46b16e7239f6321
  FALLT 9183bc825adedea6136322da3e390f9c
  FLAP c56a3834e787b88fc8649dd3262e2f07
  FRICATIVE b8c4cebe970ce9b7278b4f775bf75027
  FRONT 82b585f90542b18fea9c90a2178c4174
  GLOTTAL 2c8d3d832aa76fdf3ecbf68587b2a739
  HFALLT 12cd2103e0078e4c11994abdf8d535fd
  HIGHT 1c79dd0bf8edd10bf496d1f6fbc47f63
  HRISET 15ac102121a02056fa0993ee72165abb
  Height ba05bb435342e1a32b92b81d74410bc0
  LABIAL 9fbd61e3708c1755de05d383cd11b806
  LABIODENTAL 3040e8aaa129f670ca98314a21db05b9
  LAFFRICATE f43b22a664519fefaef143e531d318fb
  LAPPROXIMANT ed71beab1196f873504ecea68fe1fbdd
  LARYNGEAL 70934cb36a8c751d053c4ec248cf6812
  LFALLT f58f28d9afae4e2c5d107c9ee45d3487
  LFLAP 73bc0a31bb5eddf4f8cb44f57cc76460
  LFRICATIVE a3a3463685e56790bf8a83e852dfbc65
  LONG c0ba9c7d22ef8a581c9f1df99b281dcb
  LOWT e7a54bae1a053f6e674e549aa4a3d3bb
  LRISET 74fde13cb88e9416530b4a37d37bb8ad
  Length 60079db4dd97570a8e4fd882d78d3a98
  MID 98a38c1e960372b6c764271622c8c1f9
  MIDT 66b9503a6cd0434eca0a7c0bdb243244
  MODAL 106c8c7d99880956cd6e38d418f1cc54
  Manner cc18ad7b6a428637be9e42d493f6b8da
  NASAL 375c17c0a6c22cf51869be64baa56351
  NEARBACK 1af902816636464bfb9396e7fde7423d
  NEARCLOSE 2b0cdb176b9399b1cf2a5494aebac532
  NEARFRONT 1dec6583a4e7d1834acee34e522f36bf
  NEAROPEN 729b47db8230fa7ec04c0f3e04f64161
  NONET 8b570b567628f8d82e17215b06979436
  NORMAL a167e3999701f0cd3dd7eef92f7c9f4e
  OPEN 5c42a3f1b3aef52f6d69b20d1df7edc4
  OPENMID dea16eefd16858aebce4110c967999c1
  PALATAL 13adb8abe5e47940d48d35280e83cb25
  PEAKT e16b66a375f749a73285a29520df0c8f
  PHARYNGEAL 1846268b428dabdb09b14ac7d25693dd
  POSTALVEOLAR e583237c03f7bc2fdc3c7605bf1b5bad
  Phonation 2e1a0e09a78074c21fc0136e518a2133
  Phoneme a99d82394cccf94f6dc3580d7da31e00
  Place 27d4fb2260414ca95f988dc9fef00141
  RETROFLEX 89fa739e6c003efa365c279dd492194d
  RISET 679f78d2bf85bf6a1a8fd57042833a5f
  ROUNDED 19d9e8942db0d21fe2708b075bb3740c
  Roundedness e7b029a5844a6e008b95082c9c811e33
  SAFFRICATE 67fc3716c04b1bf9e7489053725a8e28
  SHORT 823155f79d7cef4f489a57ec2cc78a95
  SILIBANT 4340ae8c72ff0f44723e3f09c828a742
  SLACK 80cc465787e51f2b50b1624aabbfdb82
  STIFF 38054554575f310f6b4cf4f26354bfd9
  STOP efefb67453b6e5dcc079b8968b2a8b69
  TOPT 1048dc231dd19d73e6ef46ea08ecfbc4
  TRILL 334bfc78d9bd34491dacfe3faf1c711a
  Tone 87cd4acf5bb796129082f7006a0ea5b8
  UNROUNDED 2e0b535e0433b4003177994c7fe788b8
  UVULAR d563c821c487019637b434384c7d8276
  VELAR 0671e2d5add30fb912b820d61be1de58
  VOICELESS e33fcf9d1422dc34677ead1250c8cf5b
  Vowel e11a100b03eaf0d77f4e5e9f7ce36cf3
  csymbol 67a886ccea412fc4a2de04ce15f6cf0e
  vsymbol b5f38e8e46f6ff72e4d789f442186486
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  random-extras-0.19@random-extras-0.19-CVrKkFX7Wr28Gjqnh35lrd:Data.Random.Extras 29c24169732e6d9b861a3e34bb12d853
import  -/  random-fu-0.2.7.0@random-fu-0.2.7.0-CQ0Lr6a3wRjKfR0NneZKnx:Data.Random 8883d063189e353ce779cba72d37ba19
import  -/  random-fu-0.2.7.0@random-fu-0.2.7.0-CQ0Lr6a3wRjKfR0NneZKnx:Data.Random.Distribution.Uniform ce0adaf8d18b3032f5eb8601b73b7de8
import  -/  rvar-0.2.0.3@rvar-0.2.0.3-830TjBaI3UX5PWiddvPaWF:Data.RVar af4b152c68035decd69925a9162e78b3
cf1dd0a1ed927d4f3bfb1488b6b4e989
  $s$fEq(,) :: GHC.Classes.Eq (PhonemeData.Place, PhonemeData.Manner)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (PhonemeData.Place, PhonemeData.Manner)
                  (GHC.Classes.$fEq(,)_$c==
                     @ PhonemeData.Place
                     @ PhonemeData.Manner
                     PhonemeData.$fEqPlace
                     PhonemeData.$fEqManner)
                  (GHC.Classes.$fEq(,)_$c/=
                     @ PhonemeData.Place
                     @ PhonemeData.Manner
                     PhonemeData.$fEqPlace
                     PhonemeData.$fEqManner) -}
5a9a11159fd58d0c990228c82baaa5f6
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   PhonemeGen.$trModule2
                   PhonemeGen.$trModule1) -}
8d9dd602b828ad17b0a123bfdaf4f96d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PhonemeGen"#) -}
1734553946a84574e03c781e938d99f2
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39"#) -}
861e1551e16d63ddb175e2d43e9d9273
  makeBacknesses :: Data.RVar.RVar [PhonemeData.Backness]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses1) -}
7d3bdf992599bb7d87797d4fdd7b2b95
  makeBacknesses1 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses13
                   PhonemeGen.makeBacknesses2) -}
3e99ce5c22435642ec3c896e7684142b
  makeBacknesses10 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses11) -}
edb3a5121120ddbd9ab2432192015d1d
  makeBacknesses11 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   PhonemeGen.makeBacknesses9) -}
de9c2f5e26669d93a6858131a2dd418e
  makeBacknesses12 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses9) -}
1b2865533e6d7795b56733c635ff5ada
  makeBacknesses13 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   (GHC.Types.[] @ PhonemeData.Backness)) -}
94106d3ac795964aca966fc8bc7e9074
  makeBacknesses2 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses12
                   PhonemeGen.makeBacknesses3) -}
377ae0aaa22334cb636b26a85979d165
  makeBacknesses3 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses10
                   PhonemeGen.makeBacknesses4) -}
9a904f91ff7850de474e3b85f908923d
  makeBacknesses4 :: [[PhonemeData.Backness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Backness]
                   PhonemeGen.makeBacknesses5
                   (GHC.Types.[] @ [PhonemeData.Backness])) -}
28cfb48519f15e199e75db4e8a6607a9
  makeBacknesses5 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.FRONT
                   PhonemeGen.makeBacknesses6) -}
5fb7cc6f0a5b22ab1466f50fc568bbe6
  makeBacknesses6 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.NEARFRONT
                   PhonemeGen.makeBacknesses7) -}
4f10064833de903bbae778202343983a
  makeBacknesses7 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.CENTRAL
                   PhonemeGen.makeBacknesses8) -}
617321f20678b9d25603bb50610cfeb0
  makeBacknesses8 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.NEARBACK
                   PhonemeGen.makeBacknesses9) -}
1a58ef38cab1ab900e1fef83fbefaf71
  makeBacknesses9 :: [PhonemeData.Backness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Backness
                   PhonemeData.BACK
                   (GHC.Types.[] @ PhonemeData.Backness)) -}
9f19097274526332a86f2d0d75e63599
  makeConsonants ::
    [PhonemeData.Place]
    -> [PhonemeData.Manner]
    -> [PhonemeData.Phonation]
    -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 3, Strictness: <L,U><L,U><L,U> -}
f2704fafe21e0a87aa66ed69b1e7f16e
  makeDiphInventory ::
    GHC.Types.Int
    -> [PhonemeData.Phoneme] -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U> -}
06b7c91848b7ff78640f34de637038d3
  makeHeights :: Data.RVar.RVar [PhonemeData.Height]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights1) -}
36730f5c3fff7defb0ec908ea17c8bf5
  makeHeights1 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights20
                   PhonemeGen.makeHeights2) -}
22958413df258ed8e9cf4f8684b4fc37
  makeHeights10 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPENMID
                   PhonemeGen.makeHeights11) -}
a43f4ab713521d14ea5cb9e0467f3ff5
  makeHeights11 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEAROPEN
                   PhonemeGen.makeHeights12) -}
9aba3fa756c5eb06b10bfc4789d47ce5
  makeHeights12 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPEN
                   (GHC.Types.[] @ PhonemeData.Height)) -}
87de7a66eca6e3c3631b7565ecb4eb9c
  makeHeights13 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights14) -}
1612060b8fbb4f40155abbde68cea538
  makeHeights14 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEARCLOSE
                   PhonemeGen.makeHeights15) -}
a38b54945e8f5a879f6fb55a55d09e67
  makeHeights15 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights10) -}
4636c118f8bf0b6538a06d4a6bbba85e
  makeHeights16 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights17) -}
8f9b2486339e2025fbd117d35325f505
  makeHeights17 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights18) -}
b6239b9ce5e1ec0c653ae49cdad95fe5
  makeHeights18 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.OPENMID
                   PhonemeGen.makeHeights12) -}
40749541a5210532e730dabb9a023438
  makeHeights19 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights12) -}
0af306b7c0e6f654575630730fc519eb
  makeHeights2 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights19
                   PhonemeGen.makeHeights3) -}
de5257dc9cbcb4713da253a6b25ebc74
  makeHeights20 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.MID
                   (GHC.Types.[] @ PhonemeData.Height)) -}
f7a3485ff611b9671bd5a31d67f0e1c3
  makeHeights3 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights16
                   PhonemeGen.makeHeights4) -}
c23e468a320c729d44832403fbdcd077
  makeHeights4 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights13
                   PhonemeGen.makeHeights5) -}
d04cc55db911d2f12b4f0fda14e5305b
  makeHeights5 :: [[PhonemeData.Height]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Height]
                   PhonemeGen.makeHeights6
                   (GHC.Types.[] @ [PhonemeData.Height])) -}
366c82e3718d1fc8f3b3c0aa5853468e
  makeHeights6 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSE
                   PhonemeGen.makeHeights7) -}
1290f8086bd9f601e04c37d37233a444
  makeHeights7 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.NEARCLOSE
                   PhonemeGen.makeHeights8) -}
67dea31d332002c393e699bcc1b2f772
  makeHeights8 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.CLOSEMID
                   PhonemeGen.makeHeights9) -}
849d612eee17f3298a96ed6aa53f7bb1
  makeHeights9 :: [PhonemeData.Height]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Height
                   PhonemeData.MID
                   PhonemeGen.makeHeights10) -}
e01f93ba5cc5d1df1b81eb51c4c06ca0
  makeLengths :: Data.RVar.RVar [PhonemeData.Length]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths1) -}
10dfd60f2f2b959d303918f227a6da78
  makeLengths1 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths9
                   PhonemeGen.makeLengths2) -}
d1e6f8a23ca239d7b458e797605cbe0f
  makeLengths2 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths6
                   PhonemeGen.makeLengths3) -}
13210498f10188b239847330e5aea08b
  makeLengths3 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths8
                   PhonemeGen.makeLengths4) -}
4c76b430310e51bbb8a6c2d2f6a9b0d0
  makeLengths4 :: [[PhonemeData.Length]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Length]
                   PhonemeGen.makeLengths5
                   (GHC.Types.[] @ [PhonemeData.Length])) -}
88a9375193ebe12ad552c91d9210e3d3
  makeLengths5 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.SHORT
                   PhonemeGen.makeLengths6) -}
ee56b2161a7e9f442315f811960921cd
  makeLengths6 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.NORMAL
                   PhonemeGen.makeLengths7) -}
3180607e76e5df83cb4ede236aca9491
  makeLengths7 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.LONG
                   (GHC.Types.[] @ PhonemeData.Length)) -}
9ebe12fe49aed63e41c6302934699588
  makeLengths8 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.SHORT
                   PhonemeGen.makeLengths9) -}
dfec0d94b28cdc43a04ebb7e78fb15bd
  makeLengths9 :: [PhonemeData.Length]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Length
                   PhonemeData.NORMAL
                   (GHC.Types.[] @ PhonemeData.Length)) -}
d510d0b71c2d98521f3926f695baca0c
  makeManners :: Data.RVar.RVar [PhonemeData.Manner]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                PhonemeGen.makeManners1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Prompt.N:Prompt[0]
                               <Control.Monad.Prompt.Lift
                                  Data.Random.Source.Internal.Prim.Prim
                                  Data.Functor.Identity.Identity>_R
                               <[PhonemeData.Manner]>_R))
                     (Trans
                          (Sym (Control.Monad.Prompt.N:PromptT[0]
                                    <Data.Random.Source.Internal.Prim.Prim>_R
                                    <Data.Functor.Identity.Identity>_R))
                          (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N)) -}
dbc7cf61f5a5517e7baeca889c216f9d
  makeManners1 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners77
                   PhonemeGen.makeManners2
                   @ b1
                   (\ (x568 :: [[PhonemeData.Manner]]) ->
                    case PhonemeGen.makeManners_go x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
131e5f8e4ad9cd8e9172775341ed9e88
  makeManners10 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners11
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
a5a56e9473cf7ecc73b9fe73aa9eb7b6
  makeManners11 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.TRILL
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
2dde9f2608d94c2c28bc9c442e81f2aa
  makeManners12 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners_ds
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Manner]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
68499970c494d5537b86c8143a8c74f1
  makeManners13 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners14) -}
de89b0549916f951666ef270717604fa
  makeManners14 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners15
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
487a8bf53e6061d9a0686d7dda456394
  makeManners15 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners23
                   PhonemeGen.makeManners16
                   @ b1
                   (\ (x568 :: [[PhonemeData.Manner]]) ->
                    case PhonemeGen.makeManners_go1 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
b1b1b200f5019a2170d54518bb180dbd
  makeManners16 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners17) -}
55c50142b8936dca1845a077b7678a6e
  makeManners17 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners18
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
3fb91d698b5c9bbb3133e103ccd4ce33
  makeManners18 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners19) -}
5b2c521eb2676e8e7fdd0331d07c3240
  makeManners19 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners20) -}
c35bfa1d0694a3b9305aadfa5c2b55fb
  makeManners2 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners76
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners3) -}
b3d08d7a042faed4cba810324897fe6e
  makeManners20 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners21
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
a16811d7744c19aa13c4a43b40146b72
  makeManners21 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LAPPROXIMANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
79907ec090daf6a6aeb59da3f68dbc87
  makeManners22 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makeManners_x) -}
a2167f124b42aaad9d0c2600d0a76a68
  makeManners23 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
23cc7f08c8c8cd6acfbc92be8caceaf9
  makeManners24 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta (GHC.Types.[] @ PhonemeData.Manner)) -}
3be07926916807c328e196d0fc88f8ba
  makeManners25 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners_ds1
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Manner]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
65bb97c4c08d96a624d1280828db1aa0
  makeManners26 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners27) -}
cc536bf1e59baa31203a7044da42de65
  makeManners27 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners28
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
179fe0b82151a1229e787e0ee63addc2
  makeManners28 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners59
                   PhonemeGen.makeManners29
                   @ b1
                   (\ (x568 :: [[PhonemeData.Manner]]) ->
                    case PhonemeGen.makeManners_go2 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
b4a3d4ce295280363a870851e5a3c6bc
  makeManners29 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners58
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners30) -}
1c204a349808da39755659faa8d29644
  makeManners3 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners72
                   PhonemeGen.makeManners4) -}
9762b1527c35dbb43b88814ba3930a89
  makeManners30 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners41
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners31) -}
8e96a1a3963b2a961b5a226d253ccceb
  makeManners31 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners37
                   PhonemeGen.makeManners32) -}
c50fab8295f03aef71cf42cdfaf95bc0
  makeManners32 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners33
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
85936eb20c06c4897d8a7de039810abc
  makeManners33 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners34) -}
ac5fbd5e3598ba98d45456c2371277bc
  makeManners34 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners35) -}
cb36a6dbdfa1ccce80f19406f4e8c678
  makeManners35 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners36
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
c8337c4e99766463b6672534c72f2bd0
  makeManners36 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LFRICATIVE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
c39dd787cdc7800916f3129df34bc66b
  makeManners37 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners38) -}
65af49b22a084ec125a5755d663c3c3f
  makeManners38 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners39) -}
712e0895a2b32f15b8827b59cdf0f7a9
  makeManners39 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners40
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
bb181f6ad13f8862cc0d5539e810dcb4
  makeManners4 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners60
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners5) -}
a1afde60e402c688923ab6d1b5eb9165
  makeManners40 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.SILIBANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
c3673af6ddca7b755dadb88fec6457dc
  makeManners41 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners_ds2
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Manner]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
2319291a11c79384090ad6e5ec20a7cf
  makeManners42 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners43) -}
78eb496f2e39c428957c932bdb591ed2
  makeManners43 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners44
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
cfc17b98bc56b2cb8a2617d64251c8b2
  makeManners44 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners57
                   PhonemeGen.makeManners45
                   @ b1
                   (\ (x568 :: [[PhonemeData.Manner]]) ->
                    case PhonemeGen.makeManners_go3 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
3795f240f5a4da1c336662a0d3fa2188
  makeManners45 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners56
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners46) -}
fd044073a0c6b6adb2dbbf7132bcc56e
  makeManners46 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners52
                   PhonemeGen.makeManners47) -}
6243af47602a5eae64d3905fa5870665
  makeManners47 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners48
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
756a2c920750264daca88bfa3903cc4c
  makeManners48 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners49) -}
9be66c84a93322370f5d3b80e1ff783c
  makeManners49 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners50) -}
33cdf5b0777ccca5e717a43a893d19df
  makeManners5 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners25
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners6) -}
7beef7fd28c842ed5e2988b6d09c75c6
  makeManners50 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners51
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
8d9e470a45fc551e62a340405e622406
  makeManners51 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LAFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
6f18012e1e90341295d9bd4a4b3b0a13
  makeManners52 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners53) -}
6cabeeb18cb96afd587bc6ac6f29ea18
  makeManners53 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners54) -}
01f5e8da8084bf0acf4e0f08246c7ddd
  makeManners54 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners55
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
b9881b0cd03d486eae4d4ee0f5d46562
  makeManners55 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.SAFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
b4b9f60ec8a41f74f22fd160da90bd1a
  makeManners56 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makeManners_x1) -}
90a15f2d186d32b98c1a9769f6a17739
  makeManners57 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
26a43868d45dfddc4ef79c3d71c39614
  makeManners58 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makeManners_x2) -}
0aec8b026d6201c4067032568f2eef5a
  makeManners59 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
6a36e298a5f851185639a89bd6d0a140
  makeManners6 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners12
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners7) -}
613d01c9762c4917de0c84fc154654c1
  makeManners60 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners_ds3
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Manner]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Manner]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Manner]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Manner]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Manner]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
651b52f6df89fc02cdf59925d05c6fb3
  makeManners61 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners24
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners62) -}
4f927d7c68dcab163f9d3bc42baf3da5
  makeManners62 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners63
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
7c531e943eb8b21837ed61fe9f4738a8
  makeManners63 ::
    ([PhonemeData.Manner] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Manner] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makeManners71
                   PhonemeGen.makeManners64
                   @ b1
                   (\ (x568 :: [[PhonemeData.Manner]]) ->
                    case PhonemeGen.makeManners_go4 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
f307a6eb4ba0c4b95d55303f96024f68
  makeManners64 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners70
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Manner]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Manner]>_N))
                   PhonemeGen.makeManners65) -}
9c9a995f8c8faa5448e84e4309932f96
  makeManners65 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners66
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
de2c2931927de7d1341a06a05c404595
  makeManners66 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners67) -}
b8cb82ff7fafed8a6befea855e794499
  makeManners67 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners68) -}
f8a89e696098d905b8432f2d09f99d5e
  makeManners68 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners69
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
c4b2d44cf30adae72ad0f1bd87b671a6
  makeManners69 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.LFLAP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
8c89e5a1ba61d2ef02977fd77a8498ba
  makeManners7 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners8
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Manner]))) -}
5888f1e85cef75a2bca1a0f5cf77bcfa
  makeManners70 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makeManners_x3) -}
b0f1017085c63bf5963f9204e958018e
  makeManners71 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
9948dd07bda9400d7ef9db250a9eea7b
  makeManners72 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners73) -}
df6584b59033ea25f3afcf317865a36c
  makeManners73 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners74) -}
8567d09edcb64f7b1a40b465a455d9a8
  makeManners74 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners75
                   (GHC.Types.[] @ [PhonemeData.Manner])) -}
ff9b594a66aba5e08c503cbcb38313ba
  makeManners75 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.NASAL
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
34e4777ec3a3553b6fcb6b1097fe1584
  makeManners76 ::
    ([PhonemeData.Manner] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Manner] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makeManners_x4) -}
87993adda71b60fb877c4c45c819c122
  makeManners77 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Manner]]
    -> forall b.
       ([[PhonemeData.Manner]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
53104b51a42f31cc09cf209708993d70
  makeManners8 :: Data.RVar.RVar [PhonemeData.Manner]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Manner]
                   PhonemeGen.makeManners9) -}
94ea2562eedc2bc505181616a678da31
  makeManners9 :: [[PhonemeData.Manner]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Manner]
                   (GHC.Types.[] @ PhonemeData.Manner)
                   PhonemeGen.makeManners10) -}
8f943dbe36f94c653292dc6ca3d7fd45
  makeManners_ds ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners13) -}
2463351ad1d71bf399df164f64ee02ac
  makeManners_ds1 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners26) -}
94d650b72797dd74f799d90de654c5b9
  makeManners_ds2 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners42) -}
1a581a8f5c25661ed696781e3788b706
  makeManners_ds3 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Manner])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Manner])
                   PhonemeGen.makeManners61) -}
7eb1211d830a7e6cbb200c08c56108c2
  makeManners_go :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
1ff615a5b1c230e31f331f4dc7b6cc7a
  makeManners_go1 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
2b82e842fde9b086159b31c38d72268e
  makeManners_go2 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
e7e5d4de82170875e1698c9a273c8d34
  makeManners_go3 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
975fb12cd6c2ab7b683a890bb27a8ba3
  makeManners_go4 :: [[PhonemeData.Manner]] -> [PhonemeData.Manner]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f28ea408119167276aeb890c3b3f3fe1
  makeManners_x :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.APPROXIMANT
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
ed9197d9473e4125fac9ef7b4124b196
  makeManners_x1 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.AFFRICATE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
ee55f254d686ca8d05209828785c0719
  makeManners_x2 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.FRICATIVE
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
8014f1cebc2fd9d278847ccb62f7d29f
  makeManners_x3 :: [PhonemeData.Manner]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.FLAP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
51c78d6a2067921f134a0e0783433546
  makeManners_x4 :: [PhonemeData.Manner]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Manner
                   PhonemeData.STOP
                   (GHC.Types.[] @ PhonemeData.Manner)) -}
aca8da5c90a5798e5af477f5f205f4f0
  makePhonations :: Data.RVar.RVar [PhonemeData.Phonation]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations1) -}
462b49792abb6262a392d798448ae90a
  makePhonations1 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations17
                   PhonemeGen.makePhonations2) -}
d1e5277d58afdf15e9012b249fda86f4
  makePhonations10 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.SLACK
                   PhonemeGen.makePhonations11) -}
136918f9492e1370da144497236b05ad
  makePhonations11 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations12) -}
555ef48995615de51e3b80600ac30e04
  makePhonations12 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.STIFF
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
47314b002abe0a56bfc6291800114896
  makePhonations13 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.BREATHY
                   PhonemeGen.makePhonations14) -}
ac5d8f0c7772f13a1b62805e7d51667a
  makePhonations14 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations15) -}
530df55e2de964f226c24e30ad5fe107
  makePhonations15 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.CREAKY
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
e1f7d8dc6a6e0eea1bbd7c9f3c1cc88c
  makePhonations16 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.VOICELESS
                   PhonemeGen.makePhonations17) -}
227d5b5ac1f20587496c119737db68dc
  makePhonations17 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
78879f988e75cec44a43c6466ed1e579
  makePhonations2 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations16
                   PhonemeGen.makePhonations3) -}
d7ce5280fb56843462e097d61157405c
  makePhonations3 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations13
                   PhonemeGen.makePhonations4) -}
cfd863ec3bf97757d1762be3b0f5c4e5
  makePhonations4 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations10
                   PhonemeGen.makePhonations5) -}
68edffbd7ac663b5a02b1db6aa52255e
  makePhonations5 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations9
                   PhonemeGen.makePhonations6) -}
5d75832c3040a6b84e88f9f7ce0905be
  makePhonations6 :: [[PhonemeData.Phonation]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Phonation]
                   PhonemeGen.makePhonations7
                   (GHC.Types.[] @ [PhonemeData.Phonation])) -}
e83d18b0a3d0296a0b46c548b247b9e4
  makePhonations7 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.MODAL
                   PhonemeGen.makePhonations8) -}
a7da9e0c1ef9f7ba4aad915b48e3be6e
  makePhonations8 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.ASPIRATED
                   (GHC.Types.[] @ PhonemeData.Phonation)) -}
57013a3ba9fa061c73d9d6e9d45e68eb
  makePhonations9 :: [PhonemeData.Phonation]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Phonation
                   PhonemeData.VOICELESS
                   PhonemeGen.makePhonations7) -}
92f16348b1f7fb00d5d5abff74d3ff60
  makePlaces :: Data.RVar.RVar [PhonemeData.Place]
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: InlineRule (0, True, True)
                PhonemeGen.makePlaces1
                  `cast`
                (Trans
                     (Sym (Control.Monad.Prompt.N:Prompt[0]
                               <Control.Monad.Prompt.Lift
                                  Data.Random.Source.Internal.Prim.Prim
                                  Data.Functor.Identity.Identity>_R
                               <[PhonemeData.Place]>_R))
                     (Trans
                          (Sym (Control.Monad.Prompt.N:PromptT[0]
                                    <Data.Random.Source.Internal.Prim.Prim>_R
                                    <Data.Functor.Identity.Identity>_R))
                          (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N)) -}
3cae036eda9da0876503dd10bc83f355
  makePlaces1 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,C(U)><L,U>,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces62
                   PhonemeGen.makePlaces2
                   @ b1
                   (\ (x568 :: [[PhonemeData.Place]]) ->
                    case PhonemeGen.makePlaces_go x568 of x569 { DEFAULT -> eta x569 })
                   eta1) -}
cacb5b22a71898c0f66623d57585c89b
  makePlaces10 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces20
                   PhonemeGen.makePlaces11
                   @ b1
                   (\ (x568 :: [[PhonemeData.Place]]) ->
                    case PhonemeGen.makePlaces_go1 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
a7034f59a5fa7d80e04132fbcd010ba6
  makePlaces11 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces14
                   PhonemeGen.makePlaces12) -}
a3b8a5b2e0296461a6d894642a1da46e
  makePlaces12 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces13
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
ebcbfa55b6537bf984796d273c9970cf
  makePlaces13 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x) -}
8427a1ed8cc812a26885df6c41b33f83
  makePlaces14 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces15) -}
4d2adf7517fb05077fb9227f554e47f3
  makePlaces15 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces19
                   PhonemeGen.makePlaces16) -}
e0eddbe0644cf197b6a64d9e57c0c6d9
  makePlaces16 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces17
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
e1e7b6b7cd2d27177ccc3da5721e0a34
  makePlaces17 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.PHARYNGEAL
                   PhonemeGen.makePlaces18) -}
783949b4526d2d5aca301813513eb39b
  makePlaces18 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.EPIGLOTTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
912b28937de9d9c4f62c56574ca29b52
  makePlaces19 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.EPIPHARYNGEAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
5b783c523dc7994e7f881a0e17439e96
  makePlaces2 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces55
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces3) -}
ecbda089ae1943dd7f82f17f65aa44ab
  makePlaces20 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
74ae60540c5a8d7515a2af29746de08f
  makePlaces21 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x1) -}
b74fefc27694676ca6bbf2965767d0bb
  makePlaces22 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta (GHC.Types.[] @ PhonemeData.Place)) -}
3ab9a55dc6e0e5d79835a8342046d7f4
  makePlaces23 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces_ds1
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Place]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
07cad01b6b78d88ddf187694ec4b8de2
  makePlaces24 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces38
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces25) -}
a0b8e5600ba7f29e6765cd94c3f3c85a
  makePlaces25 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces26
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
d1569cf59bbf343283ada890fe928f7e
  makePlaces26 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 let {
                   eta2 :: [[PhonemeData.Place]] -> b1
                     {- Arity: 1, Strictness: <S,1*U> -}
                   = \ (x568 :: [[PhonemeData.Place]]) ->
                     case PhonemeGen.makePlaces_go2 x568 of x569 { DEFAULT -> eta x569 }
                 } in
                 PhonemeGen.makePlaces_m1
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <GHC.Types.Int>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <GHC.Types.Int>_R))
                   @ b1
                   (\ (x568 :: GHC.Types.Int) ->
                    case x568 of x569 { GHC.Types.I# ipv ->
                    PhonemeGen.makePlaces37
                      PhonemeGen.makePlaces27
                      @ b1
                      (\ (x570 :: [[PhonemeData.Place]]) ->
                       case x570 of x571 { DEFAULT ->
                       case (Data.Random.Extras.sampleSeq
                               @ [PhonemeData.Place]
                               x569
                               (Data.Sequence.fromList1
                                  @ [PhonemeData.Place]
                                  x571
                                    `cast`
                                  ([Sym (Data.Sequence.N:Elem[0] <[PhonemeData.Place]>_R)])_R)
                                 `cast`
                               (Sym (Data.Sequence.N:Seq[0] <[PhonemeData.Place]>_R)))
                              `cast`
                            (Trans
                                 (Trans
                                      (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                      (Control.Monad.Prompt.N:PromptT[0]
                                           <Data.Random.Source.Internal.Prim.Prim>_R
                                           <Data.Functor.Identity.Identity>_R) <[[PhonemeData.Place]]>_N)
                                 (Control.Monad.Prompt.N:Prompt[0]
                                      <Control.Monad.Prompt.Lift
                                         Data.Random.Source.Internal.Prim.Prim
                                         Data.Functor.Identity.Identity>_R
                                      <[[PhonemeData.Place]]>_R)) of nt { DEFAULT ->
                       nt @ b1 eta2 eta1 } })
                      eta1 })
                   eta1) -}
fc31b794a8f5b17e8cf7804d4fbed3dc
  makePlaces27 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces32
                   PhonemeGen.makePlaces28) -}
00d039bd8e6783f0eafd1ca869c31e4b
  makePlaces28 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces31
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces29) -}
57a55a01bc96fa4a602c4552ffa8ad63
  makePlaces29 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces30
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
098464907152bf34368635ea8e4bbc89
  makePlaces3 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces39
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces4) -}
c5561bfc857b99597aaa32b77214570a
  makePlaces30 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x2) -}
9ca5bf15b55da59045f274dd32f37ec8
  makePlaces31 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x3) -}
0d32fe1eb580814ef7e8401f52cbdcb7
  makePlaces32 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces33) -}
44fda0519946e32c8196339ff1ddc78f
  makePlaces33 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces36
                   PhonemeGen.makePlaces34) -}
9aad84f1158c5f741deade6f8f870bf7
  makePlaces34 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces35
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
da31505388a89d68cb6d4103fe963448
  makePlaces35 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.ALVEOLOPALATAL
                   PhonemeGen.makePlaces36) -}
d8912bf42208a8e021ccce6b260ba05c
  makePlaces36 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.PALATAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
ba1f552cb9392266820da97926b069fb
  makePlaces37 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
c1de02c5bec7c523828aa18df827f2c5
  makePlaces38 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x4) -}
c37a816ebe8b7297bf7d886405c154f7
  makePlaces39 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces_ds2
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Place]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
3e6047774065669fe0e30deffbae4200
  makePlaces4 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces23
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces5) -}
a1252da640019ce508e2a2570c25c8da
  makePlaces40 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces54
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces41) -}
1da43db740b00c4930d14aac70318a1c
  makePlaces41 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces42
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
49dc8b83c673ea07dfbf2b8d1b118239
  makePlaces42 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2,
     Unfolding: (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces53
                   PhonemeGen.makePlaces43
                   @ b1
                   (\ (x568 :: [[PhonemeData.Place]]) ->
                    case PhonemeGen.makePlaces_go3 x568 of x569 { DEFAULT ->
                    eta x569 })
                   eta1) -}
0ba0878c5cadee6f665ba059e6f263b2
  makePlaces43 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces46
                   PhonemeGen.makePlaces44) -}
321057349e152a71a2030abd8a6ac496
  makePlaces44 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces45
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
3e221c6ba47bd2f261a4d07042ce305b
  makePlaces45 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs, Strictness: <C(S),1*C1(U)><L,A>,
     Unfolding: InlineRule (2, True, True)
                (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x5) -}
4e64fd068aff881fa2d119b2c2672418
  makePlaces46 :: Data.RVar.RVar [PhonemeData.Place]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces47) -}
f02c018fc7bac1dda3ea84d3e526389c
  makePlaces47 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces52
                   PhonemeGen.makePlaces48) -}
2c2ceb7e365e5679eb4f038373f657b0
  makePlaces48 :: [[PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Place]
                   PhonemeGen.makePlaces49
                   (GHC.Types.[] @ [PhonemeData.Place])) -}
1004435b330169bf39733bd3839f5a72
  makePlaces49 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DENTAL
                   PhonemeGen.makePlaces50) -}
ae8b03c2216cfe16f3fe8b52cffb1b23
  makePlaces5 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces6
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
36fdce17a8d2a175e3c688f0fc708509
  makePlaces50 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.ALVEOLAR
                   PhonemeGen.makePlaces51) -}
09c8700b7c5877a34cd8dfda3876dff7
  makePlaces51 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.POSTALVEOLAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
c4f249cd24a2991dd580c624d77df17c
  makePlaces52 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DENTIALVEOLAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
4a14828f7141859e5f97d6455de34e71
  makePlaces53 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
60308a9cf89f5f620ab9e318b7c46e74
  makePlaces54 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x6) -}
89036df8dde6152135650a623fac2324
  makePlaces55 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces_ds3
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Place]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
827ba5a91bd76c98dbf8897a1a9be144
  makePlaces56 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces57) -}
925e0ccfcd158aaebb214148a430139d
  makePlaces57 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces61
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces58) -}
7a0f4c825b437cbf298f347faf00f938
  makePlaces58 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces59
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
53e7325f2540c8cf90565bf086916e99
  makePlaces59 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x7) -}
7d515006bc0b67be90278a565ca288af
  makePlaces6 ::
    ([PhonemeData.Place] -> b1)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b1) -> b1)
    -> b1
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ b1
                   (eta :: [PhonemeData.Place] -> b1)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b1) -> b1) ->
                 PhonemeGen.makePlaces_ds
                   `cast`
                 (Trans
                      (Trans
                           (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                           (Control.Monad.Prompt.N:PromptT[0]
                                <Data.Random.Source.Internal.Prim.Prim>_R
                                <Data.Functor.Identity.Identity>_R) <Data.RVar.RVarT
                                                                       Data.Functor.Identity.Identity
                                                                       [PhonemeData.Place]>_N)
                      (Control.Monad.Prompt.N:Prompt[0]
                           <Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity>_R
                           <Data.RVar.RVarT
                              Data.Functor.Identity.Identity [PhonemeData.Place]>_R))
                   @ b1
                   (\ (x568 :: Data.RVar.RVarT
                                 Data.Functor.Identity.Identity [PhonemeData.Place]) ->
                    case x568
                           `cast`
                         (Trans
                              (Trans
                                   (Data.RVar.N:RVarT[0] <Data.Functor.Identity.Identity>_N)
                                   (Control.Monad.Prompt.N:PromptT[0]
                                        <Data.Random.Source.Internal.Prim.Prim>_R
                                        <Data.Functor.Identity.Identity>_R) <[PhonemeData.Place]>_N)
                              (Control.Monad.Prompt.N:Prompt[0]
                                   <Control.Monad.Prompt.Lift
                                      Data.Random.Source.Internal.Prim.Prim
                                      Data.Functor.Identity.Identity>_R
                                   <[PhonemeData.Place]>_R)) of nt { DEFAULT ->
                    nt @ b1 eta eta1 })
                   eta1) -}
94b95d3b2af6efedb2a0c1f731b7ce2e
  makePlaces60 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LABIODENTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
bfba8a4f843aa57396b8bc4a92b83cea
  makePlaces61 ::
    ([PhonemeData.Place] -> b)
    -> (forall a1.
        Control.Monad.Prompt.Lift
          Data.Random.Source.Internal.Prim.Prim
          Data.Functor.Identity.Identity
          a1
        -> (a1 -> b) -> b)
    -> b
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta :: [PhonemeData.Place] -> b)
                   (eta1 :: forall a1.
                            Control.Monad.Prompt.Lift
                              Data.Random.Source.Internal.Prim.Prim
                              Data.Functor.Identity.Identity
                              a1
                            -> (a1 -> b) -> b) ->
                 eta PhonemeGen.makePlaces_x8) -}
0e7f5f8d91765bcd51e27a35c22a0174
  makePlaces62 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
    -> forall b.
       ([[PhonemeData.Place]] -> b)
       -> (forall a.
           Control.Monad.Prompt.Lift
             Data.Random.Source.Internal.Prim.Prim
             Data.Functor.Identity.Identity
             a
           -> (a -> b) -> b)
       -> b
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,C(U)><L,U> -}
d73ce1dfe1529339b49abc17eaeaf19f
  makePlaces7 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces22
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces8) -}
1b962bcc588b32e871398cd2042be699
  makePlaces8 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces21
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   PhonemeGen.makePlaces9) -}
22084162d60458aa5776b2504ef6afcb
  makePlaces9 ::
    [Data.RVar.RVarT
       Data.Functor.Identity.Identity [PhonemeData.Place]]
  {- Unfolding: (GHC.Types.:
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces10
                     `cast`
                   (Trans
                        (Sym (Control.Monad.Prompt.N:Prompt[0]
                                  <Control.Monad.Prompt.Lift
                                     Data.Random.Source.Internal.Prim.Prim
                                     Data.Functor.Identity.Identity>_R
                                  <[PhonemeData.Place]>_R))
                        (Trans
                             (Sym (Control.Monad.Prompt.N:PromptT[0]
                                       <Data.Random.Source.Internal.Prim.Prim>_R
                                       <Data.Functor.Identity.Identity>_R))
                             (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Place]>_N))
                   (GHC.Types.[]
                      @ (Data.RVar.RVarT
                           Data.Functor.Identity.Identity [PhonemeData.Place]))) -}
d57b512502a27329f5cddd9813a59571
  makePlaces_ds ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces7) -}
8512e673d2f359c025ccf9c8ea18af6b
  makePlaces_ds1 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces24) -}
9cd8ed05e172a75ee2fcc71065a87cf5
  makePlaces_ds2 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces40) -}
76806ddee61ffd41ae46b9a785182835
  makePlaces_ds3 ::
    Data.RVar.RVarT
      Data.Functor.Identity.Identity
      (Data.RVar.RVarT
         Data.Functor.Identity.Identity [PhonemeData.Place])
  {- Unfolding: (Data.Random.Extras.choice
                   @ (Data.RVar.RVarT
                        Data.Functor.Identity.Identity [PhonemeData.Place])
                   PhonemeGen.makePlaces56) -}
e941fc54187b92ce7b542077f649e700
  makePlaces_go :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
f9ec236f38d20c1a4f85a794cb067c07
  makePlaces_go1 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
a957c7edc2254563f319f9e37033772f
  makePlaces_go2 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
9b2ddbef4aa12a070d55db6b476342af
  makePlaces_go3 :: [[PhonemeData.Place]] -> [PhonemeData.Place]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
0d9929ac2520f63d57f12d255cf2e51e
  makePlaces_m1 ::
    Data.RVar.RVarT Data.Functor.Identity.Identity GHC.Types.Int
  {- Unfolding: (Data.Random.Distribution.Uniform.$w$sintegralUniform'
                   @ Data.Functor.Identity.Identity
                   2#
                   3#) -}
d235b12619c326854d73b3f45e6c1b75
  makePlaces_x :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.GLOTTAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
c24191ceae112b1006c999abcb3e1e5f
  makePlaces_x1 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LARYNGEAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
b1c38b2bede49b0aeb1e528e9480a836
  makePlaces_x2 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.UVULAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
088c8298127ec2a4b70d4e3d1065d097
  makePlaces_x3 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.VELAR
                   (GHC.Types.[] @ PhonemeData.Place)) -}
4f8bf6473e6d48344c92a6444d37f242
  makePlaces_x4 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.DORSAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
a16a36ddae8e571be06023f0deb2b961
  makePlaces_x5 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.RETROFLEX
                   (GHC.Types.[] @ PhonemeData.Place)) -}
5cd4e7f318959f02de7640c90a917d8d
  makePlaces_x6 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.CORONAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
27c4de91e34cb32940e48b8ce4415dd9
  makePlaces_x7 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.BILABIAL
                   PhonemeGen.makePlaces60) -}
4890f674281e9d79895f212ab44e1a23
  makePlaces_x8 :: [PhonemeData.Place]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Place
                   PhonemeData.LABIAL
                   (GHC.Types.[] @ PhonemeData.Place)) -}
c7eb4f3042a06d596208c5a8ef86802d
  makeRoundedneses :: Data.RVar.RVar [PhonemeData.Roundedness]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses1) -}
7d060222cc8152103c4c3906e926aa99
  makeRoundedneses1 :: [[PhonemeData.Roundedness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses5
                   PhonemeGen.makeRoundedneses2) -}
bd13b43c47fdb105cf9551439259317f
  makeRoundedneses2 :: [[PhonemeData.Roundedness]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Roundedness]
                   PhonemeGen.makeRoundedneses3
                   (GHC.Types.[] @ [PhonemeData.Roundedness])) -}
f958f959515a0b6d37c756a65539f029
  makeRoundedneses3 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.UNROUNDED
                   PhonemeGen.makeRoundedneses4) -}
fd2cbf8f04bb132328ad057c113aae86
  makeRoundedneses4 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.ROUNDED
                   (GHC.Types.[] @ PhonemeData.Roundedness)) -}
4f3408483ea114af0719aea181f208bb
  makeRoundedneses5 :: [PhonemeData.Roundedness]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Roundedness
                   PhonemeData.DEFAULT
                   (GHC.Types.[] @ PhonemeData.Roundedness)) -}
53f783b8bbe0dce1785db56cf03ea685
  makeTones :: Data.RVar.RVar [PhonemeData.Tone]
  {- Unfolding: (Data.Random.Extras.choice
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones1) -}
ade38e4214e226615689bf2745306764
  makeTones1 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones22
                   PhonemeGen.makeTones2) -}
259e999d7d66fe4b77dc95032bc328a3
  makeTones10 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones43
                   PhonemeGen.makeTones11) -}
00f272957f198ce14f60c2121b6d147e
  makeTones11 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones39
                   PhonemeGen.makeTones12) -}
79b96424cbaf931861b628ab6cbab2c6
  makeTones12 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones34
                   PhonemeGen.makeTones13) -}
0e3b5318e1bfcfdff7f241397fb38259
  makeTones13 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones29
                   PhonemeGen.makeTones14) -}
b65f4f468812d4fe1078dbdb5ea27a61
  makeTones14 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones23
                   PhonemeGen.makeTones15) -}
58a21a5c0d22f108a204ffc4a35556ca
  makeTones15 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones16
                   (GHC.Types.[] @ [PhonemeData.Tone])) -}
40d40eb7f7ca0c4d55024bbe851af41d
  makeTones16 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones17) -}
18705bdd0406a7027465cd8a01418233
  makeTones17 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones18) -}
dd7097cde58b0f82a7ae271d7fa17061
  makeTones18 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones19) -}
9e71147c07d891688c6cbb79ec0f2d39
  makeTones19 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.TOPT
                   PhonemeGen.makeTones20) -}
c59b9998a3e69e7b6826c3fd8d58f819
  makeTones2 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones63
                   PhonemeGen.makeTones3) -}
cafd7c266f644ce114c77c076646cf57
  makeTones20 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones21) -}
6807fa006adfb52136e7b78066d5794c
  makeTones21 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones22) -}
723b155ee81a70690790ab6c7600f7fa
  makeTones22 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.NONET
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
3fc55d04187ec94ba527feb3135c379c
  makeTones23 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones24) -}
5ce42e49987c08e51418b76e01fd9e8b
  makeTones24 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones25) -}
6109f754dc5130a28e51ad15ba8f0910
  makeTones25 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones26) -}
0810da33399c22e514e93eba0baddbb3
  makeTones26 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.TOPT
                   PhonemeGen.makeTones27) -}
50a947dbc94ec118bb26dd4a8a08f712
  makeTones27 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones28) -}
dbacea14bdb8a5e530d1cf31bddcce91
  makeTones28 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
f3530df4db2ee850e7c65ae3132b9675
  makeTones29 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones30) -}
fd991cfe9139f03dff1dc2c96720ad53
  makeTones3 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones61
                   PhonemeGen.makeTones4) -}
d9899b9d3f992413a732d29a5f6b094d
  makeTones30 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones31) -}
c4d12b1d45e0e81e104e9b74a9e4d5be
  makeTones31 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones32) -}
87dfe4bf6b02a0bc183bfcfc45f42b29
  makeTones32 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones33) -}
db205731bec5b762ec5d8efecbae58c6
  makeTones33 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones22) -}
474282899a535f395c696bfbaf8e7123
  makeTones34 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones35) -}
3de71ae5ddd9c5122e7da3aa0322ea07
  makeTones35 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones36) -}
3cfb1a45f3fd8ea5d3d17a812c8e3408
  makeTones36 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones37) -}
74a7fcdbefd6ce74746cf2bb7788ec86
  makeTones37 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones38) -}
324d69372946d09e9ce0f4ae105c54da
  makeTones38 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
557ba0942b9020bc1ac71e3e62da22c6
  makeTones39 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones40) -}
d491f04b66225f95acd0187f7325f737
  makeTones4 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones60
                   PhonemeGen.makeTones5) -}
b9f9e4b8a9a56c7f5fef3e1738468481
  makeTones40 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LFALLT
                   PhonemeGen.makeTones41) -}
1b0d6063c7094e6ce63eb9b7f13d5ea2
  makeTones41 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HRISET
                   PhonemeGen.makeTones42) -}
6750a94a8616d69a7c77903117ae8694
  makeTones42 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones22) -}
5771bb6e093b070ed957496a952afd6b
  makeTones43 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones44) -}
8161aa77fc8a4320f1faf918df6d0f1d
  makeTones44 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LFALLT
                   PhonemeGen.makeTones45) -}
b04116fa5b00479212da938fec8084e0
  makeTones45 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HRISET
                   PhonemeGen.makeTones46) -}
5441382f25ff3dbe1ddb3160c7bae7c4
  makeTones46 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
0e9bd818fe72e2ebbe225e2836aa67d8
  makeTones47 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones48) -}
f3aa4dcdf7356b6f20538237f02088f7
  makeTones48 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones49) -}
1617e0a2fc90cb85801efbfb4cbcfecd
  makeTones49 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones21) -}
a0131dc30fcffe6bb72d2625aa0b24fd
  makeTones5 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones59
                   PhonemeGen.makeTones6) -}
f67b391a90e1ef6fba6669f88e7a5b22
  makeTones50 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones51) -}
16ca063ec1ef2f58d653255667fe54c8
  makeTones51 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.RISET
                   PhonemeGen.makeTones52) -}
54557a84f260ba33fad2c3aa5676da72
  makeTones52 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.DIPT
                   PhonemeGen.makeTones28) -}
309ab36595c8383e5bd5597e7ca8081c
  makeTones53 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones54) -}
7f74da89d978f102769f4522cf133c69
  makeTones54 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones55) -}
fddb6d7d0e0888174d04dc933a7f76fd
  makeTones55 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones22) -}
0db6b5b76e50da124091d33ecfb64d5d
  makeTones56 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones57) -}
934cf8c98ee44aab372638262e7ff22e
  makeTones57 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.MIDT
                   PhonemeGen.makeTones58) -}
ef3d8898314ab20ddeddf0c6ea0de4e5
  makeTones58 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   (GHC.Types.[] @ PhonemeData.Tone)) -}
04297291743a7c78fffa06f585b9f576
  makeTones59 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones55) -}
9c00b0c905b236fa157fd04d2ee76a0a
  makeTones6 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones56
                   PhonemeGen.makeTones7) -}
6c678b83c5ad8f4db1f0645469352637
  makeTones60 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.LOWT
                   PhonemeGen.makeTones21) -}
b43826abe98d9dafb26b313f49f546d6
  makeTones61 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.FALLT
                   PhonemeGen.makeTones62) -}
8a1d8db7063ca080de24fe1cb979663c
  makeTones62 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.PEAKT
                   PhonemeGen.makeTones22) -}
98d67f5900eb3a169f96657604aed288
  makeTones63 :: [PhonemeData.Tone]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ PhonemeData.Tone
                   PhonemeData.HIGHT
                   PhonemeGen.makeTones21) -}
bfe358f12ad6ecd0f7802d0615647110
  makeTones7 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones53
                   PhonemeGen.makeTones8) -}
00795874372e5bdd1a3616a191206de6
  makeTones8 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones50
                   PhonemeGen.makeTones9) -}
c009d2f6f591e4bd06c12f6720725067
  makeTones9 :: [[PhonemeData.Tone]]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ [PhonemeData.Tone]
                   PhonemeGen.makeTones47
                   PhonemeGen.makeTones10) -}
d34983f969f637a411bd71cd9651db52
  makeVowels ::
    [PhonemeData.Height]
    -> [PhonemeData.Backness]
    -> [PhonemeData.Roundedness]
    -> [PhonemeData.Length]
    -> [PhonemeData.Tone]
    -> Data.RVar.RVar [PhonemeData.Phoneme]
  {- Arity: 5, Strictness: <L,1*U><L,U><L,U><L,U><L,U>,
     Unfolding: (\ (heights :: [PhonemeData.Height])
                   (backs :: [PhonemeData.Backness])
                   (rounds :: [PhonemeData.Roundedness])
                   (lengths :: [PhonemeData.Length])
                   (tones :: [PhonemeData.Tone]) ->
                 let {
                   x568 :: [PhonemeData.Phoneme]
                   = letrec {
                       go1 :: [PhonemeData.Height] -> [PhonemeData.Phoneme]
                         {- Arity: 1, Strictness: <S,1*U> -}
                       = \ (ds :: [PhonemeData.Height]) ->
                         case ds of wild {
                           [] -> GHC.Types.[] @ PhonemeData.Phoneme
                           : y ys
                           -> let {
                                ys1 :: [PhonemeData.Phoneme] = go1 ys
                              } in
                              letrec {
                                go2 :: [PhonemeData.Backness] -> [PhonemeData.Phoneme]
                                  {- Arity: 1, Strictness: <S,1*U> -}
                                = \ (ds1 :: [PhonemeData.Backness]) ->
                                  case ds1 of wild1 {
                                    [] -> ys1
                                    : y1 ys2
                                    -> let {
                                         z :: [PhonemeData.Phoneme] = go2 ys2
                                       } in
                                       letrec {
                                         go3 :: [PhonemeData.Roundedness] -> [PhonemeData.Phoneme]
                                           {- Arity: 1, Strictness: <S,1*U> -}
                                         = \ (ds2 :: [PhonemeData.Roundedness]) ->
                                           case ds2 of wild2 {
                                             [] -> z
                                             : y2 ys3
                                             -> let {
                                                  z1 :: [PhonemeData.Phoneme] = go3 ys3
                                                } in
                                                letrec {
                                                  go4 :: [PhonemeData.Length]
                                                         -> [PhonemeData.Phoneme]
                                                    {- Arity: 1, Strictness: <S,1*U> -}
                                                  = \ (ds3 :: [PhonemeData.Length]) ->
                                                    case ds3 of wild3 {
                                                      [] -> z1
                                                      : y3 ys4
                                                      -> let {
                                                           z2 :: [PhonemeData.Phoneme] = go4 ys4
                                                         } in
                                                         letrec {
                                                           go5 :: [PhonemeData.Tone]
                                                                  -> [PhonemeData.Phoneme]
                                                             {- Arity: 1, Strictness: <S,1*U> -}
                                                           = \ (ds4 :: [PhonemeData.Tone]) ->
                                                             case ds4 of wild4 {
                                                               [] -> z2
                                                               : y4 ys5
                                                               -> GHC.Types.:
                                                                    @ PhonemeData.Phoneme
                                                                    (PhonemeData.Vowel
                                                                       y
                                                                       y1
                                                                       y2
                                                                       y3
                                                                       y4
                                                                       (PhonemeGen.retrieveVSymbol
                                                                          y
                                                                          y1
                                                                          y2
                                                                          y3
                                                                          y4))
                                                                    (go5 ys5) }
                                                         } in
                                                         go5 tones }
                                                } in
                                                go4 lengths }
                                       } in
                                       go3 rounds }
                              } in
                              go2 backs }
                     } in
                     go1 heights
                 } in
                 (\ @ b
                    (eta :: [PhonemeData.Phoneme] -> b)
                    (eta1 :: forall a1.
                             Control.Monad.Prompt.Lift
                               Data.Random.Source.Internal.Prim.Prim
                               Data.Functor.Identity.Identity
                               a1
                             -> (a1 -> b) -> b) ->
                  case x568 of x569 { DEFAULT -> eta x569 })
                   `cast`
                 (Trans
                      (Sym (Control.Monad.Prompt.N:Prompt[0]
                                <Control.Monad.Prompt.Lift
                                   Data.Random.Source.Internal.Prim.Prim
                                   Data.Functor.Identity.Identity>_R
                                <[PhonemeData.Phoneme]>_R))
                      (Trans
                           (Sym (Control.Monad.Prompt.N:PromptT[0]
                                     <Data.Random.Source.Internal.Prim.Prim>_R
                                     <Data.Functor.Identity.Identity>_R))
                           (Sym (Data.RVar.N:RVarT[0]) <Data.Functor.Identity.Identity>_N) <[PhonemeData.Phoneme]>_N))) -}
bdf12e9fbb705d61be7a9e0595327a80
  retrieveVSymbol ::
    PhonemeData.Height
    -> PhonemeData.Backness
    -> PhonemeData.Roundedness
    -> PhonemeData.Length
    -> PhonemeData.Tone
    -> GHC.Base.String
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,U> -}
"SPEC/PhonemeGen $fEq(,) @ Place @ Manner" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                      PhonemeData.Place)
                                                           ($dEq1 :: GHC.Classes.Eq
                                                                       PhonemeData.Manner)
  GHC.Classes.$fEq(,) @ PhonemeData.Place
                      @ PhonemeData.Manner
                      $dEq
                      $dEq1
  = PhonemeGen.$s$fEq(,)
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

