
==================== FINAL INTERFACE ====================
2016-12-09 19:39:32.811263 UTC

interface con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39:GrammarData 8001
  interface hash: 5776539e567236b54dc56c063e51c2cf
  ABI hash: b3f1b629a10fd7ab7130c02c0a41c76e
  export-list hash: 548dc15ef6450fdf930313fe49b6bb09
  orphan hash: 31330bcb1ec9a276fbfcc8ecf77d26bb
  flag hash: b159a15c55fa7c6870cb2eb79bbae5a5
  sig of: Nothing
  used TH splices: False
  where
exports:
  GrammarData.AffixHopping{GrammarData.NoAffixHop GrammarData.OblAffixHop}
  GrammarData.Bar{GrammarData.XBarA GrammarData.XBarC adjunct barBar barIl barLC compliment leaf}
  GrammarData.ComplementizerInitial{GrammarData.CompFinal GrammarData.CompInitial}
  GrammarData.Grammar{GrammarData.Grammar getAH getCI getItoC getNS getNT getOF getObT getPP getQI getSI getTM getVtoI getWHM}
  GrammarData.Illoc{GrammarData.Decl GrammarData.Imper GrammarData.Null GrammarData.Ques}
  GrammarData.ItoCMovement{GrammarData.NoItoCMove GrammarData.OblItoCMove}
  GrammarData.Leaf{GrammarData.Leaf GrammarData.LeafInfl GrammarData.LeafNull leafIl leafInfl leafLC leafStr}
  GrammarData.NullSubject{GrammarData.NoNullSub GrammarData.OptNullSub}
  GrammarData.NullTopic{GrammarData.NoNullTop GrammarData.OptNullTop}
  GrammarData.ObjectFinal{GrammarData.ObjFinal GrammarData.ObjInitial}
  GrammarData.ObligatoryTopic{GrammarData.OblTopic GrammarData.OptTopic}
  GrammarData.Phrase{GrammarData.XP GrammarData.XPNull phraseBar phraseIl phraseLC specifier}
  GrammarData.PiedPiping{GrammarData.PiedPipe GrammarData.PrepStrand}
  GrammarData.QuestionInversion{GrammarData.NoQuesInv GrammarData.OblQuesInv}
  GrammarData.SubjectInitial{GrammarData.SubFinal GrammarData.SubInitial}
  GrammarData.TopicMarking{GrammarData.NoTopMark GrammarData.OblTopMark}
  GrammarData.VtoIMovement{GrammarData.NoVtoIMove GrammarData.OblVtoIMove}
  GrammarData.WHMovementObligatory{GrammarData.NoWHMove GrammarData.OblWHMove}
module dependencies: InflectionData OtherData PhonemeData
package dependencies: base-4.9.0.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.0.0:GHC.Base base-4.9.0.0:GHC.Float
         con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39:InflectionData
family instance modules: base-4.9.0.0:Control.Applicative
                         base-4.9.0.0:Data.Either base-4.9.0.0:Data.Functor.Const
                         base-4.9.0.0:Data.Monoid base-4.9.0.0:Data.Type.Equality
                         base-4.9.0.0:GHC.Generics base-4.9.0.0:GHC.IO.Exception
                         base-4.9.0.0:GHC.TypeLits
import  -/  base-4.9.0.0:GHC.Base 8ed3be81c0707b322f975a84ae1bb816
import  -/  base-4.9.0.0:GHC.Enum fdf7ac3e1b0be0a4a37257601bddad14
import  -/  base-4.9.0.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.0.0:GHC.Num 48f506a8f4ecf06285d0a0706594dcc0
import  -/  base-4.9.0.0:GHC.Read 817c914615ac8e308afc0c675fb3f671
import  -/  base-4.9.0.0:GHC.Show 952347a6ab730bcb25c0854d8bc6ca51
import  -/  base-4.9.0.0:Prelude b9bddb97799837fe67a8d00939a5b6c3
import  -/  InflectionData 8acf7dbedb4c8763319b881883494d75
  exports: ab2a6241f04be9eb006c9d0f78ca26d5
  Animacy 4e33e0bcf50cecb3bec919a410a917b8
  Aspect cc1d01770048a1b059770fc511c26180
  Case c7ab55970bdd5f1f3c2a1893488ee946
  Definiteness 13bfeba0cb3001719a9764357d888c67
  Evidentiality d496e50507466d81d95f22dd4857ca16
  Express 63d70c4f2d77c644511c6d588663f39e
  Gender 64c563e614d6b39e628a87a4b86c4bcb
  Honorific 87a0680d1783cb156a72782bde86c25f
  LexCat 3578a365ab634279655cb91c03a19c28
  Mood a933e005d0b61de32dcb62fc71171e9c
  Number 819df3b7803a0b6e1c638b12031d1054
  Person 9a6bbd54f38dfeb1bf3b7d7991f3da1c
  Polarity 969cd5a99a727ddd44430477f29dd629
  Specificity 6fb3d15dec5a1fd023a4704d57cac2a0
  Tense a794f63e2da02424ad65302f61d49d0d
  Topic d8981f1670fc020ebc5d708b5dd733da
  Transitivity fbfbb10e2c2bf7855f3005c5f582ce67
  Voice 8a5a669af2386e102c8f50cb27f7b624
  Volition 3559279b2cc9168c42f1489c451a8e43
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping :: GHC.Enum.Enum GrammarData.AffixHopping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.AffixHopping
                  GrammarData.$fEnumAffixHopping_$csucc
                  GrammarData.$fEnumAffixHopping_$cpred
                  GrammarData.$fEnumAffixHopping_$ctoEnum
                  GrammarData.$fEnumAffixHopping_$cfromEnum
                  GrammarData.$fEnumAffixHopping_$cenumFrom
                  GrammarData.$fEnumAffixHopping_$cenumFromThen
                  GrammarData.$fEnumAffixHopping_$cenumFromTo
                  GrammarData.$fEnumAffixHopping_$cenumFromThenTo -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping1 :: GHC.Prim.Int# -> GrammarData.AffixHopping
  {- Arity: 1, Strictness: <L,U>x -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping2 :: [GrammarData.AffixHopping]
  {- Unfolding: (GrammarData.$fEnumAffixHopping_go2 1#) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping3 :: [GrammarData.AffixHopping]
  {- Unfolding: (GrammarData.$fEnumAffixHopping_go3 0#) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping4 :: GrammarData.AffixHopping
  {- Strictness: x -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping5 :: GrammarData.AffixHopping
  {- Strictness: x -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cenumFrom ::
    GrammarData.AffixHopping -> [GrammarData.AffixHopping]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.AffixHopping) ->
                 case a of wild {
                   GrammarData.NoAffixHop -> GrammarData.$fEnumAffixHopping3
                   GrammarData.OblAffixHop -> GrammarData.$fEnumAffixHopping2 }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cenumFromThen ::
    GrammarData.AffixHopping
    -> GrammarData.AffixHopping -> [GrammarData.AffixHopping]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.AffixHopping)
                   (b :: GrammarData.AffixHopping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.AffixHopping]
                                    GrammarData.$fEnumAffixHopping_c1
                                    (GHC.Types.[] @ GrammarData.AffixHopping)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.AffixHopping]
                                    GrammarData.$fEnumAffixHopping_c1
                                    (GHC.Types.[] @ GrammarData.AffixHopping)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoAffixHop -> $j1 0#
                       GrammarData.OblAffixHop -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoAffixHop -> $j 0#
                   GrammarData.OblAffixHop -> $j 1# }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cenumFromThenTo ::
    GrammarData.AffixHopping
    -> GrammarData.AffixHopping
    -> GrammarData.AffixHopping
    -> [GrammarData.AffixHopping]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.AffixHopping)
                   (x2 :: GrammarData.AffixHopping)
                   (y :: GrammarData.AffixHopping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoAffixHop
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.AffixHopping]
                                     GrammarData.$fEnumAffixHopping_c
                                     (GHC.Types.[] @ GrammarData.AffixHopping)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.AffixHopping]
                                     GrammarData.$fEnumAffixHopping_c
                                     (GHC.Types.[] @ GrammarData.AffixHopping)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblAffixHop
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.AffixHopping]
                                     GrammarData.$fEnumAffixHopping_c
                                     (GHC.Types.[] @ GrammarData.AffixHopping)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.AffixHopping]
                                     GrammarData.$fEnumAffixHopping_c
                                     (GHC.Types.[] @ GrammarData.AffixHopping)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoAffixHop -> $j1 0#
                       GrammarData.OblAffixHop -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoAffixHop -> $j 0#
                   GrammarData.OblAffixHop -> $j 1# }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cenumFromTo ::
    GrammarData.AffixHopping
    -> GrammarData.AffixHopping -> [GrammarData.AffixHopping]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.AffixHopping)
                   (y :: GrammarData.AffixHopping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.AffixHopping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoAffixHop
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumAffixHopping_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.AffixHopping }
                       GrammarData.OblAffixHop
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumAffixHopping_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.AffixHopping } }
                 } in
                 case x of wild {
                   GrammarData.NoAffixHop -> $j 0#
                   GrammarData.OblAffixHop -> $j 1# }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cfromEnum ::
    GrammarData.AffixHopping -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.AffixHopping) ->
                 case a of wild {
                   GrammarData.NoAffixHop -> GHC.Types.I# 0#
                   GrammarData.OblAffixHop -> GHC.Types.I# 1# }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$cpred ::
    GrammarData.AffixHopping -> GrammarData.AffixHopping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.AffixHopping) ->
                 case a of wild {
                   GrammarData.NoAffixHop -> GrammarData.$fEnumAffixHopping4
                   GrammarData.OblAffixHop -> GrammarData.NoAffixHop }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$csucc ::
    GrammarData.AffixHopping -> GrammarData.AffixHopping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.AffixHopping) ->
                 case a of wild {
                   GrammarData.NoAffixHop -> GrammarData.OblAffixHop
                   GrammarData.OblAffixHop -> GrammarData.$fEnumAffixHopping5 }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_$ctoEnum ::
    GHC.Types.Int -> GrammarData.AffixHopping
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 -> GrammarData.$w$ctoEnum ww1 }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_c ::
    GHC.Types.Int
    -> [GrammarData.AffixHopping] -> [GrammarData.AffixHopping]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.AffixHopping]) ->
                 GHC.Types.:
                   @ GrammarData.AffixHopping
                   (GrammarData.$fEnumAffixHopping_$ctoEnum x)
                   ys) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_c1 ::
    GHC.Types.Int
    -> [GrammarData.AffixHopping] -> [GrammarData.AffixHopping]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.AffixHopping]) ->
                 GHC.Types.:
                   @ GrammarData.AffixHopping
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.AffixHopping a })
                   ys) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_go ::
    GHC.Prim.Int# -> [GrammarData.AffixHopping]
  {- Arity: 1, Strictness: <L,U> -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_go1 ::
    GHC.Prim.Int# -> [GrammarData.AffixHopping]
  {- Arity: 1, Strictness: <L,U> -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_go2 ::
    GHC.Prim.Int# -> [GrammarData.AffixHopping]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1b7f4a36baf794187a01f705f3af35bc
  $fEnumAffixHopping_go3 ::
    GHC.Prim.Int# -> [GrammarData.AffixHopping]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial ::
    GHC.Enum.Enum GrammarData.ComplementizerInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ComplementizerInitial
                  GrammarData.$fEnumComplementizerInitial_$csucc
                  GrammarData.$fEnumComplementizerInitial_$cpred
                  GrammarData.$fEnumComplementizerInitial_$ctoEnum
                  GrammarData.$fEnumComplementizerInitial_$cfromEnum
                  GrammarData.$fEnumComplementizerInitial_$cenumFrom
                  GrammarData.$fEnumComplementizerInitial_$cenumFromThen
                  GrammarData.$fEnumComplementizerInitial_$cenumFromTo
                  GrammarData.$fEnumComplementizerInitial_$cenumFromThenTo -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial1 ::
    GHC.Prim.Int# -> GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <L,U>x -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial2 :: [GrammarData.ComplementizerInitial]
  {- Unfolding: (GrammarData.$fEnumComplementizerInitial_go2 1#) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial3 :: [GrammarData.ComplementizerInitial]
  {- Unfolding: (GrammarData.$fEnumComplementizerInitial_go3 0#) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial4 :: GrammarData.ComplementizerInitial
  {- Strictness: x -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial5 :: GrammarData.ComplementizerInitial
  {- Strictness: x -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cenumFrom ::
    GrammarData.ComplementizerInitial
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.ComplementizerInitial) ->
                 case a of wild {
                   GrammarData.CompInitial -> GrammarData.$fEnumComplementizerInitial3
                   GrammarData.CompFinal
                   -> GrammarData.$fEnumComplementizerInitial2 }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cenumFromThen ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.ComplementizerInitial)
                   (b :: GrammarData.ComplementizerInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.ComplementizerInitial]
                                    GrammarData.$fEnumComplementizerInitial_c1
                                    (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.ComplementizerInitial]
                                    GrammarData.$fEnumComplementizerInitial_c1
                                    (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.CompInitial -> $j1 0# GrammarData.CompFinal -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.CompInitial -> $j 0#
                   GrammarData.CompFinal -> $j 1# }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cenumFromThenTo ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.ComplementizerInitial)
                   (x2 :: GrammarData.ComplementizerInitial)
                   (y :: GrammarData.ComplementizerInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.CompInitial
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ComplementizerInitial]
                                     GrammarData.$fEnumComplementizerInitial_c
                                     (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ComplementizerInitial]
                                     GrammarData.$fEnumComplementizerInitial_c
                                     (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                     x4
                                     x5
                                     0# }
                           GrammarData.CompFinal
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ComplementizerInitial]
                                     GrammarData.$fEnumComplementizerInitial_c
                                     (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ComplementizerInitial]
                                     GrammarData.$fEnumComplementizerInitial_c
                                     (GHC.Types.[] @ GrammarData.ComplementizerInitial)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.CompInitial -> $j1 0# GrammarData.CompFinal -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.CompInitial -> $j 0#
                   GrammarData.CompFinal -> $j 1# }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cenumFromTo ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.ComplementizerInitial)
                   (y :: GrammarData.ComplementizerInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.CompInitial
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumComplementizerInitial_go1 x1
                            GHC.Types.True
                            -> GHC.Types.[] @ GrammarData.ComplementizerInitial }
                       GrammarData.CompFinal
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumComplementizerInitial_go x1
                            GHC.Types.True
                            -> GHC.Types.[] @ GrammarData.ComplementizerInitial } }
                 } in
                 case x of wild {
                   GrammarData.CompInitial -> $j 0#
                   GrammarData.CompFinal -> $j 1# }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cfromEnum ::
    GrammarData.ComplementizerInitial -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ComplementizerInitial) ->
                 case a of wild {
                   GrammarData.CompInitial -> GHC.Types.I# 0#
                   GrammarData.CompFinal -> GHC.Types.I# 1# }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$cpred ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ComplementizerInitial) ->
                 case a of wild {
                   GrammarData.CompInitial -> GrammarData.$fEnumComplementizerInitial4
                   GrammarData.CompFinal -> GrammarData.CompInitial }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$csucc ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ComplementizerInitial) ->
                 case a of wild {
                   GrammarData.CompInitial -> GrammarData.CompFinal
                   GrammarData.CompFinal
                   -> GrammarData.$fEnumComplementizerInitial5 }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_$ctoEnum ::
    GHC.Types.Int -> GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum1 ww1 }) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_c ::
    GHC.Types.Int
    -> [GrammarData.ComplementizerInitial]
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int)
                   (ys :: [GrammarData.ComplementizerInitial]) ->
                 GHC.Types.:
                   @ GrammarData.ComplementizerInitial
                   (GrammarData.$fEnumComplementizerInitial_$ctoEnum x)
                   ys) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_c1 ::
    GHC.Types.Int
    -> [GrammarData.ComplementizerInitial]
    -> [GrammarData.ComplementizerInitial]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int)
                   (ys :: [GrammarData.ComplementizerInitial]) ->
                 GHC.Types.:
                   @ GrammarData.ComplementizerInitial
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.ComplementizerInitial a })
                   ys) -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_go ::
    GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
  {- Arity: 1, Strictness: <L,U> -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_go1 ::
    GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
  {- Arity: 1, Strictness: <L,U> -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_go2 ::
    GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
2be002b59c64ba138a144cb19c908678
  $fEnumComplementizerInitial_go3 ::
    GHC.Prim.Int# -> [GrammarData.ComplementizerInitial]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc :: GHC.Enum.Enum GrammarData.Illoc
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Illoc
                  GrammarData.$fEnumIlloc_$csucc
                  GrammarData.$fEnumIlloc_$cpred
                  GrammarData.$fEnumIlloc_$ctoEnum
                  GrammarData.$fEnumIlloc_$cfromEnum
                  GrammarData.$fEnumIlloc_$cenumFrom
                  GrammarData.$fEnumIlloc_$cenumFromThen
                  GrammarData.$fEnumIlloc_$cenumFromTo
                  GrammarData.$fEnumIlloc_$cenumFromThenTo -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc1 :: [GrammarData.Illoc]
  {- Unfolding: (GrammarData.$fEnumIlloc_go4 3#) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc2 :: [GrammarData.Illoc]
  {- Unfolding: (GrammarData.$fEnumIlloc_go5 2#) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc3 :: [GrammarData.Illoc]
  {- Unfolding: (GrammarData.$fEnumIlloc_go6 1#) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc4 :: [GrammarData.Illoc]
  {- Unfolding: (GrammarData.$fEnumIlloc_go7 0#) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc5 :: GHC.Prim.Int# -> GrammarData.Illoc
  {- Arity: 1, Strictness: <L,U>x -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc6 :: GrammarData.Illoc
  {- Strictness: x -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc7 :: GrammarData.Illoc
  {- Strictness: x -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cenumFrom :: GrammarData.Illoc -> [GrammarData.Illoc]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.Illoc) ->
                 case a of wild {
                   GrammarData.Null -> GrammarData.$fEnumIlloc4
                   GrammarData.Ques -> GrammarData.$fEnumIlloc3
                   GrammarData.Decl -> GrammarData.$fEnumIlloc2
                   GrammarData.Imper -> GrammarData.$fEnumIlloc1 }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cenumFromThen ::
    GrammarData.Illoc -> GrammarData.Illoc -> [GrammarData.Illoc]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.Illoc) (b :: GrammarData.Illoc) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.Illoc]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.Illoc]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.Illoc]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.Illoc]
                                    GrammarData.$fEnumIlloc_c
                                    (GHC.Types.[] @ GrammarData.Illoc)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.Illoc]
                                    GrammarData.$fEnumIlloc_c
                                    (GHC.Types.[] @ GrammarData.Illoc)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 3# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.Null -> $j1 0#
                       GrammarData.Ques -> $j1 1#
                       GrammarData.Decl -> $j1 2#
                       GrammarData.Imper -> $j1 3# }
                 } in
                 case a of wild {
                   GrammarData.Null -> $j 0#
                   GrammarData.Ques -> $j 1#
                   GrammarData.Decl -> $j 2#
                   GrammarData.Imper -> $j 3# }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cenumFromThenTo ::
    GrammarData.Illoc
    -> GrammarData.Illoc -> GrammarData.Illoc -> [GrammarData.Illoc]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cenumFromTo ::
    GrammarData.Illoc -> GrammarData.Illoc -> [GrammarData.Illoc]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.Illoc) (y :: GrammarData.Illoc) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.Illoc]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.Null
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumIlloc_go3 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.Illoc }
                       GrammarData.Ques
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumIlloc_go2 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.Illoc }
                       GrammarData.Decl
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 2#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumIlloc_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.Illoc }
                       GrammarData.Imper
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 3#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumIlloc_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.Illoc } }
                 } in
                 case x of wild {
                   GrammarData.Null -> $j 0#
                   GrammarData.Ques -> $j 1#
                   GrammarData.Decl -> $j 2#
                   GrammarData.Imper -> $j 3# }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cfromEnum :: GrammarData.Illoc -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.Illoc) ->
                 case a of wild {
                   GrammarData.Null -> GHC.Types.I# 0#
                   GrammarData.Ques -> GHC.Types.I# 1#
                   GrammarData.Decl -> GHC.Types.I# 2#
                   GrammarData.Imper -> GHC.Types.I# 3# }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$cpred :: GrammarData.Illoc -> GrammarData.Illoc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.Illoc) ->
                 case a of wild {
                   GrammarData.Null -> GrammarData.$fEnumIlloc6
                   GrammarData.Ques -> GrammarData.Null
                   GrammarData.Decl -> GrammarData.Ques
                   GrammarData.Imper -> GrammarData.Decl }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$csucc :: GrammarData.Illoc -> GrammarData.Illoc
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.Illoc) ->
                 case a of wild {
                   GrammarData.Null -> GrammarData.Ques
                   GrammarData.Ques -> GrammarData.Decl
                   GrammarData.Decl -> GrammarData.Imper
                   GrammarData.Imper -> GrammarData.$fEnumIlloc7 }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_$ctoEnum :: GHC.Types.Int -> GrammarData.Illoc
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum2 ww1 }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_c ::
    GHC.Types.Int -> [GrammarData.Illoc] -> [GrammarData.Illoc]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.Illoc]) ->
                 GHC.Types.:
                   @ GrammarData.Illoc
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.Illoc a })
                   ys) -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go1 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go2 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go3 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go4 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go5 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go6 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4c6bb1f31e4c8548c057d21577834136
  $fEnumIlloc_go7 :: GHC.Prim.Int# -> [GrammarData.Illoc]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement :: GHC.Enum.Enum GrammarData.ItoCMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ItoCMovement
                  GrammarData.$fEnumItoCMovement_$csucc
                  GrammarData.$fEnumItoCMovement_$cpred
                  GrammarData.$fEnumItoCMovement_$ctoEnum
                  GrammarData.$fEnumItoCMovement_$cfromEnum
                  GrammarData.$fEnumItoCMovement_$cenumFrom
                  GrammarData.$fEnumItoCMovement_$cenumFromThen
                  GrammarData.$fEnumItoCMovement_$cenumFromTo
                  GrammarData.$fEnumItoCMovement_$cenumFromThenTo -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement1 :: GHC.Prim.Int# -> GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <L,U>x -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement2 :: [GrammarData.ItoCMovement]
  {- Unfolding: (GrammarData.$fEnumItoCMovement_go2 1#) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement3 :: [GrammarData.ItoCMovement]
  {- Unfolding: (GrammarData.$fEnumItoCMovement_go3 0#) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement4 :: GrammarData.ItoCMovement
  {- Strictness: x -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement5 :: GrammarData.ItoCMovement
  {- Strictness: x -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cenumFrom ::
    GrammarData.ItoCMovement -> [GrammarData.ItoCMovement]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.ItoCMovement) ->
                 case a of wild {
                   GrammarData.NoItoCMove -> GrammarData.$fEnumItoCMovement3
                   GrammarData.OblItoCMove -> GrammarData.$fEnumItoCMovement2 }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cenumFromThen ::
    GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement -> [GrammarData.ItoCMovement]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.ItoCMovement)
                   (b :: GrammarData.ItoCMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.ItoCMovement]
                                    GrammarData.$fEnumItoCMovement_c1
                                    (GHC.Types.[] @ GrammarData.ItoCMovement)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.ItoCMovement]
                                    GrammarData.$fEnumItoCMovement_c1
                                    (GHC.Types.[] @ GrammarData.ItoCMovement)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoItoCMove -> $j1 0#
                       GrammarData.OblItoCMove -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoItoCMove -> $j 0#
                   GrammarData.OblItoCMove -> $j 1# }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cenumFromThenTo ::
    GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement
    -> [GrammarData.ItoCMovement]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.ItoCMovement)
                   (x2 :: GrammarData.ItoCMovement)
                   (y :: GrammarData.ItoCMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoItoCMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ItoCMovement]
                                     GrammarData.$fEnumItoCMovement_c
                                     (GHC.Types.[] @ GrammarData.ItoCMovement)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ItoCMovement]
                                     GrammarData.$fEnumItoCMovement_c
                                     (GHC.Types.[] @ GrammarData.ItoCMovement)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblItoCMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ItoCMovement]
                                     GrammarData.$fEnumItoCMovement_c
                                     (GHC.Types.[] @ GrammarData.ItoCMovement)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ItoCMovement]
                                     GrammarData.$fEnumItoCMovement_c
                                     (GHC.Types.[] @ GrammarData.ItoCMovement)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoItoCMove -> $j1 0#
                       GrammarData.OblItoCMove -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoItoCMove -> $j 0#
                   GrammarData.OblItoCMove -> $j 1# }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cenumFromTo ::
    GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement -> [GrammarData.ItoCMovement]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.ItoCMovement)
                   (y :: GrammarData.ItoCMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ItoCMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoItoCMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumItoCMovement_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ItoCMovement }
                       GrammarData.OblItoCMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumItoCMovement_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ItoCMovement } }
                 } in
                 case x of wild {
                   GrammarData.NoItoCMove -> $j 0#
                   GrammarData.OblItoCMove -> $j 1# }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cfromEnum ::
    GrammarData.ItoCMovement -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ItoCMovement) ->
                 case a of wild {
                   GrammarData.NoItoCMove -> GHC.Types.I# 0#
                   GrammarData.OblItoCMove -> GHC.Types.I# 1# }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$cpred ::
    GrammarData.ItoCMovement -> GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ItoCMovement) ->
                 case a of wild {
                   GrammarData.NoItoCMove -> GrammarData.$fEnumItoCMovement4
                   GrammarData.OblItoCMove -> GrammarData.NoItoCMove }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$csucc ::
    GrammarData.ItoCMovement -> GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ItoCMovement) ->
                 case a of wild {
                   GrammarData.NoItoCMove -> GrammarData.OblItoCMove
                   GrammarData.OblItoCMove -> GrammarData.$fEnumItoCMovement5 }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_$ctoEnum ::
    GHC.Types.Int -> GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum3 ww1 }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_c ::
    GHC.Types.Int
    -> [GrammarData.ItoCMovement] -> [GrammarData.ItoCMovement]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ItoCMovement]) ->
                 GHC.Types.:
                   @ GrammarData.ItoCMovement
                   (GrammarData.$fEnumItoCMovement_$ctoEnum x)
                   ys) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_c1 ::
    GHC.Types.Int
    -> [GrammarData.ItoCMovement] -> [GrammarData.ItoCMovement]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ItoCMovement]) ->
                 GHC.Types.:
                   @ GrammarData.ItoCMovement
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.ItoCMovement a })
                   ys) -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_go ::
    GHC.Prim.Int# -> [GrammarData.ItoCMovement]
  {- Arity: 1, Strictness: <L,U> -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_go1 ::
    GHC.Prim.Int# -> [GrammarData.ItoCMovement]
  {- Arity: 1, Strictness: <L,U> -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_go2 ::
    GHC.Prim.Int# -> [GrammarData.ItoCMovement]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
29901a1223a3a84f8195c61990d5cb58
  $fEnumItoCMovement_go3 ::
    GHC.Prim.Int# -> [GrammarData.ItoCMovement]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject :: GHC.Enum.Enum GrammarData.NullSubject
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullSubject
                  GrammarData.$fEnumNullSubject_$csucc
                  GrammarData.$fEnumNullSubject_$cpred
                  GrammarData.$fEnumNullSubject_$ctoEnum
                  GrammarData.$fEnumNullSubject_$cfromEnum
                  GrammarData.$fEnumNullSubject_$cenumFrom
                  GrammarData.$fEnumNullSubject_$cenumFromThen
                  GrammarData.$fEnumNullSubject_$cenumFromTo
                  GrammarData.$fEnumNullSubject_$cenumFromThenTo -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject1 :: GHC.Prim.Int# -> GrammarData.NullSubject
  {- Arity: 1, Strictness: <L,U>x -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject2 :: [GrammarData.NullSubject]
  {- Unfolding: (GrammarData.$fEnumNullSubject_go2 1#) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject3 :: [GrammarData.NullSubject]
  {- Unfolding: (GrammarData.$fEnumNullSubject_go3 0#) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject4 :: GrammarData.NullSubject
  {- Strictness: x -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject5 :: GrammarData.NullSubject
  {- Strictness: x -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cenumFrom ::
    GrammarData.NullSubject -> [GrammarData.NullSubject]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.NullSubject) ->
                 case a of wild {
                   GrammarData.NoNullSub -> GrammarData.$fEnumNullSubject3
                   GrammarData.OptNullSub -> GrammarData.$fEnumNullSubject2 }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cenumFromThen ::
    GrammarData.NullSubject
    -> GrammarData.NullSubject -> [GrammarData.NullSubject]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.NullSubject)
                   (b :: GrammarData.NullSubject) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.NullSubject]
                                    GrammarData.$fEnumNullSubject_c1
                                    (GHC.Types.[] @ GrammarData.NullSubject)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.NullSubject]
                                    GrammarData.$fEnumNullSubject_c1
                                    (GHC.Types.[] @ GrammarData.NullSubject)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoNullSub -> $j1 0# GrammarData.OptNullSub -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoNullSub -> $j 0#
                   GrammarData.OptNullSub -> $j 1# }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cenumFromThenTo ::
    GrammarData.NullSubject
    -> GrammarData.NullSubject
    -> GrammarData.NullSubject
    -> [GrammarData.NullSubject]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.NullSubject)
                   (x2 :: GrammarData.NullSubject)
                   (y :: GrammarData.NullSubject) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoNullSub
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.NullSubject]
                                     GrammarData.$fEnumNullSubject_c
                                     (GHC.Types.[] @ GrammarData.NullSubject)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.NullSubject]
                                     GrammarData.$fEnumNullSubject_c
                                     (GHC.Types.[] @ GrammarData.NullSubject)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OptNullSub
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.NullSubject]
                                     GrammarData.$fEnumNullSubject_c
                                     (GHC.Types.[] @ GrammarData.NullSubject)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.NullSubject]
                                     GrammarData.$fEnumNullSubject_c
                                     (GHC.Types.[] @ GrammarData.NullSubject)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoNullSub -> $j1 0# GrammarData.OptNullSub -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoNullSub -> $j 0#
                   GrammarData.OptNullSub -> $j 1# }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cenumFromTo ::
    GrammarData.NullSubject
    -> GrammarData.NullSubject -> [GrammarData.NullSubject]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.NullSubject)
                   (y :: GrammarData.NullSubject) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullSubject]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoNullSub
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumNullSubject_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.NullSubject }
                       GrammarData.OptNullSub
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumNullSubject_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.NullSubject } }
                 } in
                 case x of wild {
                   GrammarData.NoNullSub -> $j 0#
                   GrammarData.OptNullSub -> $j 1# }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cfromEnum ::
    GrammarData.NullSubject -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullSubject) ->
                 case a of wild {
                   GrammarData.NoNullSub -> GHC.Types.I# 0#
                   GrammarData.OptNullSub -> GHC.Types.I# 1# }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$cpred ::
    GrammarData.NullSubject -> GrammarData.NullSubject
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullSubject) ->
                 case a of wild {
                   GrammarData.NoNullSub -> GrammarData.$fEnumNullSubject4
                   GrammarData.OptNullSub -> GrammarData.NoNullSub }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$csucc ::
    GrammarData.NullSubject -> GrammarData.NullSubject
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullSubject) ->
                 case a of wild {
                   GrammarData.NoNullSub -> GrammarData.OptNullSub
                   GrammarData.OptNullSub -> GrammarData.$fEnumNullSubject5 }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_$ctoEnum ::
    GHC.Types.Int -> GrammarData.NullSubject
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum4 ww1 }) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_c ::
    GHC.Types.Int
    -> [GrammarData.NullSubject] -> [GrammarData.NullSubject]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.NullSubject]) ->
                 GHC.Types.:
                   @ GrammarData.NullSubject
                   (GrammarData.$fEnumNullSubject_$ctoEnum x)
                   ys) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_c1 ::
    GHC.Types.Int
    -> [GrammarData.NullSubject] -> [GrammarData.NullSubject]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.NullSubject]) ->
                 GHC.Types.:
                   @ GrammarData.NullSubject
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.NullSubject a })
                   ys) -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_go :: GHC.Prim.Int# -> [GrammarData.NullSubject]
  {- Arity: 1, Strictness: <L,U> -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_go1 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
  {- Arity: 1, Strictness: <L,U> -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_go2 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
4123d9519741817da4543047c2f6b1c7
  $fEnumNullSubject_go3 :: GHC.Prim.Int# -> [GrammarData.NullSubject]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic :: GHC.Enum.Enum GrammarData.NullTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullTopic
                  GrammarData.$fEnumNullTopic_$csucc
                  GrammarData.$fEnumNullTopic_$cpred
                  GrammarData.$fEnumNullTopic_$ctoEnum
                  GrammarData.$fEnumNullTopic_$cfromEnum
                  GrammarData.$fEnumNullTopic_$cenumFrom
                  GrammarData.$fEnumNullTopic_$cenumFromThen
                  GrammarData.$fEnumNullTopic_$cenumFromTo
                  GrammarData.$fEnumNullTopic_$cenumFromThenTo -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic1 :: GHC.Prim.Int# -> GrammarData.NullTopic
  {- Arity: 1, Strictness: <L,U>x -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic2 :: [GrammarData.NullTopic]
  {- Unfolding: (GrammarData.$fEnumNullTopic_go2 1#) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic3 :: [GrammarData.NullTopic]
  {- Unfolding: (GrammarData.$fEnumNullTopic_go3 0#) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic4 :: GrammarData.NullTopic
  {- Strictness: x -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic5 :: GrammarData.NullTopic
  {- Strictness: x -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cenumFrom ::
    GrammarData.NullTopic -> [GrammarData.NullTopic]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.NullTopic) ->
                 case a of wild {
                   GrammarData.NoNullTop -> GrammarData.$fEnumNullTopic3
                   GrammarData.OptNullTop -> GrammarData.$fEnumNullTopic2 }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cenumFromThen ::
    GrammarData.NullTopic
    -> GrammarData.NullTopic -> [GrammarData.NullTopic]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.NullTopic)
                   (b :: GrammarData.NullTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.NullTopic]
                                    GrammarData.$fEnumNullTopic_c1
                                    (GHC.Types.[] @ GrammarData.NullTopic)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.NullTopic]
                                    GrammarData.$fEnumNullTopic_c1
                                    (GHC.Types.[] @ GrammarData.NullTopic)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoNullTop -> $j1 0# GrammarData.OptNullTop -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoNullTop -> $j 0#
                   GrammarData.OptNullTop -> $j 1# }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cenumFromThenTo ::
    GrammarData.NullTopic
    -> GrammarData.NullTopic
    -> GrammarData.NullTopic
    -> [GrammarData.NullTopic]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.NullTopic)
                   (x2 :: GrammarData.NullTopic)
                   (y :: GrammarData.NullTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoNullTop
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.NullTopic]
                                     GrammarData.$fEnumNullTopic_c
                                     (GHC.Types.[] @ GrammarData.NullTopic)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.NullTopic]
                                     GrammarData.$fEnumNullTopic_c
                                     (GHC.Types.[] @ GrammarData.NullTopic)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OptNullTop
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.NullTopic]
                                     GrammarData.$fEnumNullTopic_c
                                     (GHC.Types.[] @ GrammarData.NullTopic)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.NullTopic]
                                     GrammarData.$fEnumNullTopic_c
                                     (GHC.Types.[] @ GrammarData.NullTopic)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoNullTop -> $j1 0# GrammarData.OptNullTop -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoNullTop -> $j 0#
                   GrammarData.OptNullTop -> $j 1# }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cenumFromTo ::
    GrammarData.NullTopic
    -> GrammarData.NullTopic -> [GrammarData.NullTopic]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.NullTopic)
                   (y :: GrammarData.NullTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.NullTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoNullTop
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumNullTopic_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.NullTopic }
                       GrammarData.OptNullTop
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumNullTopic_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.NullTopic } }
                 } in
                 case x of wild {
                   GrammarData.NoNullTop -> $j 0#
                   GrammarData.OptNullTop -> $j 1# }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cfromEnum ::
    GrammarData.NullTopic -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullTopic) ->
                 case a of wild {
                   GrammarData.NoNullTop -> GHC.Types.I# 0#
                   GrammarData.OptNullTop -> GHC.Types.I# 1# }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$cpred ::
    GrammarData.NullTopic -> GrammarData.NullTopic
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullTopic) ->
                 case a of wild {
                   GrammarData.NoNullTop -> GrammarData.$fEnumNullTopic4
                   GrammarData.OptNullTop -> GrammarData.NoNullTop }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$csucc ::
    GrammarData.NullTopic -> GrammarData.NullTopic
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.NullTopic) ->
                 case a of wild {
                   GrammarData.NoNullTop -> GrammarData.OptNullTop
                   GrammarData.OptNullTop -> GrammarData.$fEnumNullTopic5 }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_$ctoEnum :: GHC.Types.Int -> GrammarData.NullTopic
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum5 ww1 }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_c ::
    GHC.Types.Int -> [GrammarData.NullTopic] -> [GrammarData.NullTopic]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.NullTopic]) ->
                 GHC.Types.:
                   @ GrammarData.NullTopic
                   (GrammarData.$fEnumNullTopic_$ctoEnum x)
                   ys) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_c1 ::
    GHC.Types.Int -> [GrammarData.NullTopic] -> [GrammarData.NullTopic]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.NullTopic]) ->
                 GHC.Types.:
                   @ GrammarData.NullTopic
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.NullTopic a })
                   ys) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_go :: GHC.Prim.Int# -> [GrammarData.NullTopic]
  {- Arity: 1, Strictness: <L,U> -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_go1 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
  {- Arity: 1, Strictness: <L,U> -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_go2 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1c46b92f8b870c141981ad765cca1f9c
  $fEnumNullTopic_go3 :: GHC.Prim.Int# -> [GrammarData.NullTopic]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal :: GHC.Enum.Enum GrammarData.ObjectFinal
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObjectFinal
                  GrammarData.$fEnumObjectFinal_$csucc
                  GrammarData.$fEnumObjectFinal_$cpred
                  GrammarData.$fEnumObjectFinal_$ctoEnum
                  GrammarData.$fEnumObjectFinal_$cfromEnum
                  GrammarData.$fEnumObjectFinal_$cenumFrom
                  GrammarData.$fEnumObjectFinal_$cenumFromThen
                  GrammarData.$fEnumObjectFinal_$cenumFromTo
                  GrammarData.$fEnumObjectFinal_$cenumFromThenTo -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal1 :: GHC.Prim.Int# -> GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <L,U>x -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal2 :: [GrammarData.ObjectFinal]
  {- Unfolding: (GrammarData.$fEnumObjectFinal_go2 1#) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal3 :: [GrammarData.ObjectFinal]
  {- Unfolding: (GrammarData.$fEnumObjectFinal_go3 0#) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal4 :: GrammarData.ObjectFinal
  {- Strictness: x -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal5 :: GrammarData.ObjectFinal
  {- Strictness: x -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cenumFrom ::
    GrammarData.ObjectFinal -> [GrammarData.ObjectFinal]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.ObjectFinal) ->
                 case a of wild {
                   GrammarData.ObjFinal -> GrammarData.$fEnumObjectFinal3
                   GrammarData.ObjInitial -> GrammarData.$fEnumObjectFinal2 }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cenumFromThen ::
    GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal -> [GrammarData.ObjectFinal]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.ObjectFinal)
                   (b :: GrammarData.ObjectFinal) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.ObjectFinal]
                                    GrammarData.$fEnumObjectFinal_c1
                                    (GHC.Types.[] @ GrammarData.ObjectFinal)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.ObjectFinal]
                                    GrammarData.$fEnumObjectFinal_c1
                                    (GHC.Types.[] @ GrammarData.ObjectFinal)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.ObjFinal -> $j1 0# GrammarData.ObjInitial -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.ObjFinal -> $j 0# GrammarData.ObjInitial -> $j 1# }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cenumFromThenTo ::
    GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal
    -> [GrammarData.ObjectFinal]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.ObjectFinal)
                   (x2 :: GrammarData.ObjectFinal)
                   (y :: GrammarData.ObjectFinal) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.ObjFinal
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ObjectFinal]
                                     GrammarData.$fEnumObjectFinal_c
                                     (GHC.Types.[] @ GrammarData.ObjectFinal)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ObjectFinal]
                                     GrammarData.$fEnumObjectFinal_c
                                     (GHC.Types.[] @ GrammarData.ObjectFinal)
                                     x4
                                     x5
                                     0# }
                           GrammarData.ObjInitial
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ObjectFinal]
                                     GrammarData.$fEnumObjectFinal_c
                                     (GHC.Types.[] @ GrammarData.ObjectFinal)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ObjectFinal]
                                     GrammarData.$fEnumObjectFinal_c
                                     (GHC.Types.[] @ GrammarData.ObjectFinal)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.ObjFinal -> $j1 0# GrammarData.ObjInitial -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.ObjFinal -> $j 0# GrammarData.ObjInitial -> $j 1# }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cenumFromTo ::
    GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal -> [GrammarData.ObjectFinal]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.ObjectFinal)
                   (y :: GrammarData.ObjectFinal) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.ObjFinal
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumObjectFinal_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ObjectFinal }
                       GrammarData.ObjInitial
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumObjectFinal_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ObjectFinal } }
                 } in
                 case x of wild {
                   GrammarData.ObjFinal -> $j 0# GrammarData.ObjInitial -> $j 1# }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cfromEnum ::
    GrammarData.ObjectFinal -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObjectFinal) ->
                 case a of wild {
                   GrammarData.ObjFinal -> GHC.Types.I# 0#
                   GrammarData.ObjInitial -> GHC.Types.I# 1# }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$cpred ::
    GrammarData.ObjectFinal -> GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObjectFinal) ->
                 case a of wild {
                   GrammarData.ObjFinal -> GrammarData.$fEnumObjectFinal4
                   GrammarData.ObjInitial -> GrammarData.ObjFinal }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$csucc ::
    GrammarData.ObjectFinal -> GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObjectFinal) ->
                 case a of wild {
                   GrammarData.ObjFinal -> GrammarData.ObjInitial
                   GrammarData.ObjInitial -> GrammarData.$fEnumObjectFinal5 }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_$ctoEnum ::
    GHC.Types.Int -> GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum6 ww1 }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_c ::
    GHC.Types.Int
    -> [GrammarData.ObjectFinal] -> [GrammarData.ObjectFinal]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ObjectFinal]) ->
                 GHC.Types.:
                   @ GrammarData.ObjectFinal
                   (GrammarData.$fEnumObjectFinal_$ctoEnum x)
                   ys) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_c1 ::
    GHC.Types.Int
    -> [GrammarData.ObjectFinal] -> [GrammarData.ObjectFinal]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ObjectFinal]) ->
                 GHC.Types.:
                   @ GrammarData.ObjectFinal
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.ObjectFinal a })
                   ys) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_go :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
  {- Arity: 1, Strictness: <L,U> -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_go1 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
  {- Arity: 1, Strictness: <L,U> -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_go2 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEnumObjectFinal_go3 :: GHC.Prim.Int# -> [GrammarData.ObjectFinal]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic :: GHC.Enum.Enum GrammarData.ObligatoryTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObligatoryTopic
                  GrammarData.$fEnumObligatoryTopic_$csucc
                  GrammarData.$fEnumObligatoryTopic_$cpred
                  GrammarData.$fEnumObligatoryTopic_$ctoEnum
                  GrammarData.$fEnumObligatoryTopic_$cfromEnum
                  GrammarData.$fEnumObligatoryTopic_$cenumFrom
                  GrammarData.$fEnumObligatoryTopic_$cenumFromThen
                  GrammarData.$fEnumObligatoryTopic_$cenumFromTo
                  GrammarData.$fEnumObligatoryTopic_$cenumFromThenTo -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic1 ::
    GHC.Prim.Int# -> GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <L,U>x -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic2 :: [GrammarData.ObligatoryTopic]
  {- Unfolding: (GrammarData.$fEnumObligatoryTopic_go2 1#) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic3 :: [GrammarData.ObligatoryTopic]
  {- Unfolding: (GrammarData.$fEnumObligatoryTopic_go3 0#) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic4 :: GrammarData.ObligatoryTopic
  {- Strictness: x -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic5 :: GrammarData.ObligatoryTopic
  {- Strictness: x -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cenumFrom ::
    GrammarData.ObligatoryTopic -> [GrammarData.ObligatoryTopic]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.ObligatoryTopic) ->
                 case a of wild {
                   GrammarData.OblTopic -> GrammarData.$fEnumObligatoryTopic3
                   GrammarData.OptTopic -> GrammarData.$fEnumObligatoryTopic2 }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cenumFromThen ::
    GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic -> [GrammarData.ObligatoryTopic]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.ObligatoryTopic)
                   (b :: GrammarData.ObligatoryTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.ObligatoryTopic]
                                    GrammarData.$fEnumObligatoryTopic_c1
                                    (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.ObligatoryTopic]
                                    GrammarData.$fEnumObligatoryTopic_c1
                                    (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.OblTopic -> $j1 0# GrammarData.OptTopic -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.OblTopic -> $j 0# GrammarData.OptTopic -> $j 1# }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cenumFromThenTo ::
    GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic
    -> [GrammarData.ObligatoryTopic]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.ObligatoryTopic)
                   (x2 :: GrammarData.ObligatoryTopic)
                   (y :: GrammarData.ObligatoryTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.OblTopic
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ObligatoryTopic]
                                     GrammarData.$fEnumObligatoryTopic_c
                                     (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ObligatoryTopic]
                                     GrammarData.$fEnumObligatoryTopic_c
                                     (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OptTopic
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.ObligatoryTopic]
                                     GrammarData.$fEnumObligatoryTopic_c
                                     (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.ObligatoryTopic]
                                     GrammarData.$fEnumObligatoryTopic_c
                                     (GHC.Types.[] @ GrammarData.ObligatoryTopic)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.OblTopic -> $j1 0# GrammarData.OptTopic -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.OblTopic -> $j 0# GrammarData.OptTopic -> $j 1# }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cenumFromTo ::
    GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic -> [GrammarData.ObligatoryTopic]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.ObligatoryTopic)
                   (y :: GrammarData.ObligatoryTopic) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.OblTopic
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumObligatoryTopic_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ObligatoryTopic }
                       GrammarData.OptTopic
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumObligatoryTopic_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.ObligatoryTopic } }
                 } in
                 case x of wild {
                   GrammarData.OblTopic -> $j 0# GrammarData.OptTopic -> $j 1# }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cfromEnum ::
    GrammarData.ObligatoryTopic -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObligatoryTopic) ->
                 case a of wild {
                   GrammarData.OblTopic -> GHC.Types.I# 0#
                   GrammarData.OptTopic -> GHC.Types.I# 1# }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$cpred ::
    GrammarData.ObligatoryTopic -> GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObligatoryTopic) ->
                 case a of wild {
                   GrammarData.OblTopic -> GrammarData.$fEnumObligatoryTopic4
                   GrammarData.OptTopic -> GrammarData.OblTopic }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$csucc ::
    GrammarData.ObligatoryTopic -> GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.ObligatoryTopic) ->
                 case a of wild {
                   GrammarData.OblTopic -> GrammarData.OptTopic
                   GrammarData.OptTopic -> GrammarData.$fEnumObligatoryTopic5 }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_$ctoEnum ::
    GHC.Types.Int -> GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum7 ww1 }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_c ::
    GHC.Types.Int
    -> [GrammarData.ObligatoryTopic] -> [GrammarData.ObligatoryTopic]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ObligatoryTopic]) ->
                 GHC.Types.:
                   @ GrammarData.ObligatoryTopic
                   (GrammarData.$fEnumObligatoryTopic_$ctoEnum x)
                   ys) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_c1 ::
    GHC.Types.Int
    -> [GrammarData.ObligatoryTopic] -> [GrammarData.ObligatoryTopic]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.ObligatoryTopic]) ->
                 GHC.Types.:
                   @ GrammarData.ObligatoryTopic
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.ObligatoryTopic a })
                   ys) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_go ::
    GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
  {- Arity: 1, Strictness: <L,U> -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_go1 ::
    GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
  {- Arity: 1, Strictness: <L,U> -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_go2 ::
    GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEnumObligatoryTopic_go3 ::
    GHC.Prim.Int# -> [GrammarData.ObligatoryTopic]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping :: GHC.Enum.Enum GrammarData.PiedPiping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.PiedPiping
                  GrammarData.$fEnumPiedPiping_$csucc
                  GrammarData.$fEnumPiedPiping_$cpred
                  GrammarData.$fEnumPiedPiping_$ctoEnum
                  GrammarData.$fEnumPiedPiping_$cfromEnum
                  GrammarData.$fEnumPiedPiping_$cenumFrom
                  GrammarData.$fEnumPiedPiping_$cenumFromThen
                  GrammarData.$fEnumPiedPiping_$cenumFromTo
                  GrammarData.$fEnumPiedPiping_$cenumFromThenTo -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping1 :: GHC.Prim.Int# -> GrammarData.PiedPiping
  {- Arity: 1, Strictness: <L,U>x -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping2 :: [GrammarData.PiedPiping]
  {- Unfolding: (GrammarData.$fEnumPiedPiping_go2 1#) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping3 :: [GrammarData.PiedPiping]
  {- Unfolding: (GrammarData.$fEnumPiedPiping_go3 0#) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping4 :: GrammarData.PiedPiping
  {- Strictness: x -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping5 :: GrammarData.PiedPiping
  {- Strictness: x -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cenumFrom ::
    GrammarData.PiedPiping -> [GrammarData.PiedPiping]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.PiedPiping) ->
                 case a of wild {
                   GrammarData.PiedPipe -> GrammarData.$fEnumPiedPiping3
                   GrammarData.PrepStrand -> GrammarData.$fEnumPiedPiping2 }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cenumFromThen ::
    GrammarData.PiedPiping
    -> GrammarData.PiedPiping -> [GrammarData.PiedPiping]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.PiedPiping)
                   (b :: GrammarData.PiedPiping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.PiedPiping]
                                    GrammarData.$fEnumPiedPiping_c1
                                    (GHC.Types.[] @ GrammarData.PiedPiping)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.PiedPiping]
                                    GrammarData.$fEnumPiedPiping_c1
                                    (GHC.Types.[] @ GrammarData.PiedPiping)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.PiedPipe -> $j1 0# GrammarData.PrepStrand -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.PiedPipe -> $j 0# GrammarData.PrepStrand -> $j 1# }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cenumFromThenTo ::
    GrammarData.PiedPiping
    -> GrammarData.PiedPiping
    -> GrammarData.PiedPiping
    -> [GrammarData.PiedPiping]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.PiedPiping)
                   (x2 :: GrammarData.PiedPiping)
                   (y :: GrammarData.PiedPiping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.PiedPipe
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.PiedPiping]
                                     GrammarData.$fEnumPiedPiping_c
                                     (GHC.Types.[] @ GrammarData.PiedPiping)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.PiedPiping]
                                     GrammarData.$fEnumPiedPiping_c
                                     (GHC.Types.[] @ GrammarData.PiedPiping)
                                     x4
                                     x5
                                     0# }
                           GrammarData.PrepStrand
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.PiedPiping]
                                     GrammarData.$fEnumPiedPiping_c
                                     (GHC.Types.[] @ GrammarData.PiedPiping)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.PiedPiping]
                                     GrammarData.$fEnumPiedPiping_c
                                     (GHC.Types.[] @ GrammarData.PiedPiping)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.PiedPipe -> $j1 0# GrammarData.PrepStrand -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.PiedPipe -> $j 0# GrammarData.PrepStrand -> $j 1# }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cenumFromTo ::
    GrammarData.PiedPiping
    -> GrammarData.PiedPiping -> [GrammarData.PiedPiping]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.PiedPiping)
                   (y :: GrammarData.PiedPiping) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.PiedPipe
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumPiedPiping_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.PiedPiping }
                       GrammarData.PrepStrand
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumPiedPiping_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.PiedPiping } }
                 } in
                 case x of wild {
                   GrammarData.PiedPipe -> $j 0# GrammarData.PrepStrand -> $j 1# }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cfromEnum ::
    GrammarData.PiedPiping -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.PiedPiping) ->
                 case a of wild {
                   GrammarData.PiedPipe -> GHC.Types.I# 0#
                   GrammarData.PrepStrand -> GHC.Types.I# 1# }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$cpred ::
    GrammarData.PiedPiping -> GrammarData.PiedPiping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.PiedPiping) ->
                 case a of wild {
                   GrammarData.PiedPipe -> GrammarData.$fEnumPiedPiping4
                   GrammarData.PrepStrand -> GrammarData.PiedPipe }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$csucc ::
    GrammarData.PiedPiping -> GrammarData.PiedPiping
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.PiedPiping) ->
                 case a of wild {
                   GrammarData.PiedPipe -> GrammarData.PrepStrand
                   GrammarData.PrepStrand -> GrammarData.$fEnumPiedPiping5 }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_$ctoEnum ::
    GHC.Types.Int -> GrammarData.PiedPiping
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum8 ww1 }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_c ::
    GHC.Types.Int
    -> [GrammarData.PiedPiping] -> [GrammarData.PiedPiping]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.PiedPiping]) ->
                 GHC.Types.:
                   @ GrammarData.PiedPiping
                   (GrammarData.$fEnumPiedPiping_$ctoEnum x)
                   ys) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_c1 ::
    GHC.Types.Int
    -> [GrammarData.PiedPiping] -> [GrammarData.PiedPiping]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.PiedPiping]) ->
                 GHC.Types.:
                   @ GrammarData.PiedPiping
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.PiedPiping a })
                   ys) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_go :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
  {- Arity: 1, Strictness: <L,U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_go1 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
  {- Arity: 1, Strictness: <L,U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_go2 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fEnumPiedPiping_go3 :: GHC.Prim.Int# -> [GrammarData.PiedPiping]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion ::
    GHC.Enum.Enum GrammarData.QuestionInversion
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.QuestionInversion
                  GrammarData.$fEnumQuestionInversion_$csucc
                  GrammarData.$fEnumQuestionInversion_$cpred
                  GrammarData.$fEnumQuestionInversion_$ctoEnum
                  GrammarData.$fEnumQuestionInversion_$cfromEnum
                  GrammarData.$fEnumQuestionInversion_$cenumFrom
                  GrammarData.$fEnumQuestionInversion_$cenumFromThen
                  GrammarData.$fEnumQuestionInversion_$cenumFromTo
                  GrammarData.$fEnumQuestionInversion_$cenumFromThenTo -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion1 ::
    GHC.Prim.Int# -> GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <L,U>x -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion2 :: [GrammarData.QuestionInversion]
  {- Unfolding: (GrammarData.$fEnumQuestionInversion_go2 1#) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion3 :: [GrammarData.QuestionInversion]
  {- Unfolding: (GrammarData.$fEnumQuestionInversion_go3 0#) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion4 :: GrammarData.QuestionInversion
  {- Strictness: x -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion5 :: GrammarData.QuestionInversion
  {- Strictness: x -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cenumFrom ::
    GrammarData.QuestionInversion -> [GrammarData.QuestionInversion]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.QuestionInversion) ->
                 case a of wild {
                   GrammarData.NoQuesInv -> GrammarData.$fEnumQuestionInversion3
                   GrammarData.OblQuesInv
                   -> GrammarData.$fEnumQuestionInversion2 }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cenumFromThen ::
    GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion -> [GrammarData.QuestionInversion]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.QuestionInversion)
                   (b :: GrammarData.QuestionInversion) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.QuestionInversion]
                                    GrammarData.$fEnumQuestionInversion_c1
                                    (GHC.Types.[] @ GrammarData.QuestionInversion)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.QuestionInversion]
                                    GrammarData.$fEnumQuestionInversion_c1
                                    (GHC.Types.[] @ GrammarData.QuestionInversion)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoQuesInv -> $j1 0# GrammarData.OblQuesInv -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoQuesInv -> $j 0#
                   GrammarData.OblQuesInv -> $j 1# }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cenumFromThenTo ::
    GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion
    -> [GrammarData.QuestionInversion]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.QuestionInversion)
                   (x2 :: GrammarData.QuestionInversion)
                   (y :: GrammarData.QuestionInversion) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoQuesInv
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.QuestionInversion]
                                     GrammarData.$fEnumQuestionInversion_c
                                     (GHC.Types.[] @ GrammarData.QuestionInversion)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.QuestionInversion]
                                     GrammarData.$fEnumQuestionInversion_c
                                     (GHC.Types.[] @ GrammarData.QuestionInversion)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblQuesInv
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.QuestionInversion]
                                     GrammarData.$fEnumQuestionInversion_c
                                     (GHC.Types.[] @ GrammarData.QuestionInversion)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.QuestionInversion]
                                     GrammarData.$fEnumQuestionInversion_c
                                     (GHC.Types.[] @ GrammarData.QuestionInversion)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoQuesInv -> $j1 0# GrammarData.OblQuesInv -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoQuesInv -> $j 0#
                   GrammarData.OblQuesInv -> $j 1# }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cenumFromTo ::
    GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion -> [GrammarData.QuestionInversion]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.QuestionInversion)
                   (y :: GrammarData.QuestionInversion) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.QuestionInversion]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoQuesInv
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumQuestionInversion_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.QuestionInversion }
                       GrammarData.OblQuesInv
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumQuestionInversion_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.QuestionInversion } }
                 } in
                 case x of wild {
                   GrammarData.NoQuesInv -> $j 0#
                   GrammarData.OblQuesInv -> $j 1# }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cfromEnum ::
    GrammarData.QuestionInversion -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.QuestionInversion) ->
                 case a of wild {
                   GrammarData.NoQuesInv -> GHC.Types.I# 0#
                   GrammarData.OblQuesInv -> GHC.Types.I# 1# }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$cpred ::
    GrammarData.QuestionInversion -> GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.QuestionInversion) ->
                 case a of wild {
                   GrammarData.NoQuesInv -> GrammarData.$fEnumQuestionInversion4
                   GrammarData.OblQuesInv -> GrammarData.NoQuesInv }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$csucc ::
    GrammarData.QuestionInversion -> GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.QuestionInversion) ->
                 case a of wild {
                   GrammarData.NoQuesInv -> GrammarData.OblQuesInv
                   GrammarData.OblQuesInv
                   -> GrammarData.$fEnumQuestionInversion5 }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_$ctoEnum ::
    GHC.Types.Int -> GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum9 ww1 }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_c ::
    GHC.Types.Int
    -> [GrammarData.QuestionInversion]
    -> [GrammarData.QuestionInversion]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.QuestionInversion]) ->
                 GHC.Types.:
                   @ GrammarData.QuestionInversion
                   (GrammarData.$fEnumQuestionInversion_$ctoEnum x)
                   ys) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_c1 ::
    GHC.Types.Int
    -> [GrammarData.QuestionInversion]
    -> [GrammarData.QuestionInversion]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.QuestionInversion]) ->
                 GHC.Types.:
                   @ GrammarData.QuestionInversion
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.QuestionInversion a })
                   ys) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_go ::
    GHC.Prim.Int# -> [GrammarData.QuestionInversion]
  {- Arity: 1, Strictness: <L,U> -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_go1 ::
    GHC.Prim.Int# -> [GrammarData.QuestionInversion]
  {- Arity: 1, Strictness: <L,U> -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_go2 ::
    GHC.Prim.Int# -> [GrammarData.QuestionInversion]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEnumQuestionInversion_go3 ::
    GHC.Prim.Int# -> [GrammarData.QuestionInversion]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial :: GHC.Enum.Enum GrammarData.SubjectInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.SubjectInitial
                  GrammarData.$fEnumSubjectInitial_$csucc
                  GrammarData.$fEnumSubjectInitial_$cpred
                  GrammarData.$fEnumSubjectInitial_$ctoEnum
                  GrammarData.$fEnumSubjectInitial_$cfromEnum
                  GrammarData.$fEnumSubjectInitial_$cenumFrom
                  GrammarData.$fEnumSubjectInitial_$cenumFromThen
                  GrammarData.$fEnumSubjectInitial_$cenumFromTo
                  GrammarData.$fEnumSubjectInitial_$cenumFromThenTo -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial1 ::
    GHC.Prim.Int# -> GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <L,U>x -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial2 :: [GrammarData.SubjectInitial]
  {- Unfolding: (GrammarData.$fEnumSubjectInitial_go2 1#) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial3 :: [GrammarData.SubjectInitial]
  {- Unfolding: (GrammarData.$fEnumSubjectInitial_go3 0#) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial4 :: GrammarData.SubjectInitial
  {- Strictness: x -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial5 :: GrammarData.SubjectInitial
  {- Strictness: x -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cenumFrom ::
    GrammarData.SubjectInitial -> [GrammarData.SubjectInitial]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.SubjectInitial) ->
                 case a of wild {
                   GrammarData.SubInitial -> GrammarData.$fEnumSubjectInitial3
                   GrammarData.SubFinal -> GrammarData.$fEnumSubjectInitial2 }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cenumFromThen ::
    GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial -> [GrammarData.SubjectInitial]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.SubjectInitial)
                   (b :: GrammarData.SubjectInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.SubjectInitial]
                                    GrammarData.$fEnumSubjectInitial_c1
                                    (GHC.Types.[] @ GrammarData.SubjectInitial)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.SubjectInitial]
                                    GrammarData.$fEnumSubjectInitial_c1
                                    (GHC.Types.[] @ GrammarData.SubjectInitial)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.SubInitial -> $j1 0# GrammarData.SubFinal -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.SubInitial -> $j 0# GrammarData.SubFinal -> $j 1# }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cenumFromThenTo ::
    GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial
    -> [GrammarData.SubjectInitial]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.SubjectInitial)
                   (x2 :: GrammarData.SubjectInitial)
                   (y :: GrammarData.SubjectInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.SubInitial
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.SubjectInitial]
                                     GrammarData.$fEnumSubjectInitial_c
                                     (GHC.Types.[] @ GrammarData.SubjectInitial)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.SubjectInitial]
                                     GrammarData.$fEnumSubjectInitial_c
                                     (GHC.Types.[] @ GrammarData.SubjectInitial)
                                     x4
                                     x5
                                     0# }
                           GrammarData.SubFinal
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.SubjectInitial]
                                     GrammarData.$fEnumSubjectInitial_c
                                     (GHC.Types.[] @ GrammarData.SubjectInitial)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.SubjectInitial]
                                     GrammarData.$fEnumSubjectInitial_c
                                     (GHC.Types.[] @ GrammarData.SubjectInitial)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.SubInitial -> $j1 0# GrammarData.SubFinal -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.SubInitial -> $j 0# GrammarData.SubFinal -> $j 1# }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cenumFromTo ::
    GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial -> [GrammarData.SubjectInitial]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.SubjectInitial)
                   (y :: GrammarData.SubjectInitial) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.SubjectInitial]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.SubInitial
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumSubjectInitial_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.SubjectInitial }
                       GrammarData.SubFinal
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumSubjectInitial_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.SubjectInitial } }
                 } in
                 case x of wild {
                   GrammarData.SubInitial -> $j 0# GrammarData.SubFinal -> $j 1# }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cfromEnum ::
    GrammarData.SubjectInitial -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.SubjectInitial) ->
                 case a of wild {
                   GrammarData.SubInitial -> GHC.Types.I# 0#
                   GrammarData.SubFinal -> GHC.Types.I# 1# }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$cpred ::
    GrammarData.SubjectInitial -> GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.SubjectInitial) ->
                 case a of wild {
                   GrammarData.SubInitial -> GrammarData.$fEnumSubjectInitial4
                   GrammarData.SubFinal -> GrammarData.SubInitial }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$csucc ::
    GrammarData.SubjectInitial -> GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.SubjectInitial) ->
                 case a of wild {
                   GrammarData.SubInitial -> GrammarData.SubFinal
                   GrammarData.SubFinal -> GrammarData.$fEnumSubjectInitial5 }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_$ctoEnum ::
    GHC.Types.Int -> GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum10 ww1 }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_c ::
    GHC.Types.Int
    -> [GrammarData.SubjectInitial] -> [GrammarData.SubjectInitial]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.SubjectInitial]) ->
                 GHC.Types.:
                   @ GrammarData.SubjectInitial
                   (GrammarData.$fEnumSubjectInitial_$ctoEnum x)
                   ys) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_c1 ::
    GHC.Types.Int
    -> [GrammarData.SubjectInitial] -> [GrammarData.SubjectInitial]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.SubjectInitial]) ->
                 GHC.Types.:
                   @ GrammarData.SubjectInitial
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.SubjectInitial a })
                   ys) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_go ::
    GHC.Prim.Int# -> [GrammarData.SubjectInitial]
  {- Arity: 1, Strictness: <L,U> -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_go1 ::
    GHC.Prim.Int# -> [GrammarData.SubjectInitial]
  {- Arity: 1, Strictness: <L,U> -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_go2 ::
    GHC.Prim.Int# -> [GrammarData.SubjectInitial]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEnumSubjectInitial_go3 ::
    GHC.Prim.Int# -> [GrammarData.SubjectInitial]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking :: GHC.Enum.Enum GrammarData.TopicMarking
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.TopicMarking
                  GrammarData.$fEnumTopicMarking_$csucc
                  GrammarData.$fEnumTopicMarking_$cpred
                  GrammarData.$fEnumTopicMarking_$ctoEnum
                  GrammarData.$fEnumTopicMarking_$cfromEnum
                  GrammarData.$fEnumTopicMarking_$cenumFrom
                  GrammarData.$fEnumTopicMarking_$cenumFromThen
                  GrammarData.$fEnumTopicMarking_$cenumFromTo
                  GrammarData.$fEnumTopicMarking_$cenumFromThenTo -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking1 :: GHC.Prim.Int# -> GrammarData.TopicMarking
  {- Arity: 1, Strictness: <L,U>x -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking2 :: [GrammarData.TopicMarking]
  {- Unfolding: (GrammarData.$fEnumTopicMarking_go2 1#) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking3 :: [GrammarData.TopicMarking]
  {- Unfolding: (GrammarData.$fEnumTopicMarking_go3 0#) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking4 :: GrammarData.TopicMarking
  {- Strictness: x -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking5 :: GrammarData.TopicMarking
  {- Strictness: x -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cenumFrom ::
    GrammarData.TopicMarking -> [GrammarData.TopicMarking]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.TopicMarking) ->
                 case a of wild {
                   GrammarData.NoTopMark -> GrammarData.$fEnumTopicMarking3
                   GrammarData.OblTopMark -> GrammarData.$fEnumTopicMarking2 }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cenumFromThen ::
    GrammarData.TopicMarking
    -> GrammarData.TopicMarking -> [GrammarData.TopicMarking]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.TopicMarking)
                   (b :: GrammarData.TopicMarking) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.TopicMarking]
                                    GrammarData.$fEnumTopicMarking_c1
                                    (GHC.Types.[] @ GrammarData.TopicMarking)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.TopicMarking]
                                    GrammarData.$fEnumTopicMarking_c1
                                    (GHC.Types.[] @ GrammarData.TopicMarking)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoTopMark -> $j1 0# GrammarData.OblTopMark -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoTopMark -> $j 0#
                   GrammarData.OblTopMark -> $j 1# }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cenumFromThenTo ::
    GrammarData.TopicMarking
    -> GrammarData.TopicMarking
    -> GrammarData.TopicMarking
    -> [GrammarData.TopicMarking]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.TopicMarking)
                   (x2 :: GrammarData.TopicMarking)
                   (y :: GrammarData.TopicMarking) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoTopMark
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.TopicMarking]
                                     GrammarData.$fEnumTopicMarking_c
                                     (GHC.Types.[] @ GrammarData.TopicMarking)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.TopicMarking]
                                     GrammarData.$fEnumTopicMarking_c
                                     (GHC.Types.[] @ GrammarData.TopicMarking)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblTopMark
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.TopicMarking]
                                     GrammarData.$fEnumTopicMarking_c
                                     (GHC.Types.[] @ GrammarData.TopicMarking)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.TopicMarking]
                                     GrammarData.$fEnumTopicMarking_c
                                     (GHC.Types.[] @ GrammarData.TopicMarking)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoTopMark -> $j1 0# GrammarData.OblTopMark -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoTopMark -> $j 0#
                   GrammarData.OblTopMark -> $j 1# }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cenumFromTo ::
    GrammarData.TopicMarking
    -> GrammarData.TopicMarking -> [GrammarData.TopicMarking]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.TopicMarking)
                   (y :: GrammarData.TopicMarking) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.TopicMarking]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoTopMark
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumTopicMarking_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.TopicMarking }
                       GrammarData.OblTopMark
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumTopicMarking_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.TopicMarking } }
                 } in
                 case x of wild {
                   GrammarData.NoTopMark -> $j 0#
                   GrammarData.OblTopMark -> $j 1# }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cfromEnum ::
    GrammarData.TopicMarking -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.TopicMarking) ->
                 case a of wild {
                   GrammarData.NoTopMark -> GHC.Types.I# 0#
                   GrammarData.OblTopMark -> GHC.Types.I# 1# }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$cpred ::
    GrammarData.TopicMarking -> GrammarData.TopicMarking
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.TopicMarking) ->
                 case a of wild {
                   GrammarData.NoTopMark -> GrammarData.$fEnumTopicMarking4
                   GrammarData.OblTopMark -> GrammarData.NoTopMark }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$csucc ::
    GrammarData.TopicMarking -> GrammarData.TopicMarking
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.TopicMarking) ->
                 case a of wild {
                   GrammarData.NoTopMark -> GrammarData.OblTopMark
                   GrammarData.OblTopMark -> GrammarData.$fEnumTopicMarking5 }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_$ctoEnum ::
    GHC.Types.Int -> GrammarData.TopicMarking
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum11 ww1 }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_c ::
    GHC.Types.Int
    -> [GrammarData.TopicMarking] -> [GrammarData.TopicMarking]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.TopicMarking]) ->
                 GHC.Types.:
                   @ GrammarData.TopicMarking
                   (GrammarData.$fEnumTopicMarking_$ctoEnum x)
                   ys) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_c1 ::
    GHC.Types.Int
    -> [GrammarData.TopicMarking] -> [GrammarData.TopicMarking]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.TopicMarking]) ->
                 GHC.Types.:
                   @ GrammarData.TopicMarking
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.TopicMarking a })
                   ys) -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_go ::
    GHC.Prim.Int# -> [GrammarData.TopicMarking]
  {- Arity: 1, Strictness: <L,U> -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_go1 ::
    GHC.Prim.Int# -> [GrammarData.TopicMarking]
  {- Arity: 1, Strictness: <L,U> -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_go2 ::
    GHC.Prim.Int# -> [GrammarData.TopicMarking]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
086be7089aedc4e5b861d78292d86bfc
  $fEnumTopicMarking_go3 ::
    GHC.Prim.Int# -> [GrammarData.TopicMarking]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement :: GHC.Enum.Enum GrammarData.VtoIMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.VtoIMovement
                  GrammarData.$fEnumVtoIMovement_$csucc
                  GrammarData.$fEnumVtoIMovement_$cpred
                  GrammarData.$fEnumVtoIMovement_$ctoEnum
                  GrammarData.$fEnumVtoIMovement_$cfromEnum
                  GrammarData.$fEnumVtoIMovement_$cenumFrom
                  GrammarData.$fEnumVtoIMovement_$cenumFromThen
                  GrammarData.$fEnumVtoIMovement_$cenumFromTo
                  GrammarData.$fEnumVtoIMovement_$cenumFromThenTo -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement1 :: GHC.Prim.Int# -> GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <L,U>x -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement2 :: [GrammarData.VtoIMovement]
  {- Unfolding: (GrammarData.$fEnumVtoIMovement_go2 1#) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement3 :: [GrammarData.VtoIMovement]
  {- Unfolding: (GrammarData.$fEnumVtoIMovement_go3 0#) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement4 :: GrammarData.VtoIMovement
  {- Strictness: x -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement5 :: GrammarData.VtoIMovement
  {- Strictness: x -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cenumFrom ::
    GrammarData.VtoIMovement -> [GrammarData.VtoIMovement]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.VtoIMovement) ->
                 case a of wild {
                   GrammarData.NoVtoIMove -> GrammarData.$fEnumVtoIMovement3
                   GrammarData.OblVtoIMove -> GrammarData.$fEnumVtoIMovement2 }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cenumFromThen ::
    GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement -> [GrammarData.VtoIMovement]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.VtoIMovement)
                   (b :: GrammarData.VtoIMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.VtoIMovement]
                                    GrammarData.$fEnumVtoIMovement_c1
                                    (GHC.Types.[] @ GrammarData.VtoIMovement)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.VtoIMovement]
                                    GrammarData.$fEnumVtoIMovement_c1
                                    (GHC.Types.[] @ GrammarData.VtoIMovement)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoVtoIMove -> $j1 0#
                       GrammarData.OblVtoIMove -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoVtoIMove -> $j 0#
                   GrammarData.OblVtoIMove -> $j 1# }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cenumFromThenTo ::
    GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement
    -> [GrammarData.VtoIMovement]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.VtoIMovement)
                   (x2 :: GrammarData.VtoIMovement)
                   (y :: GrammarData.VtoIMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoVtoIMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.VtoIMovement]
                                     GrammarData.$fEnumVtoIMovement_c
                                     (GHC.Types.[] @ GrammarData.VtoIMovement)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.VtoIMovement]
                                     GrammarData.$fEnumVtoIMovement_c
                                     (GHC.Types.[] @ GrammarData.VtoIMovement)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblVtoIMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.VtoIMovement]
                                     GrammarData.$fEnumVtoIMovement_c
                                     (GHC.Types.[] @ GrammarData.VtoIMovement)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.VtoIMovement]
                                     GrammarData.$fEnumVtoIMovement_c
                                     (GHC.Types.[] @ GrammarData.VtoIMovement)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoVtoIMove -> $j1 0#
                       GrammarData.OblVtoIMove -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoVtoIMove -> $j 0#
                   GrammarData.OblVtoIMove -> $j 1# }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cenumFromTo ::
    GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement -> [GrammarData.VtoIMovement]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.VtoIMovement)
                   (y :: GrammarData.VtoIMovement) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.VtoIMovement]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoVtoIMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumVtoIMovement_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.VtoIMovement }
                       GrammarData.OblVtoIMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumVtoIMovement_go x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.VtoIMovement } }
                 } in
                 case x of wild {
                   GrammarData.NoVtoIMove -> $j 0#
                   GrammarData.OblVtoIMove -> $j 1# }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cfromEnum ::
    GrammarData.VtoIMovement -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.VtoIMovement) ->
                 case a of wild {
                   GrammarData.NoVtoIMove -> GHC.Types.I# 0#
                   GrammarData.OblVtoIMove -> GHC.Types.I# 1# }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$cpred ::
    GrammarData.VtoIMovement -> GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.VtoIMovement) ->
                 case a of wild {
                   GrammarData.NoVtoIMove -> GrammarData.$fEnumVtoIMovement4
                   GrammarData.OblVtoIMove -> GrammarData.NoVtoIMove }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$csucc ::
    GrammarData.VtoIMovement -> GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.VtoIMovement) ->
                 case a of wild {
                   GrammarData.NoVtoIMove -> GrammarData.OblVtoIMove
                   GrammarData.OblVtoIMove -> GrammarData.$fEnumVtoIMovement5 }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_$ctoEnum ::
    GHC.Types.Int -> GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum12 ww1 }) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_c ::
    GHC.Types.Int
    -> [GrammarData.VtoIMovement] -> [GrammarData.VtoIMovement]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.VtoIMovement]) ->
                 GHC.Types.:
                   @ GrammarData.VtoIMovement
                   (GrammarData.$fEnumVtoIMovement_$ctoEnum x)
                   ys) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_c1 ::
    GHC.Types.Int
    -> [GrammarData.VtoIMovement] -> [GrammarData.VtoIMovement]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (ys :: [GrammarData.VtoIMovement]) ->
                 GHC.Types.:
                   @ GrammarData.VtoIMovement
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.VtoIMovement a })
                   ys) -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_go ::
    GHC.Prim.Int# -> [GrammarData.VtoIMovement]
  {- Arity: 1, Strictness: <L,U> -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_go1 ::
    GHC.Prim.Int# -> [GrammarData.VtoIMovement]
  {- Arity: 1, Strictness: <L,U> -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_go2 ::
    GHC.Prim.Int# -> [GrammarData.VtoIMovement]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
b89383b8c859aafdd38937312f593ec7
  $fEnumVtoIMovement_go3 ::
    GHC.Prim.Int# -> [GrammarData.VtoIMovement]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory ::
    GHC.Enum.Enum GrammarData.WHMovementObligatory
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.WHMovementObligatory
                  GrammarData.$fEnumWHMovementObligatory_$csucc
                  GrammarData.$fEnumWHMovementObligatory_$cpred
                  GrammarData.$fEnumWHMovementObligatory_$ctoEnum
                  GrammarData.$fEnumWHMovementObligatory_$cfromEnum
                  GrammarData.$fEnumWHMovementObligatory_$cenumFrom
                  GrammarData.$fEnumWHMovementObligatory_$cenumFromThen
                  GrammarData.$fEnumWHMovementObligatory_$cenumFromTo
                  GrammarData.$fEnumWHMovementObligatory_$cenumFromThenTo -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory1 ::
    GHC.Prim.Int# -> GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <L,U>x -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory2 :: [GrammarData.WHMovementObligatory]
  {- Unfolding: (GrammarData.$fEnumWHMovementObligatory_go2 1#) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory3 :: [GrammarData.WHMovementObligatory]
  {- Unfolding: (GrammarData.$fEnumWHMovementObligatory_go3 0#) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory4 :: GrammarData.WHMovementObligatory
  {- Strictness: x -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory5 :: GrammarData.WHMovementObligatory
  {- Strictness: x -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cenumFrom ::
    GrammarData.WHMovementObligatory
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (a :: GrammarData.WHMovementObligatory) ->
                 case a of wild {
                   GrammarData.NoWHMove -> GrammarData.$fEnumWHMovementObligatory3
                   GrammarData.OblWHMove
                   -> GrammarData.$fEnumWHMovementObligatory2 }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cenumFromThen ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.WHMovementObligatory)
                   (b :: GrammarData.WHMovementObligatory) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (a# :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (b# :: GHC.Prim.Int#)[OneShot] ->
                         let {
                           $j2 :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                             {- Arity: 1, Strictness: <S,U> -}
                           = \ (y :: GHC.Prim.Int#)[OneShot] ->
                             case GHC.Prim.tagToEnum#
                                    @ GHC.Types.Bool
                                    (GHC.Prim.>=# b# a#) of wild {
                               GHC.Types.False
                               -> GHC.Enum.efdtIntDnFB
                                    @ [GrammarData.WHMovementObligatory]
                                    GrammarData.$fEnumWHMovementObligatory_c1
                                    (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                    a#
                                    b#
                                    y
                               GHC.Types.True
                               -> GHC.Enum.efdtIntUpFB
                                    @ [GrammarData.WHMovementObligatory]
                                    GrammarData.$fEnumWHMovementObligatory_c1
                                    (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                    a#
                                    b#
                                    y }
                         } in
                         case GHC.Prim.tagToEnum#
                                @ GHC.Types.Bool
                                (GHC.Prim.># a# b#) of wild {
                           GHC.Types.False -> $j2 1# GHC.Types.True -> $j2 0# }
                     } in
                     case b of wild {
                       GrammarData.NoWHMove -> $j1 0# GrammarData.OblWHMove -> $j1 1# }
                 } in
                 case a of wild {
                   GrammarData.NoWHMove -> $j 0# GrammarData.OblWHMove -> $j 1# }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cenumFromThenTo ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 3, Strictness: <S,1*U><S,1*U><S,1*U>,
     Unfolding: (\ (x1 :: GrammarData.WHMovementObligatory)
                   (x2 :: GrammarData.WHMovementObligatory)
                   (y :: GrammarData.WHMovementObligatory) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x4 :: GHC.Prim.Int#)[OneShot] ->
                     let {
                       $j1 :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                         {- Arity: 1, Strictness: <S,U> -}
                       = \ (x5 :: GHC.Prim.Int#)[OneShot] ->
                         case y of wild {
                           GrammarData.NoWHMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.WHMovementObligatory]
                                     GrammarData.$fEnumWHMovementObligatory_c
                                     (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                     x4
                                     x5
                                     0#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.WHMovementObligatory]
                                     GrammarData.$fEnumWHMovementObligatory_c
                                     (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                     x4
                                     x5
                                     0# }
                           GrammarData.OblWHMove
                           -> case GHC.Prim.tagToEnum#
                                     @ GHC.Types.Bool
                                     (GHC.Prim.>=# x5 x4) of wild1 {
                                GHC.Types.False
                                -> GHC.Enum.efdtIntDnFB
                                     @ [GrammarData.WHMovementObligatory]
                                     GrammarData.$fEnumWHMovementObligatory_c
                                     (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                     x4
                                     x5
                                     1#
                                GHC.Types.True
                                -> GHC.Enum.efdtIntUpFB
                                     @ [GrammarData.WHMovementObligatory]
                                     GrammarData.$fEnumWHMovementObligatory_c
                                     (GHC.Types.[] @ GrammarData.WHMovementObligatory)
                                     x4
                                     x5
                                     1# } }
                     } in
                     case x2 of wild {
                       GrammarData.NoWHMove -> $j1 0# GrammarData.OblWHMove -> $j1 1# }
                 } in
                 case x1 of wild {
                   GrammarData.NoWHMove -> $j 0# GrammarData.OblWHMove -> $j 1# }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cenumFromTo ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 2, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x :: GrammarData.WHMovementObligatory)
                   (y :: GrammarData.WHMovementObligatory) ->
                 let {
                   $j :: GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
                     {- Arity: 1, Strictness: <S,U> -}
                   = \ (x1 :: GHC.Prim.Int#)[OneShot] ->
                     case y of wild {
                       GrammarData.NoWHMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 0#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumWHMovementObligatory_go1 x1
                            GHC.Types.True -> GHC.Types.[] @ GrammarData.WHMovementObligatory }
                       GrammarData.OblWHMove
                       -> case GHC.Prim.tagToEnum#
                                 @ GHC.Types.Bool
                                 (GHC.Prim.># x1 1#) of wild1 {
                            GHC.Types.False -> GrammarData.$fEnumWHMovementObligatory_go x1
                            GHC.Types.True
                            -> GHC.Types.[] @ GrammarData.WHMovementObligatory } }
                 } in
                 case x of wild {
                   GrammarData.NoWHMove -> $j 0# GrammarData.OblWHMove -> $j 1# }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cfromEnum ::
    GrammarData.WHMovementObligatory -> GHC.Types.Int
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>m,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.WHMovementObligatory) ->
                 case a of wild {
                   GrammarData.NoWHMove -> GHC.Types.I# 0#
                   GrammarData.OblWHMove -> GHC.Types.I# 1# }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$cpred ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.WHMovementObligatory) ->
                 case a of wild {
                   GrammarData.NoWHMove -> GrammarData.$fEnumWHMovementObligatory4
                   GrammarData.OblWHMove -> GrammarData.NoWHMove }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$csucc ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (a :: GrammarData.WHMovementObligatory) ->
                 case a of wild {
                   GrammarData.NoWHMove -> GrammarData.OblWHMove
                   GrammarData.OblWHMove
                   -> GrammarData.$fEnumWHMovementObligatory5 }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_$ctoEnum ::
    GHC.Types.Int -> GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <S(S),1*U(U)>, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: GHC.Types.Int) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$ctoEnum13 ww1 }) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_c ::
    GHC.Types.Int
    -> [GrammarData.WHMovementObligatory]
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int)
                   (ys :: [GrammarData.WHMovementObligatory]) ->
                 GHC.Types.:
                   @ GrammarData.WHMovementObligatory
                   (GrammarData.$fEnumWHMovementObligatory_$ctoEnum x)
                   ys) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_c1 ::
    GHC.Types.Int
    -> [GrammarData.WHMovementObligatory]
    -> [GrammarData.WHMovementObligatory]
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int)
                   (ys :: [GrammarData.WHMovementObligatory]) ->
                 GHC.Types.:
                   @ GrammarData.WHMovementObligatory
                   (case x of wild { GHC.Types.I# a ->
                    GHC.Prim.tagToEnum# @ GrammarData.WHMovementObligatory a })
                   ys) -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_go ::
    GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
  {- Arity: 1, Strictness: <L,U> -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_go1 ::
    GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
  {- Arity: 1, Strictness: <L,U> -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_go2 ::
    GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
179d51382e990d4d51977edd0072efb7
  $fEnumWHMovementObligatory_go3 ::
    GHC.Prim.Int# -> [GrammarData.WHMovementObligatory]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U> -}
1b7f4a36baf794187a01f705f3af35bc
  $fEqAffixHopping :: GHC.Classes.Eq GrammarData.AffixHopping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.AffixHopping
                  GrammarData.$fEqAffixHopping_$c==
                  GrammarData.$fEqAffixHopping_$c/= -}
1b7f4a36baf794187a01f705f3af35bc
  $fEqAffixHopping_$c/= ::
    GrammarData.AffixHopping
    -> GrammarData.AffixHopping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.AffixHopping)
                   (b :: GrammarData.AffixHopping) ->
                 case a of wild {
                   GrammarData.NoAffixHop
                   -> case b of wild1 {
                        GrammarData.NoAffixHop -> GHC.Types.False
                        GrammarData.OblAffixHop -> GHC.Types.True }
                   GrammarData.OblAffixHop
                   -> case b of wild1 {
                        GrammarData.NoAffixHop -> GHC.Types.True
                        GrammarData.OblAffixHop -> GHC.Types.False } }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fEqAffixHopping_$c== ::
    GrammarData.AffixHopping
    -> GrammarData.AffixHopping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.AffixHopping)
                   (ds1 :: GrammarData.AffixHopping) ->
                 case ds of wild {
                   GrammarData.NoAffixHop
                   -> case ds1 of wild1 {
                        GrammarData.NoAffixHop -> GHC.Types.True
                        GrammarData.OblAffixHop -> GHC.Types.False }
                   GrammarData.OblAffixHop
                   -> case ds1 of wild1 {
                        GrammarData.NoAffixHop -> GHC.Types.False
                        GrammarData.OblAffixHop -> GHC.Types.True } }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqBar :: GHC.Classes.Eq GrammarData.Bar
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Bar
                  GrammarData.$fEqBar_$c==
                  GrammarData.$fEqBar_$c/= -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqBar_$c/= ::
    GrammarData.Bar -> GrammarData.Bar -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.Bar) (b :: GrammarData.Bar) ->
                 case GrammarData.$fEqBar_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqBar_$c== ::
    GrammarData.Bar -> GrammarData.Bar -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
2be002b59c64ba138a144cb19c908678
  $fEqComplementizerInitial ::
    GHC.Classes.Eq GrammarData.ComplementizerInitial
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ComplementizerInitial
                  GrammarData.$fEqComplementizerInitial_$c==
                  GrammarData.$fEqComplementizerInitial_$c/= -}
2be002b59c64ba138a144cb19c908678
  $fEqComplementizerInitial_$c/= ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.ComplementizerInitial)
                   (b :: GrammarData.ComplementizerInitial) ->
                 case a of wild {
                   GrammarData.CompInitial
                   -> case b of wild1 {
                        GrammarData.CompInitial -> GHC.Types.False
                        GrammarData.CompFinal -> GHC.Types.True }
                   GrammarData.CompFinal
                   -> case b of wild1 {
                        GrammarData.CompInitial -> GHC.Types.True
                        GrammarData.CompFinal -> GHC.Types.False } }) -}
2be002b59c64ba138a144cb19c908678
  $fEqComplementizerInitial_$c== ::
    GrammarData.ComplementizerInitial
    -> GrammarData.ComplementizerInitial -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ComplementizerInitial)
                   (ds1 :: GrammarData.ComplementizerInitial) ->
                 case ds of wild {
                   GrammarData.CompInitial
                   -> case ds1 of wild1 {
                        GrammarData.CompInitial -> GHC.Types.True
                        GrammarData.CompFinal -> GHC.Types.False }
                   GrammarData.CompFinal
                   -> case ds1 of wild1 {
                        GrammarData.CompInitial -> GHC.Types.False
                        GrammarData.CompFinal -> GHC.Types.True } }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEqIlloc :: GHC.Classes.Eq GrammarData.Illoc
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Illoc
                  GrammarData.$fEqIlloc_$c==
                  GrammarData.$fEqIlloc_$c/= -}
4c6bb1f31e4c8548c057d21577834136
  $fEqIlloc_$c/= ::
    GrammarData.Illoc -> GrammarData.Illoc -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: GrammarData.Illoc) (b :: GrammarData.Illoc) ->
                 case a of wild {
                   GrammarData.Null
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True GrammarData.Null -> GHC.Types.False }
                   GrammarData.Ques
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True GrammarData.Ques -> GHC.Types.False }
                   GrammarData.Decl
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True GrammarData.Decl -> GHC.Types.False }
                   GrammarData.Imper
                   -> case b of wild1 {
                        DEFAULT -> GHC.Types.True
                        GrammarData.Imper -> GHC.Types.False } }) -}
4c6bb1f31e4c8548c057d21577834136
  $fEqIlloc_$c== ::
    GrammarData.Illoc -> GrammarData.Illoc -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: GrammarData.Illoc)
                   (ds1 :: GrammarData.Illoc) ->
                 case ds of wild {
                   GrammarData.Null
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Null -> GHC.Types.True }
                   GrammarData.Ques
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Ques -> GHC.Types.True }
                   GrammarData.Decl
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False GrammarData.Decl -> GHC.Types.True }
                   GrammarData.Imper
                   -> case ds1 of wild1 {
                        DEFAULT -> GHC.Types.False
                        GrammarData.Imper -> GHC.Types.True } }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEqItoCMovement :: GHC.Classes.Eq GrammarData.ItoCMovement
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ItoCMovement
                  GrammarData.$fEqItoCMovement_$c==
                  GrammarData.$fEqItoCMovement_$c/= -}
29901a1223a3a84f8195c61990d5cb58
  $fEqItoCMovement_$c/= ::
    GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.ItoCMovement)
                   (b :: GrammarData.ItoCMovement) ->
                 case a of wild {
                   GrammarData.NoItoCMove
                   -> case b of wild1 {
                        GrammarData.NoItoCMove -> GHC.Types.False
                        GrammarData.OblItoCMove -> GHC.Types.True }
                   GrammarData.OblItoCMove
                   -> case b of wild1 {
                        GrammarData.NoItoCMove -> GHC.Types.True
                        GrammarData.OblItoCMove -> GHC.Types.False } }) -}
29901a1223a3a84f8195c61990d5cb58
  $fEqItoCMovement_$c== ::
    GrammarData.ItoCMovement
    -> GrammarData.ItoCMovement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ItoCMovement)
                   (ds1 :: GrammarData.ItoCMovement) ->
                 case ds of wild {
                   GrammarData.NoItoCMove
                   -> case ds1 of wild1 {
                        GrammarData.NoItoCMove -> GHC.Types.True
                        GrammarData.OblItoCMove -> GHC.Types.False }
                   GrammarData.OblItoCMove
                   -> case ds1 of wild1 {
                        GrammarData.NoItoCMove -> GHC.Types.False
                        GrammarData.OblItoCMove -> GHC.Types.True } }) -}
d02c228465e5d932d54760d6cee46df5
  $fEqLeaf :: GHC.Classes.Eq GrammarData.Leaf
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Leaf
                  GrammarData.$fEqLeaf_$c==
                  GrammarData.$fEqLeaf_$c/= -}
d02c228465e5d932d54760d6cee46df5
  $fEqLeaf_$c/= ::
    GrammarData.Leaf -> GrammarData.Leaf -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.Leaf) (b :: GrammarData.Leaf) ->
                 case GrammarData.$fEqLeaf_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
d02c228465e5d932d54760d6cee46df5
  $fEqLeaf_$c== ::
    GrammarData.Leaf -> GrammarData.Leaf -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
4123d9519741817da4543047c2f6b1c7
  $fEqNullSubject :: GHC.Classes.Eq GrammarData.NullSubject
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullSubject
                  GrammarData.$fEqNullSubject_$c==
                  GrammarData.$fEqNullSubject_$c/= -}
4123d9519741817da4543047c2f6b1c7
  $fEqNullSubject_$c/= ::
    GrammarData.NullSubject
    -> GrammarData.NullSubject -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.NullSubject) (b :: GrammarData.NullSubject) ->
                 case a of wild {
                   GrammarData.NoNullSub
                   -> case b of wild1 {
                        GrammarData.NoNullSub -> GHC.Types.False
                        GrammarData.OptNullSub -> GHC.Types.True }
                   GrammarData.OptNullSub
                   -> case b of wild1 {
                        GrammarData.NoNullSub -> GHC.Types.True
                        GrammarData.OptNullSub -> GHC.Types.False } }) -}
4123d9519741817da4543047c2f6b1c7
  $fEqNullSubject_$c== ::
    GrammarData.NullSubject
    -> GrammarData.NullSubject -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.NullSubject)
                   (ds1 :: GrammarData.NullSubject) ->
                 case ds of wild {
                   GrammarData.NoNullSub
                   -> case ds1 of wild1 {
                        GrammarData.NoNullSub -> GHC.Types.True
                        GrammarData.OptNullSub -> GHC.Types.False }
                   GrammarData.OptNullSub
                   -> case ds1 of wild1 {
                        GrammarData.NoNullSub -> GHC.Types.False
                        GrammarData.OptNullSub -> GHC.Types.True } }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEqNullTopic :: GHC.Classes.Eq GrammarData.NullTopic
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullTopic
                  GrammarData.$fEqNullTopic_$c==
                  GrammarData.$fEqNullTopic_$c/= -}
1c46b92f8b870c141981ad765cca1f9c
  $fEqNullTopic_$c/= ::
    GrammarData.NullTopic -> GrammarData.NullTopic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.NullTopic) (b :: GrammarData.NullTopic) ->
                 case a of wild {
                   GrammarData.NoNullTop
                   -> case b of wild1 {
                        GrammarData.NoNullTop -> GHC.Types.False
                        GrammarData.OptNullTop -> GHC.Types.True }
                   GrammarData.OptNullTop
                   -> case b of wild1 {
                        GrammarData.NoNullTop -> GHC.Types.True
                        GrammarData.OptNullTop -> GHC.Types.False } }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fEqNullTopic_$c== ::
    GrammarData.NullTopic -> GrammarData.NullTopic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.NullTopic) (ds1 :: GrammarData.NullTopic) ->
                 case ds of wild {
                   GrammarData.NoNullTop
                   -> case ds1 of wild1 {
                        GrammarData.NoNullTop -> GHC.Types.True
                        GrammarData.OptNullTop -> GHC.Types.False }
                   GrammarData.OptNullTop
                   -> case ds1 of wild1 {
                        GrammarData.NoNullTop -> GHC.Types.False
                        GrammarData.OptNullTop -> GHC.Types.True } }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEqObjectFinal :: GHC.Classes.Eq GrammarData.ObjectFinal
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObjectFinal
                  GrammarData.$fEqObjectFinal_$c==
                  GrammarData.$fEqObjectFinal_$c/= -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEqObjectFinal_$c/= ::
    GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.ObjectFinal) (b :: GrammarData.ObjectFinal) ->
                 case a of wild {
                   GrammarData.ObjFinal
                   -> case b of wild1 {
                        GrammarData.ObjFinal -> GHC.Types.False
                        GrammarData.ObjInitial -> GHC.Types.True }
                   GrammarData.ObjInitial
                   -> case b of wild1 {
                        GrammarData.ObjFinal -> GHC.Types.True
                        GrammarData.ObjInitial -> GHC.Types.False } }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fEqObjectFinal_$c== ::
    GrammarData.ObjectFinal
    -> GrammarData.ObjectFinal -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ObjectFinal)
                   (ds1 :: GrammarData.ObjectFinal) ->
                 case ds of wild {
                   GrammarData.ObjFinal
                   -> case ds1 of wild1 {
                        GrammarData.ObjFinal -> GHC.Types.True
                        GrammarData.ObjInitial -> GHC.Types.False }
                   GrammarData.ObjInitial
                   -> case ds1 of wild1 {
                        GrammarData.ObjFinal -> GHC.Types.False
                        GrammarData.ObjInitial -> GHC.Types.True } }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEqObligatoryTopic :: GHC.Classes.Eq GrammarData.ObligatoryTopic
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObligatoryTopic
                  GrammarData.$fEqObligatoryTopic_$c==
                  GrammarData.$fEqObligatoryTopic_$c/= -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEqObligatoryTopic_$c/= ::
    GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.ObligatoryTopic)
                   (b :: GrammarData.ObligatoryTopic) ->
                 case a of wild {
                   GrammarData.OblTopic
                   -> case b of wild1 {
                        GrammarData.OblTopic -> GHC.Types.False
                        GrammarData.OptTopic -> GHC.Types.True }
                   GrammarData.OptTopic
                   -> case b of wild1 {
                        GrammarData.OblTopic -> GHC.Types.True
                        GrammarData.OptTopic -> GHC.Types.False } }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fEqObligatoryTopic_$c== ::
    GrammarData.ObligatoryTopic
    -> GrammarData.ObligatoryTopic -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ObligatoryTopic)
                   (ds1 :: GrammarData.ObligatoryTopic) ->
                 case ds of wild {
                   GrammarData.OblTopic
                   -> case ds1 of wild1 {
                        GrammarData.OblTopic -> GHC.Types.True
                        GrammarData.OptTopic -> GHC.Types.False }
                   GrammarData.OptTopic
                   -> case ds1 of wild1 {
                        GrammarData.OblTopic -> GHC.Types.False
                        GrammarData.OptTopic -> GHC.Types.True } }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqPhrase :: GHC.Classes.Eq GrammarData.Phrase
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Phrase
                  GrammarData.$fEqPhrase_$c==
                  GrammarData.$fEqPhrase_$c/= -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqPhrase_$c/= ::
    GrammarData.Phrase -> GrammarData.Phrase -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.Phrase) (b :: GrammarData.Phrase) ->
                 case GrammarData.$fEqPhrase_$c== a b of wild {
                   GHC.Types.False -> GHC.Types.True
                   GHC.Types.True -> GHC.Types.False }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fEqPhrase_$c== ::
    GrammarData.Phrase -> GrammarData.Phrase -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fEqPiedPiping :: GHC.Classes.Eq GrammarData.PiedPiping
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.PiedPiping
                  GrammarData.$fEqPiedPiping_$c==
                  GrammarData.$fEqPiedPiping_$c/= -}
7a0991a800e7b21d81a780394c5b6f02
  $fEqPiedPiping_$c/= ::
    GrammarData.PiedPiping -> GrammarData.PiedPiping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.PiedPiping) (b :: GrammarData.PiedPiping) ->
                 case a of wild {
                   GrammarData.PiedPipe
                   -> case b of wild1 {
                        GrammarData.PiedPipe -> GHC.Types.False
                        GrammarData.PrepStrand -> GHC.Types.True }
                   GrammarData.PrepStrand
                   -> case b of wild1 {
                        GrammarData.PiedPipe -> GHC.Types.True
                        GrammarData.PrepStrand -> GHC.Types.False } }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fEqPiedPiping_$c== ::
    GrammarData.PiedPiping -> GrammarData.PiedPiping -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.PiedPiping)
                   (ds1 :: GrammarData.PiedPiping) ->
                 case ds of wild {
                   GrammarData.PiedPipe
                   -> case ds1 of wild1 {
                        GrammarData.PiedPipe -> GHC.Types.True
                        GrammarData.PrepStrand -> GHC.Types.False }
                   GrammarData.PrepStrand
                   -> case ds1 of wild1 {
                        GrammarData.PiedPipe -> GHC.Types.False
                        GrammarData.PrepStrand -> GHC.Types.True } }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEqQuestionInversion ::
    GHC.Classes.Eq GrammarData.QuestionInversion
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.QuestionInversion
                  GrammarData.$fEqQuestionInversion_$c==
                  GrammarData.$fEqQuestionInversion_$c/= -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEqQuestionInversion_$c/= ::
    GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.QuestionInversion)
                   (b :: GrammarData.QuestionInversion) ->
                 case a of wild {
                   GrammarData.NoQuesInv
                   -> case b of wild1 {
                        GrammarData.NoQuesInv -> GHC.Types.False
                        GrammarData.OblQuesInv -> GHC.Types.True }
                   GrammarData.OblQuesInv
                   -> case b of wild1 {
                        GrammarData.NoQuesInv -> GHC.Types.True
                        GrammarData.OblQuesInv -> GHC.Types.False } }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fEqQuestionInversion_$c== ::
    GrammarData.QuestionInversion
    -> GrammarData.QuestionInversion -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.QuestionInversion)
                   (ds1 :: GrammarData.QuestionInversion) ->
                 case ds of wild {
                   GrammarData.NoQuesInv
                   -> case ds1 of wild1 {
                        GrammarData.NoQuesInv -> GHC.Types.True
                        GrammarData.OblQuesInv -> GHC.Types.False }
                   GrammarData.OblQuesInv
                   -> case ds1 of wild1 {
                        GrammarData.NoQuesInv -> GHC.Types.False
                        GrammarData.OblQuesInv -> GHC.Types.True } }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEqSubjectInitial :: GHC.Classes.Eq GrammarData.SubjectInitial
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.SubjectInitial
                  GrammarData.$fEqSubjectInitial_$c==
                  GrammarData.$fEqSubjectInitial_$c/= -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEqSubjectInitial_$c/= ::
    GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.SubjectInitial)
                   (b :: GrammarData.SubjectInitial) ->
                 case a of wild {
                   GrammarData.SubInitial
                   -> case b of wild1 {
                        GrammarData.SubInitial -> GHC.Types.False
                        GrammarData.SubFinal -> GHC.Types.True }
                   GrammarData.SubFinal
                   -> case b of wild1 {
                        GrammarData.SubInitial -> GHC.Types.True
                        GrammarData.SubFinal -> GHC.Types.False } }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fEqSubjectInitial_$c== ::
    GrammarData.SubjectInitial
    -> GrammarData.SubjectInitial -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.SubjectInitial)
                   (ds1 :: GrammarData.SubjectInitial) ->
                 case ds of wild {
                   GrammarData.SubInitial
                   -> case ds1 of wild1 {
                        GrammarData.SubInitial -> GHC.Types.True
                        GrammarData.SubFinal -> GHC.Types.False }
                   GrammarData.SubFinal
                   -> case ds1 of wild1 {
                        GrammarData.SubInitial -> GHC.Types.False
                        GrammarData.SubFinal -> GHC.Types.True } }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEqTopicMarking :: GHC.Classes.Eq GrammarData.TopicMarking
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.TopicMarking
                  GrammarData.$fEqTopicMarking_$c==
                  GrammarData.$fEqTopicMarking_$c/= -}
086be7089aedc4e5b861d78292d86bfc
  $fEqTopicMarking_$c/= ::
    GrammarData.TopicMarking
    -> GrammarData.TopicMarking -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.TopicMarking)
                   (b :: GrammarData.TopicMarking) ->
                 case a of wild {
                   GrammarData.NoTopMark
                   -> case b of wild1 {
                        GrammarData.NoTopMark -> GHC.Types.False
                        GrammarData.OblTopMark -> GHC.Types.True }
                   GrammarData.OblTopMark
                   -> case b of wild1 {
                        GrammarData.NoTopMark -> GHC.Types.True
                        GrammarData.OblTopMark -> GHC.Types.False } }) -}
086be7089aedc4e5b861d78292d86bfc
  $fEqTopicMarking_$c== ::
    GrammarData.TopicMarking
    -> GrammarData.TopicMarking -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.TopicMarking)
                   (ds1 :: GrammarData.TopicMarking) ->
                 case ds of wild {
                   GrammarData.NoTopMark
                   -> case ds1 of wild1 {
                        GrammarData.NoTopMark -> GHC.Types.True
                        GrammarData.OblTopMark -> GHC.Types.False }
                   GrammarData.OblTopMark
                   -> case ds1 of wild1 {
                        GrammarData.NoTopMark -> GHC.Types.False
                        GrammarData.OblTopMark -> GHC.Types.True } }) -}
b89383b8c859aafdd38937312f593ec7
  $fEqVtoIMovement :: GHC.Classes.Eq GrammarData.VtoIMovement
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.VtoIMovement
                  GrammarData.$fEqVtoIMovement_$c==
                  GrammarData.$fEqVtoIMovement_$c/= -}
b89383b8c859aafdd38937312f593ec7
  $fEqVtoIMovement_$c/= ::
    GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.VtoIMovement)
                   (b :: GrammarData.VtoIMovement) ->
                 case a of wild {
                   GrammarData.NoVtoIMove
                   -> case b of wild1 {
                        GrammarData.NoVtoIMove -> GHC.Types.False
                        GrammarData.OblVtoIMove -> GHC.Types.True }
                   GrammarData.OblVtoIMove
                   -> case b of wild1 {
                        GrammarData.NoVtoIMove -> GHC.Types.True
                        GrammarData.OblVtoIMove -> GHC.Types.False } }) -}
b89383b8c859aafdd38937312f593ec7
  $fEqVtoIMovement_$c== ::
    GrammarData.VtoIMovement
    -> GrammarData.VtoIMovement -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.VtoIMovement)
                   (ds1 :: GrammarData.VtoIMovement) ->
                 case ds of wild {
                   GrammarData.NoVtoIMove
                   -> case ds1 of wild1 {
                        GrammarData.NoVtoIMove -> GHC.Types.True
                        GrammarData.OblVtoIMove -> GHC.Types.False }
                   GrammarData.OblVtoIMove
                   -> case ds1 of wild1 {
                        GrammarData.NoVtoIMove -> GHC.Types.False
                        GrammarData.OblVtoIMove -> GHC.Types.True } }) -}
179d51382e990d4d51977edd0072efb7
  $fEqWHMovementObligatory ::
    GHC.Classes.Eq GrammarData.WHMovementObligatory
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.WHMovementObligatory
                  GrammarData.$fEqWHMovementObligatory_$c==
                  GrammarData.$fEqWHMovementObligatory_$c/= -}
179d51382e990d4d51977edd0072efb7
  $fEqWHMovementObligatory_$c/= ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (a :: GrammarData.WHMovementObligatory)
                   (b :: GrammarData.WHMovementObligatory) ->
                 case a of wild {
                   GrammarData.NoWHMove
                   -> case b of wild1 {
                        GrammarData.NoWHMove -> GHC.Types.False
                        GrammarData.OblWHMove -> GHC.Types.True }
                   GrammarData.OblWHMove
                   -> case b of wild1 {
                        GrammarData.NoWHMove -> GHC.Types.True
                        GrammarData.OblWHMove -> GHC.Types.False } }) -}
179d51382e990d4d51977edd0072efb7
  $fEqWHMovementObligatory_$c== ::
    GrammarData.WHMovementObligatory
    -> GrammarData.WHMovementObligatory -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.WHMovementObligatory)
                   (ds1 :: GrammarData.WHMovementObligatory) ->
                 case ds of wild {
                   GrammarData.NoWHMove
                   -> case ds1 of wild1 {
                        GrammarData.NoWHMove -> GHC.Types.True
                        GrammarData.OblWHMove -> GHC.Types.False }
                   GrammarData.OblWHMove
                   -> case ds1 of wild1 {
                        GrammarData.NoWHMove -> GHC.Types.False
                        GrammarData.OblWHMove -> GHC.Types.True } }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping :: GHC.Read.Read GrammarData.AffixHopping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.AffixHopping
                  GrammarData.$fReadAffixHopping_$creadsPrec
                  GrammarData.$fReadAffixHopping_$creadList
                  GrammarData.$fReadAffixHopping_$creadPrec
                  GrammarData.$fReadAffixHopping_$creadListPrec -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.AffixHopping] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.AffixHopping]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.AffixHopping
                   GrammarData.$fReadAffixHopping2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.AffixHopping>_R))
                   @ b
                   eta1) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.AffixHopping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.AffixHopping
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoAffixHop) -}
e6698d56a48bf0e752adcc4c7276daca
  $fReadAffixHopping11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoAffixHop"#) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.AffixHopping]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.AffixHopping
                   GrammarData.$fReadAffixHopping2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.AffixHopping>_R))
                   @ [GrammarData.AffixHopping]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.AffixHopping])) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.AffixHopping
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.AffixHopping
                   GrammarData.$fReadAffixHopping3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.AffixHopping>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.AffixHopping>_R)))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.AffixHopping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.AffixHopping
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.AffixHopping
                   GrammarData.$fReadAffixHopping4
                   eta
                   @ b
                   eta1) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)
                   GrammarData.$fReadAffixHopping9
                   GrammarData.$fReadAffixHopping5) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)
                   GrammarData.$fReadAffixHopping6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.AffixHopping))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadAffixHopping8,
                  GrammarData.$fReadAffixHopping7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.AffixHopping>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.AffixHopping>_R))))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.AffixHopping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.AffixHopping
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblAffixHop) -}
a2912a5082f6c3031c3344769ca13c9b
  $fReadAffixHopping8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblAffixHop"#) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadAffixHopping11,
                  GrammarData.$fReadAffixHopping10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.AffixHopping>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.AffixHopping>_R))))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.AffixHopping]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.AffixHopping]
                   GrammarData.$fReadAffixHopping12) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.AffixHopping]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadAffixHopping1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.AffixHopping]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.AffixHopping]>_R))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.AffixHopping
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadAffixHopping2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.AffixHopping>_R)) -}
1b7f4a36baf794187a01f705f3af35bc
  $fReadAffixHopping_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.AffixHopping
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.AffixHopping
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.AffixHopping
                       GrammarData.$fReadAffixHopping3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.AffixHopping>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.AffixHopping>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.AffixHopping>_R)
                      @ GrammarData.AffixHopping
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.AffixHopping))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial ::
    GHC.Read.Read GrammarData.ComplementizerInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ComplementizerInitial
                  GrammarData.$fReadComplementizerInitial_$creadsPrec
                  GrammarData.$fReadComplementizerInitial_$creadList
                  GrammarData.$fReadComplementizerInitial_$creadPrec
                  GrammarData.$fReadComplementizerInitial_$creadListPrec -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.ComplementizerInitial]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.ComplementizerInitial]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.ComplementizerInitial
                   GrammarData.$fReadComplementizerInitial2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ComplementizerInitial>_R))
                   @ b
                   eta1) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ComplementizerInitial
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ComplementizerInitial
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.CompInitial) -}
f2f440ce969092d660a95346df049f64
  $fReadComplementizerInitial11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CompInitial"#) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.ComplementizerInitial]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.ComplementizerInitial
                   GrammarData.$fReadComplementizerInitial2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ComplementizerInitial>_R))
                   @ [GrammarData.ComplementizerInitial]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.ComplementizerInitial])) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         GrammarData.ComplementizerInitial
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.ComplementizerInitial
                   GrammarData.$fReadComplementizerInitial3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.ComplementizerInitial>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.ComplementizerInitial>_R)))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ComplementizerInitial
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.ComplementizerInitial
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.ComplementizerInitial
                   GrammarData.$fReadComplementizerInitial4
                   eta
                   @ b
                   eta1) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.ComplementizerInitial)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.ComplementizerInitial)
                   GrammarData.$fReadComplementizerInitial9
                   GrammarData.$fReadComplementizerInitial5) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.ComplementizerInitial)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.ComplementizerInitial)
                   GrammarData.$fReadComplementizerInitial6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.ComplementizerInitial))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.ComplementizerInitial)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadComplementizerInitial8,
                  GrammarData.$fReadComplementizerInitial7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ComplementizerInitial>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ComplementizerInitial>_R))))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ComplementizerInitial
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ComplementizerInitial
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.CompFinal) -}
9c7e4ed03e9503a139a302a488ddb4b0
  $fReadComplementizerInitial8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "CompFinal"#) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.ComplementizerInitial)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadComplementizerInitial11,
                  GrammarData.$fReadComplementizerInitial10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ComplementizerInitial>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ComplementizerInitial>_R))))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [GrammarData.ComplementizerInitial]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.ComplementizerInitial]
                   GrammarData.$fReadComplementizerInitial12) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GrammarData.ComplementizerInitial]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadComplementizerInitial1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.ComplementizerInitial]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.ComplementizerInitial]>_R))) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      GrammarData.ComplementizerInitial
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadComplementizerInitial2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.ComplementizerInitial>_R)) -}
2be002b59c64ba138a144cb19c908678
  $fReadComplementizerInitial_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.ComplementizerInitial
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.ComplementizerInitial
                       GrammarData.$fReadComplementizerInitial3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.ComplementizerInitial>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.ComplementizerInitial>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.ComplementizerInitial>_R)
                      @ GrammarData.ComplementizerInitial
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.ComplementizerInitial))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement :: GHC.Read.Read GrammarData.ItoCMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ItoCMovement
                  GrammarData.$fReadItoCMovement_$creadsPrec
                  GrammarData.$fReadItoCMovement_$creadList
                  GrammarData.$fReadItoCMovement_$creadPrec
                  GrammarData.$fReadItoCMovement_$creadListPrec -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.ItoCMovement] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.ItoCMovement]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.ItoCMovement
                   GrammarData.$fReadItoCMovement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ItoCMovement>_R))
                   @ b
                   eta1) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ItoCMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ItoCMovement
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoItoCMove) -}
a09dc96d58ae3bb99669a690224fb304
  $fReadItoCMovement11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoItoCMove"#) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.ItoCMovement]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.ItoCMovement
                   GrammarData.$fReadItoCMovement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ItoCMovement>_R))
                   @ [GrammarData.ItoCMovement]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.ItoCMovement])) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.ItoCMovement
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.ItoCMovement
                   GrammarData.$fReadItoCMovement3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.ItoCMovement>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.ItoCMovement>_R)))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ItoCMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.ItoCMovement
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.ItoCMovement
                   GrammarData.$fReadItoCMovement4
                   eta
                   @ b
                   eta1) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)
                   GrammarData.$fReadItoCMovement9
                   GrammarData.$fReadItoCMovement5) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)
                   GrammarData.$fReadItoCMovement6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.ItoCMovement))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadItoCMovement8,
                  GrammarData.$fReadItoCMovement7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ItoCMovement>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ItoCMovement>_R))))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ItoCMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ItoCMovement
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblItoCMove) -}
994c8cd0d8b2f30839333d68fdc51a93
  $fReadItoCMovement8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblItoCMove"#) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadItoCMovement11,
                  GrammarData.$fReadItoCMovement10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ItoCMovement>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ItoCMovement>_R))))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.ItoCMovement]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.ItoCMovement]
                   GrammarData.$fReadItoCMovement12) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.ItoCMovement]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadItoCMovement1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.ItoCMovement]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.ItoCMovement]>_R))) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ItoCMovement
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadItoCMovement2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.ItoCMovement>_R)) -}
29901a1223a3a84f8195c61990d5cb58
  $fReadItoCMovement_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.ItoCMovement
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.ItoCMovement
                       GrammarData.$fReadItoCMovement3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.ItoCMovement>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.ItoCMovement>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.ItoCMovement>_R)
                      @ GrammarData.ItoCMovement
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.ItoCMovement))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject :: GHC.Read.Read GrammarData.NullSubject
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullSubject
                  GrammarData.$fReadNullSubject_$creadsPrec
                  GrammarData.$fReadNullSubject_$creadList
                  GrammarData.$fReadNullSubject_$creadPrec
                  GrammarData.$fReadNullSubject_$creadListPrec -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.NullSubject] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.NullSubject]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.NullSubject
                   GrammarData.$fReadNullSubject2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.NullSubject>_R))
                   @ b
                   eta1) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullSubject -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.NullSubject
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoNullSub) -}
1aa31f1e2d2cb0959618f388698a88b6
  $fReadNullSubject11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoNullSub"#) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.NullSubject]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.NullSubject
                   GrammarData.$fReadNullSubject2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.NullSubject>_R))
                   @ [GrammarData.NullSubject]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.NullSubject])) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.NullSubject
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.NullSubject
                   GrammarData.$fReadNullSubject3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.NullSubject>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.NullSubject>_R)))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullSubject -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.NullSubject
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.NullSubject
                   GrammarData.$fReadNullSubject4
                   eta
                   @ b
                   eta1) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)
                   GrammarData.$fReadNullSubject9
                   GrammarData.$fReadNullSubject5) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)
                   GrammarData.$fReadNullSubject6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.NullSubject))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadNullSubject8,
                  GrammarData.$fReadNullSubject7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.NullSubject>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.NullSubject>_R))))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullSubject -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.NullSubject
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OptNullSub) -}
5505009f3e0aeaab8c8e1ed9d98232d6
  $fReadNullSubject8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OptNullSub"#) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadNullSubject11,
                  GrammarData.$fReadNullSubject10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.NullSubject>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.NullSubject>_R))))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.NullSubject]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.NullSubject]
                   GrammarData.$fReadNullSubject12) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.NullSubject]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadNullSubject1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.NullSubject]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.NullSubject]>_R))) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullSubject
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadNullSubject2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.NullSubject>_R)) -}
4123d9519741817da4543047c2f6b1c7
  $fReadNullSubject_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.NullSubject
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.NullSubject
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.NullSubject
                       GrammarData.$fReadNullSubject3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.NullSubject>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.NullSubject>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.NullSubject>_R)
                      @ GrammarData.NullSubject
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.NullSubject))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic :: GHC.Read.Read GrammarData.NullTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullTopic
                  GrammarData.$fReadNullTopic_$creadsPrec
                  GrammarData.$fReadNullTopic_$creadList
                  GrammarData.$fReadNullTopic_$creadPrec
                  GrammarData.$fReadNullTopic_$creadListPrec -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.NullTopic] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.NullTopic]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.NullTopic
                   GrammarData.$fReadNullTopic2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.NullTopic>_R))
                   @ b
                   eta1) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.NullTopic
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoNullTop) -}
ac6c9e1c12ccd0b105a271bc13c31650
  $fReadNullTopic11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoNullTop"#) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.NullTopic]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.NullTopic
                   GrammarData.$fReadNullTopic2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.NullTopic>_R))
                   @ [GrammarData.NullTopic]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.NullTopic])) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.NullTopic
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.NullTopic
                   GrammarData.$fReadNullTopic3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.NullTopic>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.NullTopic>_R)))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.NullTopic
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.NullTopic
                   GrammarData.$fReadNullTopic4
                   eta
                   @ b
                   eta1) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)
                   GrammarData.$fReadNullTopic9
                   GrammarData.$fReadNullTopic5) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)
                   GrammarData.$fReadNullTopic6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.NullTopic))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadNullTopic8,
                  GrammarData.$fReadNullTopic7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.NullTopic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.NullTopic>_R))))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.NullTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.NullTopic
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OptNullTop) -}
d3a424818e3767a94ab4e5e106f3f76f
  $fReadNullTopic8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OptNullTop"#) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadNullTopic11,
                  GrammarData.$fReadNullTopic10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.NullTopic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.NullTopic>_R))))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.NullTopic]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.NullTopic]
                   GrammarData.$fReadNullTopic12) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.NullTopic]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadNullTopic1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.NullTopic]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.NullTopic]>_R))) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.NullTopic
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadNullTopic2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.NullTopic>_R)) -}
1c46b92f8b870c141981ad765cca1f9c
  $fReadNullTopic_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.NullTopic
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.NullTopic
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.NullTopic
                       GrammarData.$fReadNullTopic3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.NullTopic>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.NullTopic>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0] <GrammarData.NullTopic>_R)
                      @ GrammarData.NullTopic
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.NullTopic))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal :: GHC.Read.Read GrammarData.ObjectFinal
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObjectFinal
                  GrammarData.$fReadObjectFinal_$creadsPrec
                  GrammarData.$fReadObjectFinal_$creadList
                  GrammarData.$fReadObjectFinal_$creadPrec
                  GrammarData.$fReadObjectFinal_$creadListPrec -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.ObjectFinal] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.ObjectFinal]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.ObjectFinal
                   GrammarData.$fReadObjectFinal2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ObjectFinal>_R))
                   @ b
                   eta1) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObjectFinal -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ObjectFinal
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.ObjFinal) -}
4ad6e576c942417c119ac34cd9d925f9
  $fReadObjectFinal11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ObjFinal"#) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.ObjectFinal]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.ObjectFinal
                   GrammarData.$fReadObjectFinal2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ObjectFinal>_R))
                   @ [GrammarData.ObjectFinal]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.ObjectFinal])) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.ObjectFinal
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.ObjectFinal
                   GrammarData.$fReadObjectFinal3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.ObjectFinal>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.ObjectFinal>_R)))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObjectFinal -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.ObjectFinal
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.ObjectFinal
                   GrammarData.$fReadObjectFinal4
                   eta
                   @ b
                   eta1) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)
                   GrammarData.$fReadObjectFinal9
                   GrammarData.$fReadObjectFinal5) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)
                   GrammarData.$fReadObjectFinal6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.ObjectFinal))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadObjectFinal8,
                  GrammarData.$fReadObjectFinal7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ObjectFinal>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ObjectFinal>_R))))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObjectFinal -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ObjectFinal
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.ObjInitial) -}
ea57bd59bd93e46f8079fadbccd57428
  $fReadObjectFinal8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ObjInitial"#) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadObjectFinal11,
                  GrammarData.$fReadObjectFinal10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ObjectFinal>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ObjectFinal>_R))))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.ObjectFinal]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.ObjectFinal]
                   GrammarData.$fReadObjectFinal12) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.ObjectFinal]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadObjectFinal1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.ObjectFinal]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.ObjectFinal]>_R))) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.ObjectFinal
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadObjectFinal2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.ObjectFinal>_R)) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fReadObjectFinal_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.ObjectFinal
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.ObjectFinal
                       GrammarData.$fReadObjectFinal3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.ObjectFinal>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.ObjectFinal>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.ObjectFinal>_R)
                      @ GrammarData.ObjectFinal
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.ObjectFinal))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic :: GHC.Read.Read GrammarData.ObligatoryTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObligatoryTopic
                  GrammarData.$fReadObligatoryTopic_$creadsPrec
                  GrammarData.$fReadObligatoryTopic_$creadList
                  GrammarData.$fReadObligatoryTopic_$creadPrec
                  GrammarData.$fReadObligatoryTopic_$creadListPrec -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.ObligatoryTopic] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.ObligatoryTopic]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.ObligatoryTopic
                   GrammarData.$fReadObligatoryTopic2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ObligatoryTopic>_R))
                   @ b
                   eta1) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObligatoryTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ObligatoryTopic
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblTopic) -}
d13ca0ee9bfd4fa9e30becb069b61164
  $fReadObligatoryTopic11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblTopic"#) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.ObligatoryTopic]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.ObligatoryTopic
                   GrammarData.$fReadObligatoryTopic2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.ObligatoryTopic>_R))
                   @ [GrammarData.ObligatoryTopic]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.ObligatoryTopic])) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.ObligatoryTopic
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.ObligatoryTopic
                   GrammarData.$fReadObligatoryTopic3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.ObligatoryTopic>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.ObligatoryTopic>_R)))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObligatoryTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.ObligatoryTopic
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.ObligatoryTopic
                   GrammarData.$fReadObligatoryTopic4
                   eta
                   @ b
                   eta1) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.ObligatoryTopic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.ObligatoryTopic)
                   GrammarData.$fReadObligatoryTopic9
                   GrammarData.$fReadObligatoryTopic5) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.ObligatoryTopic)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.ObligatoryTopic)
                   GrammarData.$fReadObligatoryTopic6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.ObligatoryTopic))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.ObligatoryTopic)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadObligatoryTopic8,
                  GrammarData.$fReadObligatoryTopic7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ObligatoryTopic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ObligatoryTopic>_R))))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.ObligatoryTopic -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.ObligatoryTopic
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OptTopic) -}
fd80119709579dbe62401b466e97263b
  $fReadObligatoryTopic8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OptTopic"#) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.ObligatoryTopic)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadObligatoryTopic11,
                  GrammarData.$fReadObligatoryTopic10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.ObligatoryTopic>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.ObligatoryTopic>_R))))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.ObligatoryTopic]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.ObligatoryTopic]
                   GrammarData.$fReadObligatoryTopic12) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GrammarData.ObligatoryTopic]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadObligatoryTopic1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.ObligatoryTopic]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.ObligatoryTopic]>_R))) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      GrammarData.ObligatoryTopic
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadObligatoryTopic2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.ObligatoryTopic>_R)) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fReadObligatoryTopic_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.ObligatoryTopic
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.ObligatoryTopic
                       GrammarData.$fReadObligatoryTopic3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.ObligatoryTopic>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.ObligatoryTopic>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.ObligatoryTopic>_R)
                      @ GrammarData.ObligatoryTopic
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.ObligatoryTopic))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping :: GHC.Read.Read GrammarData.PiedPiping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.PiedPiping
                  GrammarData.$fReadPiedPiping_$creadsPrec
                  GrammarData.$fReadPiedPiping_$creadList
                  GrammarData.$fReadPiedPiping_$creadPrec
                  GrammarData.$fReadPiedPiping_$creadListPrec -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.PiedPiping] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.PiedPiping]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.PiedPiping
                   GrammarData.$fReadPiedPiping2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.PiedPiping>_R))
                   @ b
                   eta1) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.PiedPiping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.PiedPiping
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.PiedPipe) -}
707158cf0276fad1728f595ecc792c98
  $fReadPiedPiping11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PiedPipe"#) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.PiedPiping]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.PiedPiping
                   GrammarData.$fReadPiedPiping2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.PiedPiping>_R))
                   @ [GrammarData.PiedPiping]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.PiedPiping])) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.PiedPiping
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.PiedPiping
                   GrammarData.$fReadPiedPiping3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.PiedPiping>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.PiedPiping>_R)))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.PiedPiping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.PiedPiping
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.PiedPiping
                   GrammarData.$fReadPiedPiping4
                   eta
                   @ b
                   eta1) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)
                   GrammarData.$fReadPiedPiping9
                   GrammarData.$fReadPiedPiping5) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)
                   GrammarData.$fReadPiedPiping6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.PiedPiping))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadPiedPiping8,
                  GrammarData.$fReadPiedPiping7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.PiedPiping>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.PiedPiping>_R))))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.PiedPiping -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.PiedPiping
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.PrepStrand) -}
ec140d9ccb74aa5d7006eba4712e3d29
  $fReadPiedPiping8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "PrepStrand"#) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadPiedPiping11,
                  GrammarData.$fReadPiedPiping10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.PiedPiping>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.PiedPiping>_R))))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.PiedPiping]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.PiedPiping]
                   GrammarData.$fReadPiedPiping12) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.PiedPiping]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadPiedPiping1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.PiedPiping]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.PiedPiping]>_R))) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.PiedPiping
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadPiedPiping2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.PiedPiping>_R)) -}
7a0991a800e7b21d81a780394c5b6f02
  $fReadPiedPiping_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.PiedPiping
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.PiedPiping
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.PiedPiping
                       GrammarData.$fReadPiedPiping3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.PiedPiping>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.PiedPiping>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.PiedPiping>_R)
                      @ GrammarData.PiedPiping
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.PiedPiping))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion ::
    GHC.Read.Read GrammarData.QuestionInversion
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.QuestionInversion
                  GrammarData.$fReadQuestionInversion_$creadsPrec
                  GrammarData.$fReadQuestionInversion_$creadList
                  GrammarData.$fReadQuestionInversion_$creadPrec
                  GrammarData.$fReadQuestionInversion_$creadListPrec -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.QuestionInversion]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.QuestionInversion]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.QuestionInversion
                   GrammarData.$fReadQuestionInversion2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.QuestionInversion>_R))
                   @ b
                   eta1) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.QuestionInversion -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.QuestionInversion
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoQuesInv) -}
9526031aeaac30b0e9e386d47a787cdf
  $fReadQuestionInversion11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoQuesInv"#) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.QuestionInversion]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.QuestionInversion
                   GrammarData.$fReadQuestionInversion2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.QuestionInversion>_R))
                   @ [GrammarData.QuestionInversion]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.QuestionInversion])) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.QuestionInversion
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.QuestionInversion
                   GrammarData.$fReadQuestionInversion3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.QuestionInversion>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.QuestionInversion>_R)))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.QuestionInversion -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.QuestionInversion
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.QuestionInversion
                   GrammarData.$fReadQuestionInversion4
                   eta
                   @ b
                   eta1) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.QuestionInversion)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.QuestionInversion)
                   GrammarData.$fReadQuestionInversion9
                   GrammarData.$fReadQuestionInversion5) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.QuestionInversion)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.QuestionInversion)
                   GrammarData.$fReadQuestionInversion6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.QuestionInversion))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.QuestionInversion)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadQuestionInversion8,
                  GrammarData.$fReadQuestionInversion7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.QuestionInversion>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.QuestionInversion>_R))))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.QuestionInversion -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.QuestionInversion
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblQuesInv) -}
e8296ee877ee9ba0c66a50ad77bf16a8
  $fReadQuestionInversion8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblQuesInv"#) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.QuestionInversion)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadQuestionInversion11,
                  GrammarData.$fReadQuestionInversion10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.QuestionInversion>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.QuestionInversion>_R))))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.QuestionInversion]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.QuestionInversion]
                   GrammarData.$fReadQuestionInversion12) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GrammarData.QuestionInversion]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadQuestionInversion1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.QuestionInversion]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.QuestionInversion]>_R))) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      GrammarData.QuestionInversion
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadQuestionInversion2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.QuestionInversion>_R)) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fReadQuestionInversion_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.QuestionInversion
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.QuestionInversion
                       GrammarData.$fReadQuestionInversion3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.QuestionInversion>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.QuestionInversion>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.QuestionInversion>_R)
                      @ GrammarData.QuestionInversion
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.QuestionInversion))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial :: GHC.Read.Read GrammarData.SubjectInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.SubjectInitial
                  GrammarData.$fReadSubjectInitial_$creadsPrec
                  GrammarData.$fReadSubjectInitial_$creadList
                  GrammarData.$fReadSubjectInitial_$creadPrec
                  GrammarData.$fReadSubjectInitial_$creadListPrec -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.SubjectInitial] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.SubjectInitial]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.SubjectInitial
                   GrammarData.$fReadSubjectInitial2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.SubjectInitial>_R))
                   @ b
                   eta1) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.SubjectInitial -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.SubjectInitial
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.SubInitial) -}
77d48416862280f7eba3642b5e81247a
  $fReadSubjectInitial11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SubInitial"#) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.SubjectInitial]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.SubjectInitial
                   GrammarData.$fReadSubjectInitial2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.SubjectInitial>_R))
                   @ [GrammarData.SubjectInitial]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.SubjectInitial])) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.SubjectInitial
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.SubjectInitial
                   GrammarData.$fReadSubjectInitial3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.SubjectInitial>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.SubjectInitial>_R)))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.SubjectInitial -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.SubjectInitial
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.SubjectInitial
                   GrammarData.$fReadSubjectInitial4
                   eta
                   @ b
                   eta1) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.SubjectInitial)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.SubjectInitial)
                   GrammarData.$fReadSubjectInitial9
                   GrammarData.$fReadSubjectInitial5) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.SubjectInitial)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.SubjectInitial)
                   GrammarData.$fReadSubjectInitial6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.SubjectInitial))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.SubjectInitial)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadSubjectInitial8,
                  GrammarData.$fReadSubjectInitial7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.SubjectInitial>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.SubjectInitial>_R))))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.SubjectInitial -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.SubjectInitial
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.SubFinal) -}
6025c01e6e6f38ff3d6ab9a2194bf285
  $fReadSubjectInitial8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "SubFinal"#) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.SubjectInitial)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadSubjectInitial11,
                  GrammarData.$fReadSubjectInitial10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.SubjectInitial>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.SubjectInitial>_R))))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.SubjectInitial]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.SubjectInitial]
                   GrammarData.$fReadSubjectInitial12) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GrammarData.SubjectInitial]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadSubjectInitial1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.SubjectInitial]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.SubjectInitial]>_R))) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.SubjectInitial
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadSubjectInitial2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.SubjectInitial>_R)) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fReadSubjectInitial_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.SubjectInitial
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.SubjectInitial
                       GrammarData.$fReadSubjectInitial3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.SubjectInitial>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.SubjectInitial>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.SubjectInitial>_R)
                      @ GrammarData.SubjectInitial
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.SubjectInitial))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking :: GHC.Read.Read GrammarData.TopicMarking
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.TopicMarking
                  GrammarData.$fReadTopicMarking_$creadsPrec
                  GrammarData.$fReadTopicMarking_$creadList
                  GrammarData.$fReadTopicMarking_$creadPrec
                  GrammarData.$fReadTopicMarking_$creadListPrec -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.TopicMarking] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.TopicMarking]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.TopicMarking
                   GrammarData.$fReadTopicMarking2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.TopicMarking>_R))
                   @ b
                   eta1) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.TopicMarking -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.TopicMarking
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoTopMark) -}
e6198e1277f2bdecebc3a083b409b9bc
  $fReadTopicMarking11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoTopMark"#) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.TopicMarking]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.TopicMarking
                   GrammarData.$fReadTopicMarking2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.TopicMarking>_R))
                   @ [GrammarData.TopicMarking]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.TopicMarking])) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.TopicMarking
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.TopicMarking
                   GrammarData.$fReadTopicMarking3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.TopicMarking>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.TopicMarking>_R)))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.TopicMarking -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.TopicMarking
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.TopicMarking
                   GrammarData.$fReadTopicMarking4
                   eta
                   @ b
                   eta1) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)
                   GrammarData.$fReadTopicMarking9
                   GrammarData.$fReadTopicMarking5) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)
                   GrammarData.$fReadTopicMarking6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.TopicMarking))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadTopicMarking8,
                  GrammarData.$fReadTopicMarking7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.TopicMarking>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.TopicMarking>_R))))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.TopicMarking -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.TopicMarking
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblTopMark) -}
275c1dd830097d53e8f2d278e71f044e
  $fReadTopicMarking8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblTopMark"#) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadTopicMarking11,
                  GrammarData.$fReadTopicMarking10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.TopicMarking>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.TopicMarking>_R))))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.TopicMarking]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.TopicMarking]
                   GrammarData.$fReadTopicMarking12) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.TopicMarking]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadTopicMarking1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.TopicMarking]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.TopicMarking]>_R))) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.TopicMarking
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadTopicMarking2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.TopicMarking>_R)) -}
086be7089aedc4e5b861d78292d86bfc
  $fReadTopicMarking_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.TopicMarking
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.TopicMarking
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.TopicMarking
                       GrammarData.$fReadTopicMarking3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.TopicMarking>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.TopicMarking>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.TopicMarking>_R)
                      @ GrammarData.TopicMarking
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.TopicMarking))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement :: GHC.Read.Read GrammarData.VtoIMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.VtoIMovement
                  GrammarData.$fReadVtoIMovement_$creadsPrec
                  GrammarData.$fReadVtoIMovement_$creadList
                  GrammarData.$fReadVtoIMovement_$creadPrec
                  GrammarData.$fReadVtoIMovement_$creadListPrec -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.VtoIMovement] -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.VtoIMovement]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.VtoIMovement
                   GrammarData.$fReadVtoIMovement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.VtoIMovement>_R))
                   @ b
                   eta1) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.VtoIMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.VtoIMovement
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoVtoIMove) -}
a7f85a74ab75f1cc52bf873ba3966371
  $fReadVtoIMovement11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoVtoIMove"#) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.VtoIMovement]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.VtoIMovement
                   GrammarData.$fReadVtoIMovement2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.VtoIMovement>_R))
                   @ [GrammarData.VtoIMovement]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.VtoIMovement])) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP GrammarData.VtoIMovement
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.VtoIMovement
                   GrammarData.$fReadVtoIMovement3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.VtoIMovement>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.VtoIMovement>_R)))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.VtoIMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.VtoIMovement
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.VtoIMovement
                   GrammarData.$fReadVtoIMovement4
                   eta
                   @ b
                   eta1) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)
                   GrammarData.$fReadVtoIMovement9
                   GrammarData.$fReadVtoIMovement5) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)
                   GrammarData.$fReadVtoIMovement6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.VtoIMovement))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadVtoIMovement8,
                  GrammarData.$fReadVtoIMovement7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.VtoIMovement>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.VtoIMovement>_R))))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.VtoIMovement -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.VtoIMovement
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblVtoIMove) -}
6958a8a8044bcb65c7586ad54ba4e8ba
  $fReadVtoIMovement8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblVtoIMove"#) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadVtoIMovement11,
                  GrammarData.$fReadVtoIMovement10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.VtoIMovement>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.VtoIMovement>_R))))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement_$creadList ::
    Text.ParserCombinators.ReadP.ReadS [GrammarData.VtoIMovement]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.VtoIMovement]
                   GrammarData.$fReadVtoIMovement12) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec [GrammarData.VtoIMovement]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadVtoIMovement1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.VtoIMovement]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.VtoIMovement]>_R))) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec GrammarData.VtoIMovement
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadVtoIMovement2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.VtoIMovement>_R)) -}
b89383b8c859aafdd38937312f593ec7
  $fReadVtoIMovement_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.VtoIMovement
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.VtoIMovement
                       GrammarData.$fReadVtoIMovement3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.VtoIMovement>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.VtoIMovement>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.VtoIMovement>_R)
                      @ GrammarData.VtoIMovement
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.VtoIMovement))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory ::
    GHC.Read.Read GrammarData.WHMovementObligatory
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.WHMovementObligatory
                  GrammarData.$fReadWHMovementObligatory_$creadsPrec
                  GrammarData.$fReadWHMovementObligatory_$creadList
                  GrammarData.$fReadWHMovementObligatory_$creadPrec
                  GrammarData.$fReadWHMovementObligatory_$creadListPrec -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory1 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       ([GrammarData.WHMovementObligatory]
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: [GrammarData.WHMovementObligatory]
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.$wlist
                   @ GrammarData.WHMovementObligatory
                   GrammarData.$fReadWHMovementObligatory2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.WHMovementObligatory>_R))
                   @ b
                   eta1) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory10 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.WHMovementObligatory
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.WHMovementObligatory
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.NoWHMove) -}
b7de20aa17a130ca904191b084e155d1
  $fReadWHMovementObligatory11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "NoWHMove"#) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory12 ::
    Text.ParserCombinators.ReadP.P [GrammarData.WHMovementObligatory]
  {- Unfolding: (GHC.Read.$wlist
                   @ GrammarData.WHMovementObligatory
                   GrammarData.$fReadWHMovementObligatory2
                     `cast`
                   (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                             <GrammarData.WHMovementObligatory>_R))
                   @ [GrammarData.WHMovementObligatory]
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                      @ [GrammarData.WHMovementObligatory])) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory2 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> Text.ParserCombinators.ReadP.ReadP
         GrammarData.WHMovementObligatory
  {- Arity: 1,
     Unfolding: (GHC.Read.$fReadDouble10
                   @ GrammarData.WHMovementObligatory
                   GrammarData.$fReadWHMovementObligatory3
                     `cast`
                   (Trans
                        (<Text.ParserCombinators.ReadPrec.Prec>_R
                         ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                       <GrammarData.WHMovementObligatory>_R))
                        (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                  <GrammarData.WHMovementObligatory>_R)))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory3 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.WHMovementObligatory
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta1 :: GrammarData.WHMovementObligatory
                            -> Text.ParserCombinators.ReadP.P b) ->
                 GHC.Read.choose2
                   @ GrammarData.WHMovementObligatory
                   GrammarData.$fReadWHMovementObligatory4
                   eta
                   @ b
                   eta1) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory4 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.WHMovementObligatory)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.WHMovementObligatory)
                   GrammarData.$fReadWHMovementObligatory9
                   GrammarData.$fReadWHMovementObligatory5) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory5 ::
    [(GHC.Base.String,
      Text.ParserCombinators.ReadPrec.ReadPrec
        GrammarData.WHMovementObligatory)]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      Text.ParserCombinators.ReadPrec.ReadPrec
                        GrammarData.WHMovementObligatory)
                   GrammarData.$fReadWHMovementObligatory6
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         Text.ParserCombinators.ReadPrec.ReadPrec
                           GrammarData.WHMovementObligatory))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory6 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.WHMovementObligatory)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadWHMovementObligatory8,
                  GrammarData.$fReadWHMovementObligatory7
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.WHMovementObligatory>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.WHMovementObligatory>_R))))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory7 ::
    Text.ParserCombinators.ReadPrec.Prec
    -> forall b.
       (GrammarData.WHMovementObligatory
        -> Text.ParserCombinators.ReadP.P b)
       -> Text.ParserCombinators.ReadP.P b
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ (ds :: Text.ParserCombinators.ReadPrec.Prec)
                   @ b
                   (eta :: GrammarData.WHMovementObligatory
                           -> Text.ParserCombinators.ReadP.P b) ->
                 eta GrammarData.OblWHMove) -}
fd517fc99402a8a2408dd125a54d889f
  $fReadWHMovementObligatory8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "OblWHMove"#) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory9 ::
    ([GHC.Types.Char],
     Text.ParserCombinators.ReadPrec.ReadPrec
       GrammarData.WHMovementObligatory)
  {- Strictness: m,
     Unfolding: ((GrammarData.$fReadWHMovementObligatory11,
                  GrammarData.$fReadWHMovementObligatory10
                    `cast`
                  (Trans
                       (<Text.ParserCombinators.ReadPrec.Prec>_R
                        ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                      <GrammarData.WHMovementObligatory>_R))
                       (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                 <GrammarData.WHMovementObligatory>_R))))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory_$creadList ::
    Text.ParserCombinators.ReadP.ReadS
      [GrammarData.WHMovementObligatory]
  {- Arity: 1,
     Unfolding: (Text.ParserCombinators.ReadP.run
                   @ [GrammarData.WHMovementObligatory]
                   GrammarData.$fReadWHMovementObligatory12) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory_$creadListPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      [GrammarData.WHMovementObligatory]
  {- Arity: 2, Strictness: <L,A><L,C(U)>,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadWHMovementObligatory1
                  `cast`
                (Trans
                     (<Text.ParserCombinators.ReadPrec.Prec>_R
                      ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                    <[GrammarData.WHMovementObligatory]>_R))
                     (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                               <[GrammarData.WHMovementObligatory]>_R))) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory_$creadPrec ::
    Text.ParserCombinators.ReadPrec.ReadPrec
      GrammarData.WHMovementObligatory
  {- Arity: 1,
     Unfolding: InlineRule (0, True, True)
                GrammarData.$fReadWHMovementObligatory2
                  `cast`
                (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                          <GrammarData.WHMovementObligatory>_R)) -}
179d51382e990d4d51977edd0072efb7
  $fReadWHMovementObligatory_$creadsPrec ::
    GHC.Types.Int
    -> Text.ParserCombinators.ReadP.ReadS
         GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: GHC.Types.Int) ->
                 Text.ParserCombinators.ReadP.run
                   @ GrammarData.WHMovementObligatory
                   ((GHC.Read.$fReadDouble10
                       @ GrammarData.WHMovementObligatory
                       GrammarData.$fReadWHMovementObligatory3
                         `cast`
                       (Trans
                            (<Text.ParserCombinators.ReadPrec.Prec>_R
                             ->_R Sym (Text.ParserCombinators.ReadP.N:ReadP[0]
                                           <GrammarData.WHMovementObligatory>_R))
                            (Sym (Text.ParserCombinators.ReadPrec.N:ReadPrec[0]
                                      <GrammarData.WHMovementObligatory>_R)))
                       eta)
                      `cast`
                    (Text.ParserCombinators.ReadP.N:ReadP[0]
                         <GrammarData.WHMovementObligatory>_R)
                      @ GrammarData.WHMovementObligatory
                      (Text.ParserCombinators.ReadP.$fApplicativeP_$cpure
                         @ GrammarData.WHMovementObligatory))) -}
1b7f4a36baf794187a01f705f3af35bc
  $fShowAffixHopping :: GHC.Show.Show GrammarData.AffixHopping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.AffixHopping
                  GrammarData.$fShowAffixHopping_$cshowsPrec
                  GrammarData.$fShowAffixHopping_$cshow
                  GrammarData.$fShowAffixHopping_$cshowList -}
1b7f4a36baf794187a01f705f3af35bc
  $fShowAffixHopping1 :: GrammarData.AffixHopping -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.AffixHopping) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoAffixHop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadAffixHopping11)
                        eta
                   GrammarData.OblAffixHop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadAffixHopping8)
                        eta }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fShowAffixHopping_$cshow ::
    GrammarData.AffixHopping -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.AffixHopping) ->
                 case x of wild {
                   GrammarData.NoAffixHop -> GrammarData.$fReadAffixHopping11
                   GrammarData.OblAffixHop -> GrammarData.$fReadAffixHopping8 }) -}
1b7f4a36baf794187a01f705f3af35bc
  $fShowAffixHopping_$cshowList ::
    [GrammarData.AffixHopping] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.AffixHopping
                   GrammarData.$fShowAffixHopping1) -}
1b7f4a36baf794187a01f705f3af35bc
  $fShowAffixHopping_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.AffixHopping -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.AffixHopping)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoAffixHop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadAffixHopping11)
                        eta
                   GrammarData.OblAffixHop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadAffixHopping8)
                        eta }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowBar :: GHC.Show.Show GrammarData.Bar
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Bar
                  GrammarData.$fShowBar_$cshowsPrec
                  GrammarData.$fShowBar_$cshow
                  GrammarData.$fShowBar_$cshowList -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowBar1 :: GrammarData.Bar -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: GrammarData.Bar) ->
                 GrammarData.$w$cshowsPrec 0# w) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowBar_$cshow :: GrammarData.Bar -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.Bar) ->
                 GrammarData.$fShowBar_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowBar_$cshowList :: [GrammarData.Bar] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.Bar
                   GrammarData.$fShowBar1) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowBar_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.Bar -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GrammarData.Bar) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$cshowsPrec ww1 w1 }) -}
2be002b59c64ba138a144cb19c908678
  $fShowComplementizerInitial ::
    GHC.Show.Show GrammarData.ComplementizerInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ComplementizerInitial
                  GrammarData.$fShowComplementizerInitial_$cshowsPrec
                  GrammarData.$fShowComplementizerInitial_$cshow
                  GrammarData.$fShowComplementizerInitial_$cshowList -}
2be002b59c64ba138a144cb19c908678
  $fShowComplementizerInitial1 ::
    GrammarData.ComplementizerInitial -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ComplementizerInitial)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.CompInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadComplementizerInitial11)
                        eta
                   GrammarData.CompFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadComplementizerInitial8)
                        eta }) -}
2be002b59c64ba138a144cb19c908678
  $fShowComplementizerInitial_$cshow ::
    GrammarData.ComplementizerInitial -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.ComplementizerInitial) ->
                 case x of wild {
                   GrammarData.CompInitial
                   -> GrammarData.$fReadComplementizerInitial11
                   GrammarData.CompFinal
                   -> GrammarData.$fReadComplementizerInitial8 }) -}
2be002b59c64ba138a144cb19c908678
  $fShowComplementizerInitial_$cshowList ::
    [GrammarData.ComplementizerInitial] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.ComplementizerInitial
                   GrammarData.$fShowComplementizerInitial1) -}
2be002b59c64ba138a144cb19c908678
  $fShowComplementizerInitial_$cshowsPrec ::
    GHC.Types.Int
    -> GrammarData.ComplementizerInitial -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.ComplementizerInitial)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.CompInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadComplementizerInitial11)
                        eta
                   GrammarData.CompFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadComplementizerInitial8)
                        eta }) -}
3c8e9da2521354a7dedc4e101001aa77
  $fShowGrammar :: GHC.Show.Show GrammarData.Grammar
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Grammar
                  GrammarData.$fShowGrammar_$cshowsPrec
                  GrammarData.$fShowGrammar_$cshow
                  GrammarData.$fShowGrammar_$cshowList -}
3c8e9da2521354a7dedc4e101001aa77
  $fShowGrammar1 :: GrammarData.Grammar -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (\ (w :: GrammarData.Grammar) (w1 :: GHC.Base.String) ->
                 case w of ww { GrammarData.Grammar ww1 ww2 ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ->
                 GrammarData.$w$cshowsPrec1
                   0#
                   ww1
                   ww2
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   w1 }) -}
3c8e9da2521354a7dedc4e101001aa77
  $fShowGrammar_$cshow :: GrammarData.Grammar -> GHC.Base.String
  {- Arity: 1,
     Strictness: <S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.Grammar) ->
                 GrammarData.$fShowGrammar_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
3c8e9da2521354a7dedc4e101001aa77
  $fShowGrammar_$cshowList :: [GrammarData.Grammar] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.Grammar
                   GrammarData.$fShowGrammar1) -}
3c8e9da2521354a7dedc4e101001aa77
  $fShowGrammar_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.Grammar -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <S(S),1*U(U)><S,1*U(1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U,1*U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GrammarData.Grammar)
                   (w2 :: GHC.Base.String) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { GrammarData.Grammar ww3 ww4 ww5 ww6 ww7 ww8 ww9 ww10 ww11 ww12 ww13 ww14 ww15 ->
                 GrammarData.$w$cshowsPrec1
                   ww1
                   ww3
                   ww4
                   ww5
                   ww6
                   ww7
                   ww8
                   ww9
                   ww10
                   ww11
                   ww12
                   ww13
                   ww14
                   ww15
                   w2 } }) -}
4c6bb1f31e4c8548c057d21577834136
  $fShowIlloc :: GHC.Show.Show GrammarData.Illoc
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Illoc
                  GrammarData.$fShowIlloc_$cshowsPrec
                  GrammarData.$fShowIlloc_$cshow
                  GrammarData.$fShowIlloc_$cshowList -}
0f16a968b2f9bbe4839ddccb4f23a93a
  $fShowIlloc1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Imper"#) -}
df5f448b4a0350e97101b18f1debfe33
  $fShowIlloc2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Decl"#) -}
f001465ba7e66dd25dee7ed4918a4add
  $fShowIlloc3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Ques"#) -}
2340ad910b6a2bcc152c528dcec1b580
  $fShowIlloc4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Null"#) -}
4c6bb1f31e4c8548c057d21577834136
  $fShowIlloc_$cshow :: GrammarData.Illoc -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.Illoc) ->
                 GrammarData.$fShowIlloc_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
4c6bb1f31e4c8548c057d21577834136
  $fShowIlloc_$cshowList :: [GrammarData.Illoc] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.Illoc
                   GrammarData.$w$cshowsPrec2) -}
4c6bb1f31e4c8548c057d21577834136
  $fShowIlloc_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.Illoc -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ (w :: GHC.Types.Int)
                   (w1 :: GrammarData.Illoc)
                   (w2 :: GHC.Base.String) ->
                 GrammarData.$w$cshowsPrec2 w1 w2) -}
29901a1223a3a84f8195c61990d5cb58
  $fShowItoCMovement :: GHC.Show.Show GrammarData.ItoCMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ItoCMovement
                  GrammarData.$fShowItoCMovement_$cshowsPrec
                  GrammarData.$fShowItoCMovement_$cshow
                  GrammarData.$fShowItoCMovement_$cshowList -}
29901a1223a3a84f8195c61990d5cb58
  $fShowItoCMovement1 :: GrammarData.ItoCMovement -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ItoCMovement) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoItoCMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadItoCMovement11)
                        eta
                   GrammarData.OblItoCMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadItoCMovement8)
                        eta }) -}
29901a1223a3a84f8195c61990d5cb58
  $fShowItoCMovement_$cshow ::
    GrammarData.ItoCMovement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.ItoCMovement) ->
                 case x of wild {
                   GrammarData.NoItoCMove -> GrammarData.$fReadItoCMovement11
                   GrammarData.OblItoCMove -> GrammarData.$fReadItoCMovement8 }) -}
29901a1223a3a84f8195c61990d5cb58
  $fShowItoCMovement_$cshowList ::
    [GrammarData.ItoCMovement] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.ItoCMovement
                   GrammarData.$fShowItoCMovement1) -}
29901a1223a3a84f8195c61990d5cb58
  $fShowItoCMovement_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.ItoCMovement -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.ItoCMovement)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoItoCMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadItoCMovement11)
                        eta
                   GrammarData.OblItoCMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadItoCMovement8)
                        eta }) -}
d02c228465e5d932d54760d6cee46df5
  $fShowLeaf :: GHC.Show.Show GrammarData.Leaf
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Leaf
                  GrammarData.$fShowLeaf_$cshowsPrec
                  GrammarData.$fShowLeaf_$cshow
                  GrammarData.$fShowLeaf_$cshowList -}
d02c228465e5d932d54760d6cee46df5
  $fShowLeaf1 :: GrammarData.Leaf -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: GrammarData.Leaf) ->
                 GrammarData.$w$cshowsPrec3 0# w) -}
d02c228465e5d932d54760d6cee46df5
  $fShowLeaf_$cshow :: GrammarData.Leaf -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.Leaf) ->
                 GrammarData.$fShowLeaf_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
d02c228465e5d932d54760d6cee46df5
  $fShowLeaf_$cshowList :: [GrammarData.Leaf] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.Leaf
                   GrammarData.$fShowLeaf1) -}
d02c228465e5d932d54760d6cee46df5
  $fShowLeaf_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.Leaf -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: GrammarData.Leaf) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 GrammarData.$w$cshowsPrec3 ww1 w1 }) -}
4123d9519741817da4543047c2f6b1c7
  $fShowNullSubject :: GHC.Show.Show GrammarData.NullSubject
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullSubject
                  GrammarData.$fShowNullSubject_$cshowsPrec
                  GrammarData.$fShowNullSubject_$cshow
                  GrammarData.$fShowNullSubject_$cshowList -}
4123d9519741817da4543047c2f6b1c7
  $fShowNullSubject1 :: GrammarData.NullSubject -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.NullSubject) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoNullSub
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullSubject11)
                        eta
                   GrammarData.OptNullSub
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullSubject8)
                        eta }) -}
4123d9519741817da4543047c2f6b1c7
  $fShowNullSubject_$cshow ::
    GrammarData.NullSubject -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.NullSubject) ->
                 case x of wild {
                   GrammarData.NoNullSub -> GrammarData.$fReadNullSubject11
                   GrammarData.OptNullSub -> GrammarData.$fReadNullSubject8 }) -}
4123d9519741817da4543047c2f6b1c7
  $fShowNullSubject_$cshowList ::
    [GrammarData.NullSubject] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.NullSubject
                   GrammarData.$fShowNullSubject1) -}
4123d9519741817da4543047c2f6b1c7
  $fShowNullSubject_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.NullSubject -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.NullSubject)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoNullSub
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullSubject11)
                        eta
                   GrammarData.OptNullSub
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullSubject8)
                        eta }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fShowNullTopic :: GHC.Show.Show GrammarData.NullTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.NullTopic
                  GrammarData.$fShowNullTopic_$cshowsPrec
                  GrammarData.$fShowNullTopic_$cshow
                  GrammarData.$fShowNullTopic_$cshowList -}
1c46b92f8b870c141981ad765cca1f9c
  $fShowNullTopic1 :: GrammarData.NullTopic -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.NullTopic) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoNullTop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullTopic11)
                        eta
                   GrammarData.OptNullTop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullTopic8)
                        eta }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fShowNullTopic_$cshow :: GrammarData.NullTopic -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.NullTopic) ->
                 case x of wild {
                   GrammarData.NoNullTop -> GrammarData.$fReadNullTopic11
                   GrammarData.OptNullTop -> GrammarData.$fReadNullTopic8 }) -}
1c46b92f8b870c141981ad765cca1f9c
  $fShowNullTopic_$cshowList ::
    [GrammarData.NullTopic] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.NullTopic
                   GrammarData.$fShowNullTopic1) -}
1c46b92f8b870c141981ad765cca1f9c
  $fShowNullTopic_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.NullTopic -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.NullTopic)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoNullTop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullTopic11)
                        eta
                   GrammarData.OptNullTop
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadNullTopic8)
                        eta }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fShowObjectFinal :: GHC.Show.Show GrammarData.ObjectFinal
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObjectFinal
                  GrammarData.$fShowObjectFinal_$cshowsPrec
                  GrammarData.$fShowObjectFinal_$cshow
                  GrammarData.$fShowObjectFinal_$cshowList -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fShowObjectFinal1 :: GrammarData.ObjectFinal -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ObjectFinal) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.ObjFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObjectFinal11)
                        eta
                   GrammarData.ObjInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObjectFinal8)
                        eta }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fShowObjectFinal_$cshow ::
    GrammarData.ObjectFinal -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.ObjectFinal) ->
                 case x of wild {
                   GrammarData.ObjFinal -> GrammarData.$fReadObjectFinal11
                   GrammarData.ObjInitial -> GrammarData.$fReadObjectFinal8 }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fShowObjectFinal_$cshowList ::
    [GrammarData.ObjectFinal] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.ObjectFinal
                   GrammarData.$fShowObjectFinal1) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $fShowObjectFinal_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.ObjectFinal -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.ObjectFinal)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.ObjFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObjectFinal11)
                        eta
                   GrammarData.ObjInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObjectFinal8)
                        eta }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fShowObligatoryTopic :: GHC.Show.Show GrammarData.ObligatoryTopic
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.ObligatoryTopic
                  GrammarData.$fShowObligatoryTopic_$cshowsPrec
                  GrammarData.$fShowObligatoryTopic_$cshow
                  GrammarData.$fShowObligatoryTopic_$cshowList -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fShowObligatoryTopic1 ::
    GrammarData.ObligatoryTopic -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.ObligatoryTopic) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.OblTopic
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObligatoryTopic11)
                        eta
                   GrammarData.OptTopic
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObligatoryTopic8)
                        eta }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fShowObligatoryTopic_$cshow ::
    GrammarData.ObligatoryTopic -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.ObligatoryTopic) ->
                 case x of wild {
                   GrammarData.OblTopic -> GrammarData.$fReadObligatoryTopic11
                   GrammarData.OptTopic -> GrammarData.$fReadObligatoryTopic8 }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fShowObligatoryTopic_$cshowList ::
    [GrammarData.ObligatoryTopic] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.ObligatoryTopic
                   GrammarData.$fShowObligatoryTopic1) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $fShowObligatoryTopic_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.ObligatoryTopic -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.ObligatoryTopic)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.OblTopic
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObligatoryTopic11)
                        eta
                   GrammarData.OptTopic
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadObligatoryTopic8)
                        eta }) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowPhrase :: GHC.Show.Show GrammarData.Phrase
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.Phrase
                  GrammarData.$fShowPhrase_$cshowsPrec
                  GrammarData.$fShowPhrase_$cshow
                  GrammarData.$fShowPhrase_$cshowList -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowPhrase1 :: GrammarData.Phrase -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (GrammarData.$fShowPhrase_$cshowsPrec
                   GrammarData.$fShowPhrase2) -}
4cf9ad0d422132db37049cfdf0a46061
  $fShowPhrase2 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0#) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowPhrase_$cshow :: GrammarData.Phrase -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.Phrase) ->
                 GrammarData.$fShowPhrase_$cshowsPrec
                   GHC.Show.shows22
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowPhrase_$cshowList :: [GrammarData.Phrase] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.Phrase
                   GrammarData.$fShowPhrase1) -}
5457edd1d7ee60c90ee0765c209760ae
  $fShowPhrase_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.Phrase -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <L,1*U(U)><S,1*U> -}
7a0991a800e7b21d81a780394c5b6f02
  $fShowPiedPiping :: GHC.Show.Show GrammarData.PiedPiping
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.PiedPiping
                  GrammarData.$fShowPiedPiping_$cshowsPrec
                  GrammarData.$fShowPiedPiping_$cshow
                  GrammarData.$fShowPiedPiping_$cshowList -}
7a0991a800e7b21d81a780394c5b6f02
  $fShowPiedPiping1 :: GrammarData.PiedPiping -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.PiedPiping) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.PiedPipe
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadPiedPiping11)
                        eta
                   GrammarData.PrepStrand
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadPiedPiping8)
                        eta }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fShowPiedPiping_$cshow ::
    GrammarData.PiedPiping -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.PiedPiping) ->
                 case x of wild {
                   GrammarData.PiedPipe -> GrammarData.$fReadPiedPiping11
                   GrammarData.PrepStrand -> GrammarData.$fReadPiedPiping8 }) -}
7a0991a800e7b21d81a780394c5b6f02
  $fShowPiedPiping_$cshowList ::
    [GrammarData.PiedPiping] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.PiedPiping
                   GrammarData.$fShowPiedPiping1) -}
7a0991a800e7b21d81a780394c5b6f02
  $fShowPiedPiping_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.PiedPiping -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.PiedPiping)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.PiedPipe
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadPiedPiping11)
                        eta
                   GrammarData.PrepStrand
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadPiedPiping8)
                        eta }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fShowQuestionInversion ::
    GHC.Show.Show GrammarData.QuestionInversion
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.QuestionInversion
                  GrammarData.$fShowQuestionInversion_$cshowsPrec
                  GrammarData.$fShowQuestionInversion_$cshow
                  GrammarData.$fShowQuestionInversion_$cshowList -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fShowQuestionInversion1 ::
    GrammarData.QuestionInversion -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.QuestionInversion)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoQuesInv
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadQuestionInversion11)
                        eta
                   GrammarData.OblQuesInv
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadQuestionInversion8)
                        eta }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fShowQuestionInversion_$cshow ::
    GrammarData.QuestionInversion -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.QuestionInversion) ->
                 case x of wild {
                   GrammarData.NoQuesInv -> GrammarData.$fReadQuestionInversion11
                   GrammarData.OblQuesInv
                   -> GrammarData.$fReadQuestionInversion8 }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fShowQuestionInversion_$cshowList ::
    [GrammarData.QuestionInversion] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.QuestionInversion
                   GrammarData.$fShowQuestionInversion1) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $fShowQuestionInversion_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.QuestionInversion -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.QuestionInversion)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoQuesInv
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadQuestionInversion11)
                        eta
                   GrammarData.OblQuesInv
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadQuestionInversion8)
                        eta }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fShowSubjectInitial :: GHC.Show.Show GrammarData.SubjectInitial
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.SubjectInitial
                  GrammarData.$fShowSubjectInitial_$cshowsPrec
                  GrammarData.$fShowSubjectInitial_$cshow
                  GrammarData.$fShowSubjectInitial_$cshowList -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fShowSubjectInitial1 ::
    GrammarData.SubjectInitial -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.SubjectInitial) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.SubInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadSubjectInitial11)
                        eta
                   GrammarData.SubFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadSubjectInitial8)
                        eta }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fShowSubjectInitial_$cshow ::
    GrammarData.SubjectInitial -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.SubjectInitial) ->
                 case x of wild {
                   GrammarData.SubInitial -> GrammarData.$fReadSubjectInitial11
                   GrammarData.SubFinal -> GrammarData.$fReadSubjectInitial8 }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fShowSubjectInitial_$cshowList ::
    [GrammarData.SubjectInitial] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.SubjectInitial
                   GrammarData.$fShowSubjectInitial1) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $fShowSubjectInitial_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.SubjectInitial -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.SubjectInitial)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.SubInitial
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadSubjectInitial11)
                        eta
                   GrammarData.SubFinal
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadSubjectInitial8)
                        eta }) -}
086be7089aedc4e5b861d78292d86bfc
  $fShowTopicMarking :: GHC.Show.Show GrammarData.TopicMarking
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.TopicMarking
                  GrammarData.$fShowTopicMarking_$cshowsPrec
                  GrammarData.$fShowTopicMarking_$cshow
                  GrammarData.$fShowTopicMarking_$cshowList -}
086be7089aedc4e5b861d78292d86bfc
  $fShowTopicMarking1 :: GrammarData.TopicMarking -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.TopicMarking) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoTopMark
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadTopicMarking11)
                        eta
                   GrammarData.OblTopMark
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadTopicMarking8)
                        eta }) -}
086be7089aedc4e5b861d78292d86bfc
  $fShowTopicMarking_$cshow ::
    GrammarData.TopicMarking -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.TopicMarking) ->
                 case x of wild {
                   GrammarData.NoTopMark -> GrammarData.$fReadTopicMarking11
                   GrammarData.OblTopMark -> GrammarData.$fReadTopicMarking8 }) -}
086be7089aedc4e5b861d78292d86bfc
  $fShowTopicMarking_$cshowList ::
    [GrammarData.TopicMarking] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.TopicMarking
                   GrammarData.$fShowTopicMarking1) -}
086be7089aedc4e5b861d78292d86bfc
  $fShowTopicMarking_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.TopicMarking -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.TopicMarking)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoTopMark
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadTopicMarking11)
                        eta
                   GrammarData.OblTopMark
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadTopicMarking8)
                        eta }) -}
b89383b8c859aafdd38937312f593ec7
  $fShowVtoIMovement :: GHC.Show.Show GrammarData.VtoIMovement
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.VtoIMovement
                  GrammarData.$fShowVtoIMovement_$cshowsPrec
                  GrammarData.$fShowVtoIMovement_$cshow
                  GrammarData.$fShowVtoIMovement_$cshowList -}
b89383b8c859aafdd38937312f593ec7
  $fShowVtoIMovement1 :: GrammarData.VtoIMovement -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.VtoIMovement) (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoVtoIMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadVtoIMovement11)
                        eta
                   GrammarData.OblVtoIMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadVtoIMovement8)
                        eta }) -}
b89383b8c859aafdd38937312f593ec7
  $fShowVtoIMovement_$cshow ::
    GrammarData.VtoIMovement -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.VtoIMovement) ->
                 case x of wild {
                   GrammarData.NoVtoIMove -> GrammarData.$fReadVtoIMovement11
                   GrammarData.OblVtoIMove -> GrammarData.$fReadVtoIMovement8 }) -}
b89383b8c859aafdd38937312f593ec7
  $fShowVtoIMovement_$cshowList ::
    [GrammarData.VtoIMovement] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.VtoIMovement
                   GrammarData.$fShowVtoIMovement1) -}
b89383b8c859aafdd38937312f593ec7
  $fShowVtoIMovement_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.VtoIMovement -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.VtoIMovement)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoVtoIMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadVtoIMovement11)
                        eta
                   GrammarData.OblVtoIMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadVtoIMovement8)
                        eta }) -}
179d51382e990d4d51977edd0072efb7
  $fShowWHMovementObligatory ::
    GHC.Show.Show GrammarData.WHMovementObligatory
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ GrammarData.WHMovementObligatory
                  GrammarData.$fShowWHMovementObligatory_$cshowsPrec
                  GrammarData.$fShowWHMovementObligatory_$cshow
                  GrammarData.$fShowWHMovementObligatory_$cshowList -}
179d51382e990d4d51977edd0072efb7
  $fShowWHMovementObligatory1 ::
    GrammarData.WHMovementObligatory -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U><L,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: GrammarData.WHMovementObligatory)
                   (eta :: GHC.Base.String) ->
                 case ds of wild {
                   GrammarData.NoWHMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadWHMovementObligatory11)
                        eta
                   GrammarData.OblWHMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadWHMovementObligatory8)
                        eta }) -}
179d51382e990d4d51977edd0072efb7
  $fShowWHMovementObligatory_$cshow ::
    GrammarData.WHMovementObligatory -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (x :: GrammarData.WHMovementObligatory) ->
                 case x of wild {
                   GrammarData.NoWHMove -> GrammarData.$fReadWHMovementObligatory11
                   GrammarData.OblWHMove
                   -> GrammarData.$fReadWHMovementObligatory8 }) -}
179d51382e990d4d51977edd0072efb7
  $fShowWHMovementObligatory_$cshowList ::
    [GrammarData.WHMovementObligatory] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ GrammarData.WHMovementObligatory
                   GrammarData.$fShowWHMovementObligatory1) -}
179d51382e990d4d51977edd0072efb7
  $fShowWHMovementObligatory_$cshowsPrec ::
    GHC.Types.Int -> GrammarData.WHMovementObligatory -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,A><S,1*U><L,1*U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: GHC.Types.Int)
                   (ds1 :: GrammarData.WHMovementObligatory)
                   (eta :: GHC.Base.String) ->
                 case ds1 of wild {
                   GrammarData.NoWHMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadWHMovementObligatory11)
                        eta
                   GrammarData.OblWHMove
                   -> GHC.Base.augment
                        @ GHC.Types.Char
                        (\ @ b
                           (c1 :: GHC.Types.Char -> b -> b)[OneShot]
                           (n :: b)[OneShot] ->
                         GHC.Base.foldr
                           @ GHC.Types.Char
                           @ b
                           c1
                           n
                           GrammarData.$fReadWHMovementObligatory8)
                        eta }) -}
0941f035dacfc28b95d6d8db5209c643
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress ::
    GHC.Classes.Eq (InflectionData.Express InflectionData.Mood)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (InflectionData.Express InflectionData.Mood)
                  GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==10
                  (InflectionData.$fEqExpress_$c/=
                     @ InflectionData.Mood
                     InflectionData.$fEqMood) -}
7dfcf478ae666994090ed69a5381d659
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress1 ::
    GHC.Classes.Eq (InflectionData.Express InflectionData.Tense)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (InflectionData.Express InflectionData.Tense)
                  GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==1
                  (InflectionData.$fEqExpress_$c/=
                     @ InflectionData.Tense
                     InflectionData.$fEqTense) -}
c9522dd94aada5077050f6e494c4895d
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress2 ::
    GHC.Classes.Eq (InflectionData.Express InflectionData.Case)
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (InflectionData.Express InflectionData.Case)
                  GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==2
                  (InflectionData.$fEqExpress_$c/=
                     @ InflectionData.Case
                     InflectionData.$fEqCase) -}
d859b8c6abd9e24cfa6ce5cba330f43a
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==1 ::
    InflectionData.Express InflectionData.Tense
    -> InflectionData.Express InflectionData.Tense -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: InflectionData.Express InflectionData.Tense)
                   (ds1 :: InflectionData.Express InflectionData.Tense) ->
                 case ds of wild {
                   InflectionData.NoExpress
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.True
                        InflectionData.Express ipv -> GHC.Types.False }
                   InflectionData.Express a1
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.False
                        InflectionData.Express b1
                        -> InflectionData.$fEqTense_$c== a1 b1 } }) -}
f71c89468a90981f7dabd36f310038a4
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==10 ::
    InflectionData.Express InflectionData.Mood
    -> InflectionData.Express InflectionData.Mood -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: InflectionData.Express InflectionData.Mood)
                   (ds1 :: InflectionData.Express InflectionData.Mood) ->
                 case ds of wild {
                   InflectionData.NoExpress
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.True
                        InflectionData.Express ipv -> GHC.Types.False }
                   InflectionData.Express a1
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.False
                        InflectionData.Express b1
                        -> InflectionData.$fEqMood_$c== a1 b1 } }) -}
abaed4fc8f816c2ee445c63b302817a8
  $s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==2 ::
    InflectionData.Express InflectionData.Case
    -> InflectionData.Express InflectionData.Case -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ (ds :: InflectionData.Express InflectionData.Case)
                   (ds1 :: InflectionData.Express InflectionData.Case) ->
                 case ds of wild {
                   InflectionData.NoExpress
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.True
                        InflectionData.Express ipv -> GHC.Types.False }
                   InflectionData.Express a1
                   -> case ds1 of wild1 {
                        InflectionData.NoExpress -> GHC.Types.False
                        InflectionData.Express b1
                        -> InflectionData.$fEqCase_$c== a1 b1 } }) -}
89447edb6bf22692d3aae585b3334d27
  $tc'CompFinal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1098637397630151128##
                   4992737488988518104##
                   GrammarData.$trModule
                   GrammarData.$tc'CompFinal1) -}
7962e89f6f5b12a119bd1bef66b0740b
  $tc'CompFinal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CompFinal"#) -}
403560b4eb4577ce5bc80f5c4c09bfc7
  $tc'CompInitial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13555711827724750390##
                   1627024105084034812##
                   GrammarData.$trModule
                   GrammarData.$tc'CompInitial1) -}
6f98ceeaeee6e6f7bd67cb42e3f9b62f
  $tc'CompInitial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'CompInitial"#) -}
161ea94db2dcb3367e39f1ee1eea379a
  $tc'Decl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8711846526406407971##
                   6354584220278522401##
                   GrammarData.$trModule
                   GrammarData.$tc'Decl1) -}
f3ab86f07a96348563b1e85efc7f7455
  $tc'Decl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Decl"#) -}
63f637c156302a8f626ac486ee2e13e0
  $tc'Grammar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14985563539032719508##
                   16212941766143937253##
                   GrammarData.$trModule
                   GrammarData.$tc'Grammar1) -}
d67f876e6e23825b3f9a2c15bda81663
  $tc'Grammar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Grammar"#) -}
950463a72492b5c67cc72f6ffd67555f
  $tc'Imper :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   859404426572657721##
                   15561305055338980001##
                   GrammarData.$trModule
                   GrammarData.$tc'Imper1) -}
96fc439e502d0954efc4524bc2f6e696
  $tc'Imper1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Imper"#) -}
f44843e506d7af521745ac0a70f730df
  $tc'Leaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7870820586717044701##
                   2324051130167230349##
                   GrammarData.$trModule
                   GrammarData.$tc'Leaf1) -}
7656349567c6a793a8ef4b07b22f3988
  $tc'Leaf1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Leaf"#) -}
3e79bb63f88def5e87b3af471f52d002
  $tc'LeafInfl :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9766333351981234282##
                   10586029122189273487##
                   GrammarData.$trModule
                   GrammarData.$tc'LeafInfl1) -}
d53891e46c94caa5a53efb5137190aa8
  $tc'LeafInfl1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LeafInfl"#) -}
d131b5ce2ad9d72ec38f28f12f750e7b
  $tc'LeafNull :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   920578588680516430##
                   1193153015154836714##
                   GrammarData.$trModule
                   GrammarData.$tc'LeafNull1) -}
d08d24aeb607e872260573e67d4e9154
  $tc'LeafNull1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'LeafNull"#) -}
ee4717a62b415c2a1c256cef847f5a66
  $tc'NoAffixHop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13809853030295607984##
                   16114640089527968378##
                   GrammarData.$trModule
                   GrammarData.$tc'NoAffixHop1) -}
9f707159489e3cd58995a9de5b85b85e
  $tc'NoAffixHop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoAffixHop"#) -}
cc7acc9159d957df1b3a93e706ba683c
  $tc'NoItoCMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4420499009421473782##
                   6932831033191921344##
                   GrammarData.$trModule
                   GrammarData.$tc'NoItoCMove1) -}
e6388124e5a0eaeaa4785bd8d435a3b2
  $tc'NoItoCMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoItoCMove"#) -}
35073da8b19aac08fa1ec34b88f3f99f
  $tc'NoNullSub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6354301419015955087##
                   8927144175041930277##
                   GrammarData.$trModule
                   GrammarData.$tc'NoNullSub1) -}
792324265a4e94a177ae5bce612adf7c
  $tc'NoNullSub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoNullSub"#) -}
f8c426b7df2e14dfed2aafff3140ae75
  $tc'NoNullTop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8035082281830065888##
                   4003783096529668613##
                   GrammarData.$trModule
                   GrammarData.$tc'NoNullTop1) -}
64f3375c2ce559ab182e70d126872046
  $tc'NoNullTop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoNullTop"#) -}
3ebb6479d66b7cbdd123eebc9a73a312
  $tc'NoQuesInv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11381578163477786952##
                   8278977104182493718##
                   GrammarData.$trModule
                   GrammarData.$tc'NoQuesInv1) -}
45fa3258c6242e8ff80afebc8d11192d
  $tc'NoQuesInv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoQuesInv"#) -}
6a4d5ee1ca39c8d97dfb09e6dcc8dcaa
  $tc'NoTopMark :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15870202877091365304##
                   13933818327373373379##
                   GrammarData.$trModule
                   GrammarData.$tc'NoTopMark1) -}
9bbdbd5acaae423ec9e2c888a17df990
  $tc'NoTopMark1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoTopMark"#) -}
85278a8f80d191c200a450c5be951fc1
  $tc'NoVtoIMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11531530658306323131##
                   8141407296253328101##
                   GrammarData.$trModule
                   GrammarData.$tc'NoVtoIMove1) -}
2eac203ee67d1a579553d951769de501
  $tc'NoVtoIMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoVtoIMove"#) -}
a606d4d67b9af2782787a9bb7dfe81f9
  $tc'NoWHMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5802236724521653652##
                   10214597883994580717##
                   GrammarData.$trModule
                   GrammarData.$tc'NoWHMove1) -}
789d3d1c84022f9fbe8badc17a2e6de8
  $tc'NoWHMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'NoWHMove"#) -}
e5b0d9088216c9c67bb982bdaf0dd93d
  $tc'Null :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5195213144125953665##
                   1876319734182268181##
                   GrammarData.$trModule
                   GrammarData.$tc'Null1) -}
ab8abbbd414c23a75ea92ee5b5cb8acd
  $tc'Null1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Null"#) -}
7981f60c74675a400231836bf0cfc4f9
  $tc'ObjFinal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2144843198660877945##
                   18324882634381972638##
                   GrammarData.$trModule
                   GrammarData.$tc'ObjFinal1) -}
3eac2ca457a6d29b86f7a9a888461fde
  $tc'ObjFinal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ObjFinal"#) -}
527add3b1a69d30c956b058f30b87031
  $tc'ObjInitial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5636034273264042639##
                   3017772863593739735##
                   GrammarData.$trModule
                   GrammarData.$tc'ObjInitial1) -}
8bbcf361e3361ff24b801a1f52d73d66
  $tc'ObjInitial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'ObjInitial"#) -}
8ab3cd801f22460ffd5681fec84f8068
  $tc'OblAffixHop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12535790973849257794##
                   12865742374572173733##
                   GrammarData.$trModule
                   GrammarData.$tc'OblAffixHop1) -}
8d4e7b2f7d4acf0992a2a009a7bc58fe
  $tc'OblAffixHop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblAffixHop"#) -}
d4b016d997243c279903d6fa5cdcae1c
  $tc'OblItoCMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12734466381621038585##
                   16595457635429166867##
                   GrammarData.$trModule
                   GrammarData.$tc'OblItoCMove1) -}
a35b855cbcf830b40aa34804f3e3ea30
  $tc'OblItoCMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblItoCMove"#) -}
a50c7124fcf30a99eb08ed5b835eb14a
  $tc'OblQuesInv :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1097566390946062388##
                   9915932912291177546##
                   GrammarData.$trModule
                   GrammarData.$tc'OblQuesInv1) -}
334b6371f837f2e2cc43b615daaf453a
  $tc'OblQuesInv1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblQuesInv"#) -}
8e5cc1bf897141ae094037f1228a93bc
  $tc'OblTopMark :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14377375249566873444##
                   7912980853454752492##
                   GrammarData.$trModule
                   GrammarData.$tc'OblTopMark1) -}
4ad9d7c0778c7b9ec151df03240e9bbe
  $tc'OblTopMark1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblTopMark"#) -}
44c169f22dc32ae9ae34f986f4bda4ee
  $tc'OblTopic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16972706928901599146##
                   1941305203157167028##
                   GrammarData.$trModule
                   GrammarData.$tc'OblTopic1) -}
e6759fb6370b37171cfb5ee0df0d99e8
  $tc'OblTopic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblTopic"#) -}
fbed3c72c189e4dcdafc1abf41edaca9
  $tc'OblVtoIMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4429548721329314721##
                   11306971307081185258##
                   GrammarData.$trModule
                   GrammarData.$tc'OblVtoIMove1) -}
5e230cd1d21fda2364fd3dbcab362d0a
  $tc'OblVtoIMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblVtoIMove"#) -}
315c19a94122aea4c67f939b86787f56
  $tc'OblWHMove :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   879054016578709174##
                   15447210911108303407##
                   GrammarData.$trModule
                   GrammarData.$tc'OblWHMove1) -}
eb466320bf6840205cb958a379ea6f49
  $tc'OblWHMove1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OblWHMove"#) -}
0e1a76dfb36270e36553f05f5793d077
  $tc'OptNullSub :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11561890858377762194##
                   6060910695410428091##
                   GrammarData.$trModule
                   GrammarData.$tc'OptNullSub1) -}
c2e99924edcedbf4c8d973dd6f8bbb15
  $tc'OptNullSub1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OptNullSub"#) -}
1674bbe8b447a9653fe3787958ff9635
  $tc'OptNullTop :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12363260009436055431##
                   10654615293349615735##
                   GrammarData.$trModule
                   GrammarData.$tc'OptNullTop1) -}
a9209f0855df4559ac012a63e0b37eb7
  $tc'OptNullTop1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OptNullTop"#) -}
2fd5550d212ec162a5e85f8542c704a8
  $tc'OptTopic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4920547567263572852##
                   7285276580052179749##
                   GrammarData.$trModule
                   GrammarData.$tc'OptTopic1) -}
c1832be163f733cee8e9d154a6c3da22
  $tc'OptTopic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'OptTopic"#) -}
72b4ba330208ccebc1a66e5c6010cd1d
  $tc'PiedPipe :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15213466784760308661##
                   17652949454717222410##
                   GrammarData.$trModule
                   GrammarData.$tc'PiedPipe1) -}
c913e55be6d1e31286f2fc7df80c86b6
  $tc'PiedPipe1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PiedPipe"#) -}
fcd5664739eadf6ac69ad656e8514300
  $tc'PrepStrand :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7966211006267198299##
                   4919780684550737098##
                   GrammarData.$trModule
                   GrammarData.$tc'PrepStrand1) -}
df45cfb81a8c9dbce782aba65bdf7452
  $tc'PrepStrand1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'PrepStrand"#) -}
5f71804051bdb6e39dc08c22bcafce39
  $tc'Ques :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6700114722651526186##
                   11925449903985428122##
                   GrammarData.$trModule
                   GrammarData.$tc'Ques1) -}
2a3a39e80dcb2f8f3ba909314b35a65a
  $tc'Ques1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Ques"#) -}
1b5fc8317567cae1dd56b9c8807cdf03
  $tc'SubFinal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16316936676979877138##
                   9710467641897228650##
                   GrammarData.$trModule
                   GrammarData.$tc'SubFinal1) -}
51a8252ec3e64f32d56c456ca0aa0dd7
  $tc'SubFinal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SubFinal"#) -}
4f7ded4826662c50782836887d8182a3
  $tc'SubInitial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3253332179869051648##
                   9887944005468774532##
                   GrammarData.$trModule
                   GrammarData.$tc'SubInitial1) -}
eb9e81f7e951d99061ea0685a662ee36
  $tc'SubInitial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'SubInitial"#) -}
dba5621cfdd5e8cc73e7ef8f03fcb379
  $tc'XBarA :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12595933524296680742##
                   13554201445489516865##
                   GrammarData.$trModule
                   GrammarData.$tc'XBarA1) -}
99706f1b7619c28c8c3f18a209725d50
  $tc'XBarA1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'XBarA"#) -}
bc55f8a5667d67d371959c8c64a57ca1
  $tc'XBarC :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2378811268227689085##
                   12474284849386694437##
                   GrammarData.$trModule
                   GrammarData.$tc'XBarC1) -}
e19758da6b90f522c21b4119dd2b0c9a
  $tc'XBarC1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'XBarC"#) -}
5455bc2d4645ab01d3f9c9ab1b4087f6
  $tc'XP :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3175906868660605748##
                   9330515614971299486##
                   GrammarData.$trModule
                   GrammarData.$tc'XP1) -}
c0ed1568993dd8b9c5745c052e2d8b10
  $tc'XP1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'XP"#) -}
cb25af677a8151f2a86a5bdd9bf6f2f3
  $tc'XPNull :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3519522025257166054##
                   15031732829558157345##
                   GrammarData.$trModule
                   GrammarData.$tc'XPNull1) -}
901349f6ea7bd767fbcb188faf44b320
  $tc'XPNull1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'XPNull"#) -}
d3ed60617beffe644f94b773a1781a8b
  $tcAffixHopping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   12305640934356909507##
                   11347340607520018508##
                   GrammarData.$trModule
                   GrammarData.$tcAffixHopping1) -}
2769a0efe1d430ec2fd35188ef1d3251
  $tcAffixHopping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "AffixHopping"#) -}
a682bc62899c58f6b0f7982d9145ee2e
  $tcBar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13996381514173152718##
                   5669879311893212082##
                   GrammarData.$trModule
                   GrammarData.$tcBar1) -}
584b28e8a369c18abd0d9f380b431c84
  $tcBar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Bar"#) -}
9de21df8b3abc95e2e38a14ed9fde650
  $tcComplementizerInitial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4544955894915213270##
                   16313304874250284717##
                   GrammarData.$trModule
                   GrammarData.$tcComplementizerInitial1) -}
43efc0ec694a02cab95acd2e9877a665
  $tcComplementizerInitial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ComplementizerInitial"#) -}
a18ccf31aaba2da3c1527e2972e3faa7
  $tcGrammar :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5332777568676499360##
                   5325131366339630104##
                   GrammarData.$trModule
                   GrammarData.$tcGrammar1) -}
c2cde84f57e0b1e178f3ec96851d2087
  $tcGrammar1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Grammar"#) -}
4f70702e9859646cec700afffe329e5a
  $tcIlloc :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5744896559607156712##
                   14715156309479179786##
                   GrammarData.$trModule
                   GrammarData.$tcIlloc1) -}
3e992f04bfbebc00e94f5e2006e556d4
  $tcIlloc1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Illoc"#) -}
2127933b398fb4a16687114573eaecab
  $tcItoCMovement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14066535846001294831##
                   9021648988030822912##
                   GrammarData.$trModule
                   GrammarData.$tcItoCMovement1) -}
79b69ab698945d18b488bce422b7aa43
  $tcItoCMovement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ItoCMovement"#) -}
94a0d31a68c4819b44d75743b10c4fe0
  $tcLeaf :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15732310041950825128##
                   3008057968999782447##
                   GrammarData.$trModule
                   GrammarData.$tcLeaf1) -}
6590303aa736895b9605849c49e05c08
  $tcLeaf1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Leaf"#) -}
f6358a2810ae2a5904ba5b0c449c9e97
  $tcNullSubject :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16568169212466217333##
                   9907358800233947844##
                   GrammarData.$trModule
                   GrammarData.$tcNullSubject1) -}
abbefb2a8e9fa85c022067f94ae8af9b
  $tcNullSubject1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NullSubject"#) -}
730a59435ea2b2a3f450ca6be630b3c8
  $tcNullTopic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17449089314366836060##
                   14608571231899312670##
                   GrammarData.$trModule
                   GrammarData.$tcNullTopic1) -}
d59cc18fe71aabaa2a34e4d85d591bff
  $tcNullTopic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "NullTopic"#) -}
62aa28a25ecb7960964286936547e672
  $tcObjectFinal :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17230082390142721493##
                   5377765763424881678##
                   GrammarData.$trModule
                   GrammarData.$tcObjectFinal1) -}
e826d342b79d1021527bdafb8529a479
  $tcObjectFinal1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ObjectFinal"#) -}
12ee07362222c793640dbfd7bd483699
  $tcObligatoryTopic :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17861246097318228482##
                   10100595777898540093##
                   GrammarData.$trModule
                   GrammarData.$tcObligatoryTopic1) -}
71984bf0a6dbbdd3a1a85504415a95a4
  $tcObligatoryTopic1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ObligatoryTopic"#) -}
fa01023103991f5d61a79970ba36bca2
  $tcPhrase :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4482796197094216239##
                   17176512992566389651##
                   GrammarData.$trModule
                   GrammarData.$tcPhrase1) -}
6beb67a5e1dea371029d2afd18d88158
  $tcPhrase1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Phrase"#) -}
f45d2f62885bc5b1222f91a26967619e
  $tcPiedPiping :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   421419423590745864##
                   835364731942697674##
                   GrammarData.$trModule
                   GrammarData.$tcPiedPiping1) -}
2f1ca84d03beb3be9c2b28b8d8ff698b
  $tcPiedPiping1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "PiedPiping"#) -}
e4d086af111f9c4c9640e85440f8dd21
  $tcQuestionInversion :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11751380893175116192##
                   5285684752098126778##
                   GrammarData.$trModule
                   GrammarData.$tcQuestionInversion1) -}
1731004462e1abbcc05d002f4d9fd606
  $tcQuestionInversion1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "QuestionInversion"#) -}
fe48c2ec8a8573a20239639f6506b89a
  $tcSubjectInitial :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4518926979770586991##
                   602044210115434002##
                   GrammarData.$trModule
                   GrammarData.$tcSubjectInitial1) -}
260d47e2cee6c87e483ee6ed0b68eb54
  $tcSubjectInitial1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "SubjectInitial"#) -}
45ac4469084b769d0397d140e546db51
  $tcTopicMarking :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   13358917898833235919##
                   3707504509666977180##
                   GrammarData.$trModule
                   GrammarData.$tcTopicMarking1) -}
4a45c0c05be4c7ac333ca03d60d30374
  $tcTopicMarking1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "TopicMarking"#) -}
46e2eab5103c72df193fa6cab9580b16
  $tcVtoIMovement :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5485938426335810421##
                   6148501226294908712##
                   GrammarData.$trModule
                   GrammarData.$tcVtoIMovement1) -}
e23e21ed33cd92af94cf40d7905fc937
  $tcVtoIMovement1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "VtoIMovement"#) -}
729d1d7d001f92f3e7accaf44e664b14
  $tcWHMovementObligatory :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14531085546393811170##
                   6711244949277885899##
                   GrammarData.$trModule
                   GrammarData.$tcWHMovementObligatory1) -}
b3fda465df6ef1a810ff5aa6eb066d3d
  $tcWHMovementObligatory1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "WHMovementObligatory"#) -}
8457995d8591ecc3bc24684cfe482071
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   GrammarData.$trModule2
                   GrammarData.$trModule1) -}
e7f1628917cddd01f4f19f8bae46c056
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "GrammarData"#) -}
d31f92a36e2a962a8be41d42f0075cdc
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "con-lang-gen-0.0.0.1-JpecSLrjfNmG1CUMEdSr39"#) -}
5457edd1d7ee60c90ee0765c209760ae
  $w$cshowsPrec :: GHC.Prim.Int# -> GrammarData.Bar -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
7e15a59fc5920d6d52eff9d5a62fea61
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GrammarData.SubjectInitial
    -> GrammarData.ObjectFinal
    -> GrammarData.ComplementizerInitial
    -> GrammarData.VtoIMovement
    -> GrammarData.AffixHopping
    -> GrammarData.NullSubject
    -> GrammarData.ObligatoryTopic
    -> GrammarData.NullTopic
    -> GrammarData.TopicMarking
    -> GrammarData.ItoCMovement
    -> GrammarData.WHMovementObligatory
    -> GrammarData.PiedPiping
    -> GrammarData.QuestionInversion
    -> GHC.Base.String
    -> GHC.Base.String
  {- Arity: 15,
     Strictness: <S,U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,1*U><L,U>,
     Inline: [0] -}
4c6bb1f31e4c8548c057d21577834136
  $w$cshowsPrec2 ::
    GrammarData.Illoc -> GHC.Base.String -> GHC.Base.String
  {- Arity: 2, Strictness: <S,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ (w :: GrammarData.Illoc) (w1 :: GHC.Base.String) ->
                 case w of wild {
                   GrammarData.Null
                   -> GHC.Base.++ @ GHC.Types.Char GrammarData.$fShowIlloc4 w1
                   GrammarData.Ques
                   -> GHC.Base.++ @ GHC.Types.Char GrammarData.$fShowIlloc3 w1
                   GrammarData.Decl
                   -> GHC.Base.++ @ GHC.Types.Char GrammarData.$fShowIlloc2 w1
                   GrammarData.Imper
                   -> GHC.Base.++ @ GHC.Types.Char GrammarData.$fShowIlloc1 w1 }) -}
d02c228465e5d932d54760d6cee46df5
  $w$cshowsPrec3 ::
    GHC.Prim.Int# -> GrammarData.Leaf -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0] -}
1b7f4a36baf794187a01f705f3af35bc
  $w$ctoEnum :: GHC.Prim.Int# -> GrammarData.AffixHopping
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumAffixHopping1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumAffixHopping1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.AffixHopping ww } }) -}
2be002b59c64ba138a144cb19c908678
  $w$ctoEnum1 :: GHC.Prim.Int# -> GrammarData.ComplementizerInitial
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumComplementizerInitial1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumComplementizerInitial1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ GrammarData.ComplementizerInitial
                             ww } }) -}
406fe7358f9d4a23ce99dbb1ae8b7df5
  $w$ctoEnum10 :: GHC.Prim.Int# -> GrammarData.SubjectInitial
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumSubjectInitial1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumSubjectInitial1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.SubjectInitial ww } }) -}
086be7089aedc4e5b861d78292d86bfc
  $w$ctoEnum11 :: GHC.Prim.Int# -> GrammarData.TopicMarking
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumTopicMarking1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumTopicMarking1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.TopicMarking ww } }) -}
b89383b8c859aafdd38937312f593ec7
  $w$ctoEnum12 :: GHC.Prim.Int# -> GrammarData.VtoIMovement
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumVtoIMovement1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumVtoIMovement1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.VtoIMovement ww } }) -}
179d51382e990d4d51977edd0072efb7
  $w$ctoEnum13 :: GHC.Prim.Int# -> GrammarData.WHMovementObligatory
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumWHMovementObligatory1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumWHMovementObligatory1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum#
                             @ GrammarData.WHMovementObligatory
                             ww } }) -}
4c6bb1f31e4c8548c057d21577834136
  $w$ctoEnum2 :: GHC.Prim.Int# -> GrammarData.Illoc
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumIlloc5 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 3#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumIlloc5 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.Illoc ww } }) -}
29901a1223a3a84f8195c61990d5cb58
  $w$ctoEnum3 :: GHC.Prim.Int# -> GrammarData.ItoCMovement
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumItoCMovement1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumItoCMovement1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.ItoCMovement ww } }) -}
4123d9519741817da4543047c2f6b1c7
  $w$ctoEnum4 :: GHC.Prim.Int# -> GrammarData.NullSubject
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumNullSubject1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumNullSubject1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.NullSubject ww } }) -}
1c46b92f8b870c141981ad765cca1f9c
  $w$ctoEnum5 :: GHC.Prim.Int# -> GrammarData.NullTopic
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumNullTopic1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumNullTopic1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.NullTopic ww } }) -}
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  $w$ctoEnum6 :: GHC.Prim.Int# -> GrammarData.ObjectFinal
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumObjectFinal1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumObjectFinal1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.ObjectFinal ww } }) -}
98bd60cc5a99b9585c9ea9939edec3dc
  $w$ctoEnum7 :: GHC.Prim.Int# -> GrammarData.ObligatoryTopic
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumObligatoryTopic1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumObligatoryTopic1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.ObligatoryTopic ww } }) -}
7a0991a800e7b21d81a780394c5b6f02
  $w$ctoEnum8 :: GHC.Prim.Int# -> GrammarData.PiedPiping
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumPiedPiping1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumPiedPiping1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.PiedPiping ww } }) -}
8dd18a8b262c95bf6a974b413c19f1b8
  $w$ctoEnum9 :: GHC.Prim.Int# -> GrammarData.QuestionInversion
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 0#) of wild {
                   GHC.Types.False -> GrammarData.$fEnumQuestionInversion1 ww
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.<=# ww 1#) of wild1 {
                        GHC.Types.False -> GrammarData.$fEnumQuestionInversion1 ww
                        GHC.Types.True
                        -> GHC.Prim.tagToEnum# @ GrammarData.QuestionInversion ww } }) -}
1b7f4a36baf794187a01f705f3af35bc
  data AffixHopping = NoAffixHop | OblAffixHop
5457edd1d7ee60c90ee0765c209760ae
  data Bar
    = XBarA {barLC :: InflectionData.LexCat,
             barIl :: GrammarData.Illoc,
             adjunct :: GrammarData.Phrase,
             barBar :: GrammarData.Bar}
    | XBarC {barLC :: InflectionData.LexCat,
             barIl :: GrammarData.Illoc,
             leaf :: GrammarData.Leaf,
             compliment :: GrammarData.Phrase}
2be002b59c64ba138a144cb19c908678
  data ComplementizerInitial = CompInitial | CompFinal
3c8e9da2521354a7dedc4e101001aa77
  data Grammar
    = Grammar {getSI :: GrammarData.SubjectInitial,
               getOF :: GrammarData.ObjectFinal,
               getCI :: GrammarData.ComplementizerInitial,
               getVtoI :: GrammarData.VtoIMovement,
               getAH :: GrammarData.AffixHopping,
               getNS :: GrammarData.NullSubject,
               getObT :: GrammarData.ObligatoryTopic,
               getNT :: GrammarData.NullTopic,
               getTM :: GrammarData.TopicMarking,
               getItoC :: GrammarData.ItoCMovement,
               getWHM :: GrammarData.WHMovementObligatory,
               getPP :: GrammarData.PiedPiping,
               getQI :: GrammarData.QuestionInversion}
4c6bb1f31e4c8548c057d21577834136
  data Illoc = Null | Ques | Decl | Imper
29901a1223a3a84f8195c61990d5cb58
  data ItoCMovement = NoItoCMove | OblItoCMove
d02c228465e5d932d54760d6cee46df5
  data Leaf
    = LeafNull GrammarData.Illoc
    | LeafInfl {leafLC :: InflectionData.LexCat,
                leafInfl :: (InflectionData.Express InflectionData.Gender,
                             InflectionData.Express InflectionData.Animacy,
                             InflectionData.Express InflectionData.Case,
                             InflectionData.Express InflectionData.Number,
                             InflectionData.Express InflectionData.Definiteness,
                             InflectionData.Express InflectionData.Specificity,
                             InflectionData.Express InflectionData.Topic,
                             InflectionData.Express InflectionData.Person,
                             InflectionData.Express InflectionData.Honorific,
                             InflectionData.Express InflectionData.Polarity,
                             InflectionData.Express InflectionData.Tense,
                             InflectionData.Express InflectionData.Aspect,
                             InflectionData.Express InflectionData.Mood,
                             InflectionData.Express InflectionData.Voice,
                             InflectionData.Express InflectionData.Evidentiality,
                             InflectionData.Express InflectionData.Transitivity,
                             InflectionData.Express InflectionData.Volition)}
    | Leaf {leafLC :: InflectionData.LexCat,
            leafIl :: GrammarData.Illoc,
            leafStr :: GHC.Base.String}
4123d9519741817da4543047c2f6b1c7
  data NullSubject = NoNullSub | OptNullSub
1c46b92f8b870c141981ad765cca1f9c
  data NullTopic = NoNullTop | OptNullTop
fe53e14a5ddfe5ebf615e5d4e45cf1cf
  data ObjectFinal = ObjFinal | ObjInitial
98bd60cc5a99b9585c9ea9939edec3dc
  data ObligatoryTopic = OblTopic | OptTopic
5457edd1d7ee60c90ee0765c209760ae
  data Phrase
    = XPNull
    | XP {phraseLC :: InflectionData.LexCat,
          phraseIl :: GrammarData.Illoc,
          specifier :: GrammarData.Phrase,
          phraseBar :: GrammarData.Bar}
7a0991a800e7b21d81a780394c5b6f02
  data PiedPiping = PiedPipe | PrepStrand
8dd18a8b262c95bf6a974b413c19f1b8
  data QuestionInversion = NoQuesInv | OblQuesInv
406fe7358f9d4a23ce99dbb1ae8b7df5
  data SubjectInitial = SubInitial | SubFinal
086be7089aedc4e5b861d78292d86bfc
  data TopicMarking = NoTopMark | OblTopMark
b89383b8c859aafdd38937312f593ec7
  data VtoIMovement = NoVtoIMove | OblVtoIMove
179d51382e990d4d51977edd0072efb7
  data WHMovementObligatory = NoWHMove | OblWHMove
e601bd29c70078ca2097e5a54fe4cb0b
  adjunct :: GrammarData.Bar -> GrammarData.Phrase
  RecSel Left GrammarData.Bar
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ds1 ds2 ds3 ds4 -> ds3
                   GrammarData.XBarC ipv ipv1 ipv2 ipv3 -> GrammarData.adjunct1 }) -}
27689de111ac09d4971c44600f7b250f
  adjunct1 :: GrammarData.Phrase
  {- Strictness: x -}
0afaf26efe8e2712a3b7d4db50ff2dff
  barBar :: GrammarData.Bar -> GrammarData.Bar
  RecSel Left GrammarData.Bar
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ds1 ds2 ds3 ds4 -> ds4
                   GrammarData.XBarC ipv ipv1 ipv2 ipv3 -> GrammarData.barBar1 }) -}
8b690da8873b4c3e396d326a128c9a21
  barBar1 :: GrammarData.Bar
  {- Strictness: x -}
495b07e9f81533a1c882b9a747a70b14
  barIl :: GrammarData.Bar -> GrammarData.Illoc
  RecSel Left GrammarData.Bar
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ds1 ds2 ds3 ds4 -> ds2
                   GrammarData.XBarC ds1 ds2 ds3 ds4 -> ds2 }) -}
0c41c78472d26b8b081305ab69180a1b
  barLC :: GrammarData.Bar -> InflectionData.LexCat
  RecSel Left GrammarData.Bar
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ds1 ds2 ds3 ds4 -> ds1
                   GrammarData.XBarC ds1 ds2 ds3 ds4 -> ds1 }) -}
0df42ab7778482bac3d2c3e0e74d73f1
  compliment :: GrammarData.Bar -> GrammarData.Phrase
  RecSel Left GrammarData.Bar
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ipv ipv1 ipv2 ipv3 -> GrammarData.compliment1
                   GrammarData.XBarC ds1 ds2 ds3 ds4 -> ds4 }) -}
e2a764dc485b5d7d2164161308fd2c52
  compliment1 :: GrammarData.Phrase
  {- Strictness: x -}
40cdb116ec1ea7366000ac8b40d188eb
  getAH :: GrammarData.Grammar -> GrammarData.AffixHopping
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLSLLLLLLLL),1*U(A,A,A,A,1*U,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds5 }) -}
8224be4459fbc0f8f59bcbb839026b14
  getCI :: GrammarData.Grammar -> GrammarData.ComplementizerInitial
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLSLLLLLLLLLL),1*U(A,A,1*U,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds3 }) -}
25503cfb1e014e62772bcf87596355de
  getItoC :: GrammarData.Grammar -> GrammarData.ItoCMovement
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLSLLL),1*U(A,A,A,A,A,A,A,A,A,1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds10 }) -}
3d19c135cf71e81367b68e2080b1a119
  getNS :: GrammarData.Grammar -> GrammarData.NullSubject
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,1*U,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds6 }) -}
b8a71f1a69e1bc588224a15e929894b8
  getNT :: GrammarData.Grammar -> GrammarData.NullTopic
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLSLLLLL),1*U(A,A,A,A,A,A,A,1*U,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds8 }) -}
a5d1e0dc09cb921d7acb833d2628078e
  getOF :: GrammarData.Grammar -> GrammarData.ObjectFinal
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLLLLLLLLLLL),1*U(A,1*U,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds2 }) -}
f72ccaa45cccb7180fc842e375e74efe
  getObT :: GrammarData.Grammar -> GrammarData.ObligatoryTopic
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLSLLLLLL),1*U(A,A,A,A,A,A,1*U,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds7 }) -}
2c011088e41ebad9b3c6d76b3a25241e
  getPP :: GrammarData.Grammar -> GrammarData.PiedPiping
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLSL),1*U(A,A,A,A,A,A,A,A,A,A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds12 }) -}
c4b34b50b4e9f8bbb01b7c67a1b33ec9
  getQI :: GrammarData.Grammar -> GrammarData.QuestionInversion
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds13 }) -}
5d93bee883c113654c0436c07af4f27a
  getSI :: GrammarData.Grammar -> GrammarData.SubjectInitial
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SLLLLLLLLLLLL),1*U(1*U,A,A,A,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds1 }) -}
2cf825a8685d5bd1d8d980a654a36768
  getTM :: GrammarData.Grammar -> GrammarData.TopicMarking
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLSLLLL),1*U(A,A,A,A,A,A,A,A,1*U,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds9 }) -}
44cea5a1ee73214e1ae9e18ae2956585
  getVtoI :: GrammarData.Grammar -> GrammarData.VtoIMovement
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLSLLLLLLLLL),1*U(A,A,A,1*U,A,A,A,A,A,A,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds4 }) -}
1fec256d4f82fb9f779c662f2e8d32c2
  getWHM :: GrammarData.Grammar -> GrammarData.WHMovementObligatory
  RecSel Left GrammarData.Grammar
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLLLLLLLLSLL),1*U(A,A,A,A,A,A,A,A,A,A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Grammar) ->
                 case ds of wild { GrammarData.Grammar ds1 ds2 ds3 ds4 ds5 ds6 ds7 ds8 ds9 ds10 ds11 ds12 ds13 ->
                 ds11 }) -}
b55db04e54370856f9e1e0356246d3a7
  leaf :: GrammarData.Bar -> GrammarData.Leaf
  RecSel Left GrammarData.Bar
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Bar) ->
                 case ds of wild {
                   GrammarData.XBarA ipv ipv1 ipv2 ipv3 -> GrammarData.leaf1
                   GrammarData.XBarC ds1 ds2 ds3 ds4 -> ds3 }) -}
ae7a136c68012ba6732cfa040716b84f
  leaf1 :: GrammarData.Leaf
  {- Strictness: x -}
1c68e82009aa21abcacae75dd7507c4e
  leafIl :: GrammarData.Leaf -> GrammarData.Illoc
  RecSel Left GrammarData.Leaf
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Leaf) ->
                 case ds of wild {
                   DEFAULT -> GrammarData.leafIl1
                   GrammarData.Leaf ds1 ds2 ds3 -> ds2 }) -}
3e82b9305f693726ec8b2201c19c7b4c
  leafIl1 :: GrammarData.Illoc
  {- Strictness: x -}
08b3030175ed5dacbf460a385344c1d0
  leafInfl ::
    GrammarData.Leaf
    -> (InflectionData.Express InflectionData.Gender,
        InflectionData.Express InflectionData.Animacy,
        InflectionData.Express InflectionData.Case,
        InflectionData.Express InflectionData.Number,
        InflectionData.Express InflectionData.Definiteness,
        InflectionData.Express InflectionData.Specificity,
        InflectionData.Express InflectionData.Topic,
        InflectionData.Express InflectionData.Person,
        InflectionData.Express InflectionData.Honorific,
        InflectionData.Express InflectionData.Polarity,
        InflectionData.Express InflectionData.Tense,
        InflectionData.Express InflectionData.Aspect,
        InflectionData.Express InflectionData.Mood,
        InflectionData.Express InflectionData.Voice,
        InflectionData.Express InflectionData.Evidentiality,
        InflectionData.Express InflectionData.Transitivity,
        InflectionData.Express InflectionData.Volition)
  RecSel Left GrammarData.Leaf
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Leaf) ->
                 case ds of wild {
                   DEFAULT -> GrammarData.leafInfl1
                   GrammarData.LeafInfl ds1 ds2 -> ds2 }) -}
3a7181a821a47d04586d1cee01f3ab6d
  leafInfl1 ::
    (InflectionData.Express InflectionData.Gender,
     InflectionData.Express InflectionData.Animacy,
     InflectionData.Express InflectionData.Case,
     InflectionData.Express InflectionData.Number,
     InflectionData.Express InflectionData.Definiteness,
     InflectionData.Express InflectionData.Specificity,
     InflectionData.Express InflectionData.Topic,
     InflectionData.Express InflectionData.Person,
     InflectionData.Express InflectionData.Honorific,
     InflectionData.Express InflectionData.Polarity,
     InflectionData.Express InflectionData.Tense,
     InflectionData.Express InflectionData.Aspect,
     InflectionData.Express InflectionData.Mood,
     InflectionData.Express InflectionData.Voice,
     InflectionData.Express InflectionData.Evidentiality,
     InflectionData.Express InflectionData.Transitivity,
     InflectionData.Express InflectionData.Volition)
  {- Strictness: x -}
9b4ca83cf25542107f568e6b9d9db36d
  leafLC :: GrammarData.Leaf -> InflectionData.LexCat
  RecSel Left GrammarData.Leaf
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Leaf) ->
                 case ds of wild {
                   GrammarData.LeafNull ipv -> GrammarData.leafLC1
                   GrammarData.LeafInfl ds1 ds2 -> ds1
                   GrammarData.Leaf ds1 ds2 ds3 -> ds1 }) -}
49b07e5fff8eeb54ef63b49774313322
  leafLC1 :: InflectionData.LexCat
  {- Strictness: x -}
b0ea8f1dc6d188f9b29e3d85e407d521
  leafStr :: GrammarData.Leaf -> GHC.Base.String
  RecSel Left GrammarData.Leaf
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Leaf) ->
                 case ds of wild {
                   DEFAULT -> GrammarData.leafStr1
                   GrammarData.Leaf ds1 ds2 ds3 -> ds3 }) -}
f114072a047b1f0296475224d1855cd7
  leafStr1 :: GHC.Base.String
  {- Strictness: x -}
930e630f8a82b5d84b99e3c950128e27
  phraseBar :: GrammarData.Phrase -> GrammarData.Bar
  RecSel Left GrammarData.Phrase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Phrase) ->
                 case ds of wild {
                   GrammarData.XPNull -> GrammarData.phraseBar1
                   GrammarData.XP ds1 ds2 ds3 ds4 -> ds4 }) -}
6c94faefd192f7b06358096fc7bffbdf
  phraseBar1 :: GrammarData.Bar
  {- Strictness: x -}
f066a67e20c4d2357fb958decfdc5819
  phraseIl :: GrammarData.Phrase -> GrammarData.Illoc
  RecSel Left GrammarData.Phrase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Phrase) ->
                 case ds of wild {
                   GrammarData.XPNull -> GrammarData.phraseIl1
                   GrammarData.XP ds1 ds2 ds3 ds4 -> ds2 }) -}
d97b64a5a665bd5d94df274c81d748e0
  phraseIl1 :: GrammarData.Illoc
  {- Strictness: x -}
53a87df9b5947537b65c218bf35e0975
  phraseLC :: GrammarData.Phrase -> InflectionData.LexCat
  RecSel Left GrammarData.Phrase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Phrase) ->
                 case ds of wild {
                   GrammarData.XPNull -> GrammarData.phraseLC1
                   GrammarData.XP ds1 ds2 ds3 ds4 -> ds1 }) -}
f127d5af74b7173d5e48e6f5c5d892c3
  phraseLC1 :: InflectionData.LexCat
  {- Strictness: x -}
bfb00894723610ac8cddae5cfdc5fdf9
  specifier :: GrammarData.Phrase -> GrammarData.Phrase
  RecSel Left GrammarData.Phrase
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: GrammarData.Phrase) ->
                 case ds of wild {
                   GrammarData.XPNull -> GrammarData.specifier1
                   GrammarData.XP ds1 ds2 ds3 ds4 -> ds3 }) -}
4a205cc9f1b194fe976d7c26ba614aec
  specifier1 :: GrammarData.Phrase
  {- Strictness: x -}
instance [safe] GHC.Enum.Enum [GrammarData.AffixHopping]
  = GrammarData.$fEnumAffixHopping
instance [safe] GHC.Enum.Enum [GrammarData.ComplementizerInitial]
  = GrammarData.$fEnumComplementizerInitial
instance [safe] GHC.Enum.Enum [GrammarData.Illoc]
  = GrammarData.$fEnumIlloc
instance [safe] GHC.Enum.Enum [GrammarData.ItoCMovement]
  = GrammarData.$fEnumItoCMovement
instance [safe] GHC.Enum.Enum [GrammarData.NullSubject]
  = GrammarData.$fEnumNullSubject
instance [safe] GHC.Enum.Enum [GrammarData.NullTopic]
  = GrammarData.$fEnumNullTopic
instance [safe] GHC.Enum.Enum [GrammarData.ObjectFinal]
  = GrammarData.$fEnumObjectFinal
instance [safe] GHC.Enum.Enum [GrammarData.ObligatoryTopic]
  = GrammarData.$fEnumObligatoryTopic
instance [safe] GHC.Enum.Enum [GrammarData.PiedPiping]
  = GrammarData.$fEnumPiedPiping
instance [safe] GHC.Enum.Enum [GrammarData.QuestionInversion]
  = GrammarData.$fEnumQuestionInversion
instance [safe] GHC.Enum.Enum [GrammarData.SubjectInitial]
  = GrammarData.$fEnumSubjectInitial
instance [safe] GHC.Enum.Enum [GrammarData.TopicMarking]
  = GrammarData.$fEnumTopicMarking
instance [safe] GHC.Enum.Enum [GrammarData.VtoIMovement]
  = GrammarData.$fEnumVtoIMovement
instance [safe] GHC.Enum.Enum [GrammarData.WHMovementObligatory]
  = GrammarData.$fEnumWHMovementObligatory
instance [safe] GHC.Classes.Eq [GrammarData.AffixHopping]
  = GrammarData.$fEqAffixHopping
instance [safe] GHC.Classes.Eq [GrammarData.Bar]
  = GrammarData.$fEqBar
instance [safe] GHC.Classes.Eq [GrammarData.ComplementizerInitial]
  = GrammarData.$fEqComplementizerInitial
instance [safe] GHC.Classes.Eq [GrammarData.Illoc]
  = GrammarData.$fEqIlloc
instance [safe] GHC.Classes.Eq [GrammarData.ItoCMovement]
  = GrammarData.$fEqItoCMovement
instance [safe] GHC.Classes.Eq [GrammarData.Leaf]
  = GrammarData.$fEqLeaf
instance [safe] GHC.Classes.Eq [GrammarData.NullSubject]
  = GrammarData.$fEqNullSubject
instance [safe] GHC.Classes.Eq [GrammarData.NullTopic]
  = GrammarData.$fEqNullTopic
instance [safe] GHC.Classes.Eq [GrammarData.ObjectFinal]
  = GrammarData.$fEqObjectFinal
instance [safe] GHC.Classes.Eq [GrammarData.ObligatoryTopic]
  = GrammarData.$fEqObligatoryTopic
instance [safe] GHC.Classes.Eq [GrammarData.Phrase]
  = GrammarData.$fEqPhrase
instance [safe] GHC.Classes.Eq [GrammarData.PiedPiping]
  = GrammarData.$fEqPiedPiping
instance [safe] GHC.Classes.Eq [GrammarData.QuestionInversion]
  = GrammarData.$fEqQuestionInversion
instance [safe] GHC.Classes.Eq [GrammarData.SubjectInitial]
  = GrammarData.$fEqSubjectInitial
instance [safe] GHC.Classes.Eq [GrammarData.TopicMarking]
  = GrammarData.$fEqTopicMarking
instance [safe] GHC.Classes.Eq [GrammarData.VtoIMovement]
  = GrammarData.$fEqVtoIMovement
instance [safe] GHC.Classes.Eq [GrammarData.WHMovementObligatory]
  = GrammarData.$fEqWHMovementObligatory
instance [safe] GHC.Read.Read [GrammarData.AffixHopping]
  = GrammarData.$fReadAffixHopping
instance [safe] GHC.Read.Read [GrammarData.ComplementizerInitial]
  = GrammarData.$fReadComplementizerInitial
instance [safe] GHC.Read.Read [GrammarData.ItoCMovement]
  = GrammarData.$fReadItoCMovement
instance [safe] GHC.Read.Read [GrammarData.NullSubject]
  = GrammarData.$fReadNullSubject
instance [safe] GHC.Read.Read [GrammarData.NullTopic]
  = GrammarData.$fReadNullTopic
instance [safe] GHC.Read.Read [GrammarData.ObjectFinal]
  = GrammarData.$fReadObjectFinal
instance [safe] GHC.Read.Read [GrammarData.ObligatoryTopic]
  = GrammarData.$fReadObligatoryTopic
instance [safe] GHC.Read.Read [GrammarData.PiedPiping]
  = GrammarData.$fReadPiedPiping
instance [safe] GHC.Read.Read [GrammarData.QuestionInversion]
  = GrammarData.$fReadQuestionInversion
instance [safe] GHC.Read.Read [GrammarData.SubjectInitial]
  = GrammarData.$fReadSubjectInitial
instance [safe] GHC.Read.Read [GrammarData.TopicMarking]
  = GrammarData.$fReadTopicMarking
instance [safe] GHC.Read.Read [GrammarData.VtoIMovement]
  = GrammarData.$fReadVtoIMovement
instance [safe] GHC.Read.Read [GrammarData.WHMovementObligatory]
  = GrammarData.$fReadWHMovementObligatory
instance [safe] GHC.Show.Show [GrammarData.AffixHopping]
  = GrammarData.$fShowAffixHopping
instance [safe] GHC.Show.Show [GrammarData.Bar]
  = GrammarData.$fShowBar
instance [safe] GHC.Show.Show [GrammarData.ComplementizerInitial]
  = GrammarData.$fShowComplementizerInitial
instance [safe] GHC.Show.Show [GrammarData.Grammar]
  = GrammarData.$fShowGrammar
instance [safe] GHC.Show.Show [GrammarData.Illoc]
  = GrammarData.$fShowIlloc
instance [safe] GHC.Show.Show [GrammarData.ItoCMovement]
  = GrammarData.$fShowItoCMovement
instance [safe] GHC.Show.Show [GrammarData.Leaf]
  = GrammarData.$fShowLeaf
instance [safe] GHC.Show.Show [GrammarData.NullSubject]
  = GrammarData.$fShowNullSubject
instance [safe] GHC.Show.Show [GrammarData.NullTopic]
  = GrammarData.$fShowNullTopic
instance [safe] GHC.Show.Show [GrammarData.ObjectFinal]
  = GrammarData.$fShowObjectFinal
instance [safe] GHC.Show.Show [GrammarData.ObligatoryTopic]
  = GrammarData.$fShowObligatoryTopic
instance [safe] GHC.Show.Show [GrammarData.Phrase]
  = GrammarData.$fShowPhrase
instance [safe] GHC.Show.Show [GrammarData.PiedPiping]
  = GrammarData.$fShowPiedPiping
instance [safe] GHC.Show.Show [GrammarData.QuestionInversion]
  = GrammarData.$fShowQuestionInversion
instance [safe] GHC.Show.Show [GrammarData.SubjectInitial]
  = GrammarData.$fShowSubjectInitial
instance [safe] GHC.Show.Show [GrammarData.TopicMarking]
  = GrammarData.$fShowTopicMarking
instance [safe] GHC.Show.Show [GrammarData.VtoIMovement]
  = GrammarData.$fShowVtoIMovement
instance [safe] GHC.Show.Show [GrammarData.WHMovementObligatory]
  = GrammarData.$fShowWHMovementObligatory
"SPEC/GrammarData $fEqExpress @ Case" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                 InflectionData.Case)
  InflectionData.$fEqExpress @ InflectionData.Case $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress2
"SPEC/GrammarData $fEqExpress @ Mood" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                 InflectionData.Mood)
  InflectionData.$fEqExpress @ InflectionData.Mood $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress
"SPEC/GrammarData $fEqExpress @ Tense" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                  InflectionData.Tense)
  InflectionData.$fEqExpress @ InflectionData.Tense $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress1
"SPEC/GrammarData $fEqExpress_$c==10 @ Case" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                        InflectionData.Case)
  InflectionData.$fEqExpress_$c==10 @ InflectionData.Case $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==2
"SPEC/GrammarData $fEqExpress_$c==10 @ Mood" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                        InflectionData.Mood)
  InflectionData.$fEqExpress_$c==10 @ InflectionData.Mood $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==10
"SPEC/GrammarData $fEqExpress_$c==10 @ Tense" [ALWAYS] forall ($dEq :: GHC.Classes.Eq
                                                                         InflectionData.Tense)
  InflectionData.$fEqExpress_$c==10 @ InflectionData.Tense $dEq
  = GrammarData.$s$fEq(,,,,,,,,,,,,,,,,)_$c==_$s$fEqExpress_$c==1
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

