Configuring random-source-0.3.0.6...
Building random-source-0.3.0.6...
Preprocessing library random-source-0.3.0.6...
[ 1 of 11] Compiling Data.Random.Source.Internal.Prim ( src/Data/Random/Source/Internal/Prim.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/Internal/Prim.o )
[ 2 of 11] Compiling Data.Random.Internal.Words ( src/Data/Random/Internal/Words.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Internal/Words.o )
[ 3 of 11] Compiling Data.Random.Internal.Source ( src/Data/Random/Internal/Source.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Internal/Source.o )

src/Data/Random/Internal/Source.hs:74:5: warning: [-Wredundant-constraints]
    • Redundant constraint: MonadRandom m
    • In the type signature for:
           getRandomNByteInteger :: (MonadRandom m, MonadRandom m) =>
                                    Int -> m Integer
      In the ambiguity check for ‘getRandomNByteInteger’
      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes
      When checking the class method:
        getRandomNByteInteger :: forall (m :: * -> *).
                                 (MonadRandom m, MonadRandom m) =>
                                 Int -> m Integer
[ 4 of 11] Compiling Data.Random.Source.Internal.TH ( src/Data/Random/Source/Internal/TH.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/Internal/TH.o )

src/Data/Random/Source/Internal/TH.hs:85:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘requireMethod’

src/Data/Random/Source/Internal/TH.hs:93:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘score’

src/Data/Random/Source/Internal/TH.hs:104:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘inline’

src/Data/Random/Source/Internal/TH.hs:107:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘noinline’

src/Data/Random/Source/Internal/TH.hs:110:1: warning: [-Wunused-top-binds]
    Defined but not used: ‘replaceMethodName’
[ 5 of 11] Compiling Data.Random.Source.PureMT ( src/Data/Random/Source/PureMT.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/PureMT.o )

src/Data/Random/Source/PureMT.hs:35:1: warning: [-Wredundant-constraints]
    • Redundant constraint: Monad m
    • In the type signature for:
           withMTRef :: (Monad m, ModifyRef sr m PureMT) =>
                        (PureMT -> (t, PureMT)) -> sr -> m t
[ 6 of 11] Compiling Data.Random.Source.Std ( src/Data/Random/Source/Std.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/Std.o )
[ 7 of 11] Compiling Data.Random.Source.StdGen ( src/Data/Random/Source/StdGen.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/StdGen.o )

src/Data/Random/Source/StdGen.hs:67:1: warning: [-Wredundant-constraints]
    • Redundant constraint: Monad m
    • In the type signature for:
           getRandomPrimFromRandomGenRef :: (Monad m, ModifyRef sr m g,
                                             RandomGen g) =>
                                            sr -> Prim a -> m a
[ 8 of 11] Compiling Data.Random.Source ( src/Data/Random/Source.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source.o )
[ 9 of 11] Compiling Data.Random.Source.DevRandom ( src/Data/Random/Source/DevRandom.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/DevRandom.o )
[10 of 11] Compiling Data.Random.Source.IO ( src/Data/Random/Source/IO.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/IO.o )
[11 of 11] Compiling Data.Random.Source.MWC ( src/Data/Random/Source/MWC.hs, .stack-work/dist/x86_64-linux/Cabal-1.24.0.0/build/Data/Random/Source/MWC.o )
Installing library in
/home/chaosrobie/.stack/snapshots/x86_64-linux/lts-7.14/8.0.1/lib/x86_64-linux-ghc-8.0.1/random-source-0.3.0.6-9Kd6KhtNNMs92HTzA5obc8
Registering random-source-0.3.0.6...
